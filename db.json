{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/resume.html","path":"resume.html","modified":0,"renderable":1},{"_id":"themes/next/source/resume_config/is","path":"resume_config/is","modified":0,"renderable":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/resume_config/AuthenticationService.Authenticate","path":"resume_config/AuthenticationService.Authenticate","modified":0,"renderable":1},{"_id":"themes/next/source/resume_config/css","path":"resume_config/css","modified":0,"renderable":1},{"_id":"themes/next/source/resume_config/demo.css","path":"resume_config/demo.css","modified":0,"renderable":1},{"_id":"themes/next/source/resume_config/font-awesome.min.css","path":"resume_config/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/resume_config/init.js","path":"resume_config/init.js","modified":0,"renderable":1},{"_id":"themes/next/source/resume_config/lime.css","path":"resume_config/lime.css","modified":0,"renderable":1},{"_id":"themes/next/source/resume_config/responsive.css","path":"resume_config/responsive.css","modified":0,"renderable":1},{"_id":"themes/next/source/resume_config/stats.js","path":"resume_config/stats.js","modified":0,"renderable":1},{"_id":"themes/next/source/resume_config/style.css","path":"resume_config/style.css","modified":0,"renderable":1},{"_id":"themes/next/source/resume_config/styleswitcher.js","path":"resume_config/styleswitcher.js","modified":0,"renderable":1},{"_id":"themes/next/source/resume_config/validator.min.js","path":"resume_config/validator.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/resume_config/wow.min.js","path":"resume_config/wow.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/resume_config/animate.css","path":"resume_config/animate.css","modified":0,"renderable":1},{"_id":"themes/next/source/resume_config/common.js","path":"resume_config/common.js","modified":0,"renderable":1},{"_id":"themes/next/source/resume_config/jquery.min.js","path":"resume_config/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/resume_config/js","path":"resume_config/js","modified":0,"renderable":1},{"_id":"themes/next/source/resume_config/masonry.pkgd.js","path":"resume_config/masonry.pkgd.js","modified":0,"renderable":1},{"_id":"themes/next/source/resume_config/materialize.min.js","path":"resume_config/materialize.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/resume_config/util.js","path":"resume_config/util.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/resume_config/materialize.min.css","path":"resume_config/materialize.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/LICENSE","path":"vendors/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/README.md","path":"vendors/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/bower.json","path":"vendors/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","path":"vendors/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/bower.json","path":"vendors/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","path":"vendors/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","path":"vendors/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","path":"vendors/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","path":"vendors/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","path":"vendors/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/bower.json","path":"vendors/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","path":"vendors/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","path":"vendors/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","path":"vendors/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/resume_config/profile-img.jpg","path":"resume_config/profile-img.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","path":"vendors/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","path":"vendors/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","path":"vendors/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","path":"vendors/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","path":"vendors/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","path":"vendors/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","path":"vendors/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","path":"vendors/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","path":"vendors/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","path":"vendors/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","path":"vendors/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","path":"vendors/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","path":"vendors/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","path":"vendors/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery/index.js","path":"vendors/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","path":"vendors/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","path":"vendors/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.png","path":"images/avatar.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","path":"vendors/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","path":"vendors/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","path":"vendors/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","path":"vendors/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.js","path":"vendors/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","path":"vendors/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/next/.bowerrc","hash":"80e096fdc1cf912ee85dd9f7e6e77fd40cf60f10","modified":1488459227000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1488459228000},{"_id":"themes/next/.gitignore","hash":"c8d6a73b9e17f0f8a3716e4ada6960d3180425a6","modified":1488459445000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1488459228000},{"_id":"themes/next/.javascript_ignore","hash":"d619ee13031908cd72666e4ff652d2ea3483b1c3","modified":1488459228000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1488459445000},{"_id":"themes/next/README.en.md","hash":"565ba52b3825b85a9f05b41183caca7f18b741d4","modified":1488459228000},{"_id":"themes/next/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1488459228000},{"_id":"themes/next/_config.yml","hash":"782dacd6a4b86ae206bf31e21988566e1973c166","modified":1498885166000},{"_id":"themes/next/bower.json","hash":"f89c6700a11d81e067cc97273ca6bf96cb88c8f9","modified":1488459227000},{"_id":"themes/next/gulpfile.coffee","hash":"26e5b1b945704c8bc78b928feede895c4c111c95","modified":1488459228000},{"_id":"themes/next/package.json","hash":"63e9c0f1dd9e5d7f51b4ae383981ef939a2ed45d","modified":1488459445000},{"_id":"source/_posts/1小时利用VPS搭建SVN.md","hash":"eab6dcef7e6d9ee1816f020323565aeafd923d55","modified":1488459227000},{"_id":"source/_posts/1小时利用VPS搭配Hexo建立个人博客.md","hash":"a63cc44bd8e15891eff5cad1ce4de4dee4085802","modified":1488459227000},{"_id":"source/_posts/1小时教你理解HTTP，TCP，UDP，Socket，WebSocket.md","hash":"254e785215d43757810796de75b7e04edf8c60d9","modified":1488459227000},{"_id":"source/_posts/1小时理解并总结iOS7-10推送通知流程.md","hash":"7910d87ea434a81ddcff771540dcb4256b2b39ad","modified":1488459227000},{"_id":"source/_posts/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1572517202184},{"_id":"source/_posts/一路向北.md","hash":"cd4a7ef82634167cac52a3f3ec4fa4142947b53d","modified":1488459227000},{"_id":"source/_posts/女神不仅仅是你的目标，更是得手之后的努力.md","hash":"7441b91c3643f136a4e73cd20a3a8b26d9948c89","modified":1572516453345},{"_id":"source/_posts/老人.md","hash":"07f4d0e6ea0d3fcc588221b10ef7dfbaa3b514b3","modified":1488459227000},{"_id":"source/_posts/自饮故乡酒-未尽故乡情.md","hash":"334b3f153c91fd774fbde127bd41c0b0b1abc898","modified":1488459227000},{"_id":"source/_posts/造大学的日子.md","hash":"dd2a61a288a85305d29d7462c9eb54055d77199f","modified":1488459227000},{"_id":"source/_posts/那些一个人的日子-才是你蜕变的时光.md","hash":"92e7f10e106c392a3e90a1358e6697563c11edbe","modified":1488459227000},{"_id":"source/categories/index.md","hash":"0db7d0890226780c09eb0d6e069d057f0cbb55df","modified":1488459227000},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1488459237000},{"_id":"themes/next/.git/config","hash":"bf7d1df65cf34d0f25a7184a58c37a09f72e4be7","modified":1488459237000},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1488459237000},{"_id":"themes/next/.git/index","hash":"c3a2427f1f8f606c65fc103bbc855873f7c7e6e4","modified":1488459237000},{"_id":"themes/next/.git/packed-refs","hash":"5299dd07c22750af4a0d99f89ea2c8e2d52787e3","modified":1488459237000},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5ab257af816986cd0e53f9527a92d5934ac70ae9","modified":1488459237000},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"c2024ded82143807c28a299c5fe6b927ef3525ff","modified":1488459237000},{"_id":"themes/next/languages/de.yml","hash":"786afba25cfc98845a20d9901823ebeebcd1cbbf","modified":1488459445000},{"_id":"themes/next/languages/default.yml","hash":"9db835c0543ade5a89bc80ec5a898203227cf3d8","modified":1488459445000},{"_id":"themes/next/languages/en.yml","hash":"f03799cbdb5a33064ead080bcac4baca1f6bc5f9","modified":1488459445000},{"_id":"themes/next/languages/fr-FR.yml","hash":"1a084623c39de74301f3e92f9388a3a815a542ca","modified":1488459445000},{"_id":"themes/next/languages/id.yml","hash":"147c01e41b931085ad14250fa900c2249dcbbdd7","modified":1488459445000},{"_id":"themes/next/languages/ja.yml","hash":"a2c7b6301b5474aab798946fb700289df237c3cf","modified":1488459445000},{"_id":"themes/next/languages/ko.yml","hash":"ce8b047c89daae77c03482fc76f16ffec6bdbf2d","modified":1488459445000},{"_id":"themes/next/languages/pt-BR.yml","hash":"462aa865ca3d479bcf6b363cba61247b50f230ff","modified":1488459445000},{"_id":"themes/next/languages/pt.yml","hash":"ca239b39bf65c9462e59d51b12f0fe566d453197","modified":1488459445000},{"_id":"themes/next/languages/ru.yml","hash":"cc7b964a46587aea0e57b0a5269d8fd25570858e","modified":1488459445000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"378b241b3aee9feced70035ef48bb27441c9c17d","modified":1498885166000},{"_id":"themes/next/languages/zh-hk.yml","hash":"519ab3d817ec3bc5bfc91159c494b6b3c170bea7","modified":1488459445000},{"_id":"themes/next/languages/zh-tw.yml","hash":"6b1f345aaefc13e6723dc8a6741b59ac05c20dfd","modified":1488459445000},{"_id":"themes/next/layout/_layout.swig","hash":"74157f6cfd679ea11febec632542793f37c5e5d4","modified":1488459445000},{"_id":"themes/next/layout/archive.swig","hash":"b5b59d70fc1563f482fa07afd435752774ad5981","modified":1488459445000},{"_id":"themes/next/layout/category.swig","hash":"6422d196ceaff4220d54b8af770e7e957f3364ad","modified":1488459445000},{"_id":"themes/next/layout/index.swig","hash":"427d0b95b854e311ae363088ab39a393bf8fdc8b","modified":1488459445000},{"_id":"themes/next/layout/page.swig","hash":"f63c0a4fa5eeba8ea18f3137c4b8c65f9c0fa341","modified":1488459445000},{"_id":"themes/next/layout/post.swig","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1488459445000},{"_id":"themes/next/layout/tag.swig","hash":"07cf49c49c39a14dfbe9ce8e7d7eea3d4d0a4911","modified":1488459445000},{"_id":"themes/next/source/resume.html","hash":"2abaf1bf735dd4cac3490123d1040e89d81dcb60","modified":1497747320000},{"_id":"themes/next/scripts/merge-configs.js","hash":"0c56be2e85c694247cfa327ea6d627b99ca265e8","modified":1488459227000},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1488459227000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1488459227000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1488459227000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1488459237000},{"_id":"themes/next/source/resume_config/is","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1497621794000},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1488459237000},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1488459237000},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1488459237000},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1488459237000},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1488459237000},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1488459237000},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1488459237000},{"_id":"themes/next/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1488459237000},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1488459237000},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1488459237000},{"_id":"themes/next/.git/info/exclude","hash":"bb5a85730dcf100facee799c05cc4f6affec0745","modified":1488459445000},{"_id":"themes/next/.git/logs/HEAD","hash":"e84b3ce6c04385d78dcd8cfbd6c184f2fabc6bf1","modified":1488459237000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"43c3433155ccd9abcbe7dce2e6bfa1f3a66af18b","modified":1488459445000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"37e5b7c42ec17b9b6b786c5512bcc481a21c974e","modified":1488459445000},{"_id":"themes/next/layout/_macro/post.swig","hash":"f3895bf44a9fb7c462f2e57b9a914703c2f152ba","modified":1488459445000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"d7043c29eca1aa574c79f910a9db1c905aa8380b","modified":1488459445000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"14e785adeb0e671ba0ff9a553e6f0d8def6c670c","modified":1488459445000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"58fd826ca75b0cbc48b61a58da4b841e2fa34403","modified":1488459445000},{"_id":"themes/next/layout/_partials/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1488459445000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"4fe588ff8ba8587885c2936db2df490774f89e10","modified":1488459445000},{"_id":"themes/next/layout/_partials/head.swig","hash":"6b0c495b8154ef8b2d2cb0a554e164ff22cdc962","modified":1488459445000},{"_id":"themes/next/layout/_partials/header.swig","hash":"eb028685cb3c329537bbced06c063d23e6a33817","modified":1488459445000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1488459445000},{"_id":"themes/next/layout/_partials/search.swig","hash":"011b9d6c9f0a2f4654908ea20b9391f9b7981271","modified":1488459445000},{"_id":"themes/next/layout/_scripts/baidu-push.swig","hash":"82d060fe055d6e423bbc9199f82dfe5c68e74779","modified":1488459445000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1488459445000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1488459445000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"0b91cadecead8e0b5211cc42b085998d94af503a","modified":1488459445000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1488459237000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1488459236000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1488459236000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1488459236000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1488459236000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1488459236000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1488459236000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1488459236000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1488459236000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1488459236000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1488459236000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1488459236000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1488459236000},{"_id":"themes/next/source/resume_config/AuthenticationService.Authenticate","hash":"8eda40a2cbcea8f776a459deb484aa4628a25874","modified":1497621794000},{"_id":"themes/next/source/resume_config/css","hash":"08cbdcebe3880ecf1eafdb004ad411b3400c45ac","modified":1497621794000},{"_id":"themes/next/source/resume_config/demo.css","hash":"3e3454578156705c82ebb68bcad6242d54c1916f","modified":1497621794000},{"_id":"themes/next/source/resume_config/font-awesome.min.css","hash":"525df50c750e557a9346548e36a5f00be80e3674","modified":1497621794000},{"_id":"themes/next/source/resume_config/init.js","hash":"3e5d454dcb544051c0eebd1c27a91c4562591d3f","modified":1497621794000},{"_id":"themes/next/source/resume_config/lime.css","hash":"cca52d677f15405abf7e06ed94d2b923adb5d83e","modified":1497621794000},{"_id":"themes/next/source/resume_config/responsive.css","hash":"c23a6bb84929ad4854ef7bd58ccfc9752c38e9f1","modified":1497621794000},{"_id":"themes/next/source/resume_config/stats.js","hash":"39f7ad1de2503e1ef1bd0dd5c3f792d1adb190f7","modified":1497621794000},{"_id":"themes/next/source/resume_config/style.css","hash":"fe819cfb86756cce031fad1ae4fd0174f5102746","modified":1497621794000},{"_id":"themes/next/source/resume_config/styleswitcher.js","hash":"0f4982b5829bb8368956d669bdb3c3f19412fcf3","modified":1497621794000},{"_id":"themes/next/source/resume_config/validator.min.js","hash":"1d7853f6b746edf5b499514b39816a4680005166","modified":1497621794000},{"_id":"themes/next/source/resume_config/wow.min.js","hash":"b2236ac76b8f6f2b78392a2c620bd0ee7d5b1048","modified":1497621794000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1488459227000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"3acce36db0feb11a982c6c799aa6b6b47df2827c","modified":1488459227000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1488459227000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1488459445000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1488459445000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1488459236000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1488459236000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1488459236000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1488459237000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1488459237000},{"_id":"themes/next/source/resume_config/animate.css","hash":"d989bf76974ffe13a6072e6fef89c2c242003742","modified":1497621794000},{"_id":"themes/next/source/resume_config/common.js","hash":"153d9f64fe497b4d37584fbc5829e19411e9a33e","modified":1497621794000},{"_id":"themes/next/source/resume_config/jquery.min.js","hash":"62c4042e9ebc691a5372d653b424512a561d1670","modified":1497621794000},{"_id":"themes/next/source/resume_config/js","hash":"3083a55be4d0bf5aaa40edb3cce6d46b481e5aa1","modified":1497621794000},{"_id":"themes/next/source/resume_config/masonry.pkgd.js","hash":"8c1f952867248dda2098378f865f1c67810d1f99","modified":1497621794000},{"_id":"themes/next/source/resume_config/materialize.min.js","hash":"a9a243df96e132ab9ae17e2dfed46b3ce8de3930","modified":1497621794000},{"_id":"themes/next/source/resume_config/util.js","hash":"9e55c31cc6fa7f889a3cb4db2c636b4f7ca535f3","modified":1497621794000},{"_id":"themes/next/.git/refs/heads/master","hash":"a000ff7ceba1704584e39c908e83fe3db5859335","modified":1488459237000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1488459445000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"ff5523d5dacaa77a55a24e50e6e6530c3b98bfad","modified":1488459445000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1488459445000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1488459445000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"c07f7b2f264e5215b8ed42d67e8cef2477558364","modified":1488459445000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"7ca5cb4daa58b3504e17f3e02975e794bc634658","modified":1488459445000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1488459445000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1488459445000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1488459445000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1488459445000},{"_id":"themes/next/layout/_scripts/third-party/analytics.swig","hash":"0a89c04055bade7baa5962f1d5aefe438d83a244","modified":1488459445000},{"_id":"themes/next/layout/_scripts/third-party/comments.swig","hash":"907b931d775d32405d02a25b3b0a3ac03bf804d0","modified":1488459445000},{"_id":"themes/next/layout/_scripts/third-party/lean-analytics.swig","hash":"92dc60821307fc9769bea9b2d60adaeb798342af","modified":1488459445000},{"_id":"themes/next/layout/_scripts/third-party/localsearch.swig","hash":"7f7148c8f52e4d3cfc070d964160362179fa8e91","modified":1488459445000},{"_id":"themes/next/layout/_scripts/third-party/mathjax.swig","hash":"5bafc33f57508d1d04a9930165240f6e9efa8d6d","modified":1488459445000},{"_id":"themes/next/layout/_scripts/third-party/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1488459445000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1488459237000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"78a83c38f69a8747bb74e420e6c9eeef1ea76525","modified":1488459236000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"715d5b40dc52f319fe4bff0325beb874774d9bd9","modified":1488459236000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1488459237000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"3ead77befa064d6327dc7afd0a5af7be59a5f196","modified":1488459237000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"17624186f7a1f28daddea258d044f8e03b2f4bea","modified":1488459237000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1488459237000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1488459237000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1488459237000},{"_id":"themes/next/source/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1488459237000},{"_id":"themes/next/source/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1488459237000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1488459237000},{"_id":"themes/next/source/js/src/utils.js","hash":"e5cb720894c4bc28ca8f10b33df127fb394018d9","modified":1488459237000},{"_id":"themes/next/source/resume_config/materialize.min.css","hash":"b21268094cd26ea8eb06fed7c915481fc02fe4b3","modified":1497621794000},{"_id":"themes/next/source/vendors/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1488459233000},{"_id":"themes/next/source/vendors/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1488459233000},{"_id":"themes/next/source/vendors/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1488459228000},{"_id":"themes/next/source/vendors/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1488459228000},{"_id":"themes/next/source/vendors/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1488459228000},{"_id":"themes/next/source/vendors/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1488459228000},{"_id":"themes/next/source/vendors/font-awesome/.bower.json","hash":"7da985a99674e54f514d4fd9fcd3bcea6e7e41d5","modified":1488459228000},{"_id":"themes/next/source/vendors/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1488459228000},{"_id":"themes/next/source/vendors/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1488459233000},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","hash":"69a4c537d167b68a0ccf1c6febd138aeffca60d6","modified":1488459228000},{"_id":"themes/next/source/vendors/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1488459228000},{"_id":"themes/next/source/vendors/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1488459228000},{"_id":"themes/next/source/vendors/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1488459233000},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1488459233000},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1488459233000},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1488459233000},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1488459233000},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1488459233000},{"_id":"themes/next/source/vendors/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1488459234000},{"_id":"themes/next/source/vendors/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1488459234000},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1488459234000},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1488459234000},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1488459234000},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"e84b3ce6c04385d78dcd8cfbd6c184f2fabc6bf1","modified":1488459237000},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1488459237000},{"_id":"themes/next/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"7c43d66da93cde65b473a7d6db2a86f9a42647d6","modified":1488459445000},{"_id":"themes/next/layout/_scripts/third-party/analytics/busuanzi-counter.swig","hash":"4fcbf57c4918528ab51d3d042cff92cf5aefb599","modified":1488459445000},{"_id":"themes/next/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"1e3e1c6231408e18e8485a8e0e59e8880349b210","modified":1488459445000},{"_id":"themes/next/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"394d008e5e94575280407ad8a1607a028026cbc3","modified":1488459445000},{"_id":"themes/next/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"30a23fa7e816496fdec0e932aa42e2d13098a9c2","modified":1488459445000},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1488459445000},{"_id":"themes/next/layout/_scripts/third-party/comments/disqus.swig","hash":"bff3b18f56175c53f3bc6d733166c4d998e08732","modified":1488459445000},{"_id":"themes/next/layout/_scripts/third-party/comments/duoshuo.swig","hash":"696666141cdd204fd8818ac2ad18f05e320f8587","modified":1488459445000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"b49efc66bd055a2d0be7deabfcb02ee72a9a28c8","modified":1488459237000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1488459237000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1488459237000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"10994990d6e0b4d965a728a22cf7f6ee29cae9f6","modified":1488459237000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1488459237000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1488459237000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1488459237000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"5304f99581da3a31de3ecec959b7adf9002fde83","modified":1488459237000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"54c90cf7bdbf5c596179d8dae6e671bad1292662","modified":1488459237000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1488459237000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"013619c472c7e4b08311c464fcbe9fcf5edde603","modified":1488459237000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1488459237000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1488459237000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1488459237000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1488459237000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1488459237000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"4303776991ef28f5742ca51c7dffe6f12f0acf34","modified":1488459237000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1488459237000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1488459237000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"6ed60cc621bac096c0ed7534fa25b1a52dc571d4","modified":1488459236000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1488459236000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"c2c6c4f6434b4f94aac2af5861cd769427f0ee10","modified":1488459236000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1488459236000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1488459236000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"be22ad34f546a07f6d56b424338cdd898683eea4","modified":1488459236000},{"_id":"themes/next/source/css/_schemes/Pisces/_full-image.styl","hash":"938d39eedc6e3d33918c1145a5bf1e79991d3fcf","modified":1488459236000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"8d7cecde4933900c7df2db9d0a98f5f82f88dc93","modified":1488459236000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"d09280e5b79f3b573edb30f30c7a5f03ac640986","modified":1488459236000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1488459236000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"d4b7bd610ca03dbb2f5b66631c0e84a79fb4660b","modified":1488459236000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"1b10ba2d3ad0c063c418dc94a0b7e0db4b342c53","modified":1488459236000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"7506e7490c69a200831393c38d25e91c156bd471","modified":1488459237000},{"_id":"themes/next/source/resume_config/profile-img.jpg","hash":"20d9dda119cae86b5088cfe34e3cdfb9d8e4a01f","modified":1497621794000},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1488459233000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1488459233000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1488459233000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1488459233000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1488459233000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1488459233000},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1488459233000},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1488459233000},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1488459233000},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1488459228000},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1488459228000},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","hash":"3b87c2560832748cd06f9bfd2fd6ea8edbdae8c7","modified":1488459228000},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1488459228000},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","hash":"05ea25bc9b3ac48993e1fee322d3bc94b49a6e22","modified":1488459228000},{"_id":"themes/next/source/vendors/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1488459228000},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1488459233000},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1488459233000},{"_id":"themes/next/.git/objects/pack/pack-9c35dd2569afab397db073db4eeb1c3f4a48f886.idx","hash":"d0f1be4386480b15e5e8f48166f31675cfeff035","modified":1488459445000},{"_id":"themes/next/source/images/avatar.png","hash":"e5c8dfd15682f7d3e410831a8dc51d6d672ebfdb","modified":1488459236000},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1488459233000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1488459233000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1488459233000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1488459233000},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"e84b3ce6c04385d78dcd8cfbd6c184f2fabc6bf1","modified":1488459237000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1488459237000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1488459237000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1488459237000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"c890ce7fe933abad7baf39764a01894924854e92","modified":1488459237000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1488459237000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1488459237000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"4da051c7f3924fa2db1e73c55b2baf1c2c150255","modified":1488459237000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"90f8f9706cd7fe829cf06e9959a65fd3f8b994fa","modified":1488459237000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1488459237000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1488459237000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"3c46efd6601e268093ce6d7b1471d18501878f0d","modified":1488459237000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1488459237000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"8fae54591877a73dff0b29b2be2e8935e3c63575","modified":1488459237000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1488459237000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"b25132fe6a7ad67059a2c3afc60feabb479bdd75","modified":1488459237000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1488459237000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"d543d1377c1f61b70e3adb6da0eb12797552e5f2","modified":1488459237000},{"_id":"themes/next/source/css/_common/components/post/post-more-link.styl","hash":"15063d79b5befc21820baf05d6f20cc1c1787477","modified":1488459237000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"cbca4842a54950e2934b3b8f3cd940f122111aef","modified":1488459237000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"e792c8dc41561c96d128e9b421187f1c3dc978a0","modified":1488459237000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1488459237000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"963105a531403d7aad6d9e5e23e3bfabb8ec065a","modified":1488459237000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1488459237000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"4eb18b12fa0ea6c35925d9a64f64e2a7dae8c7fd","modified":1488459237000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"2e7ec9aaa3293941106b1bdd09055246aa3c3dc6","modified":1488459237000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1488459237000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"c44f6a553ec7ea5508f2054a13be33a62a15d3a9","modified":1488459237000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1488459237000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1488459237000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"7690b9596ec3a49befbe529a5a2649abec0faf76","modified":1488459237000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"2d3abbc85b979a648e0e579e45f16a6eba49d1e7","modified":1488459237000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"234facd038f144bd0fe09a31ed1357c5d74c517f","modified":1488459237000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1488459237000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1488459237000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"618f73450cf541f88a4fddc3d22898aee49d105d","modified":1488459237000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1488459237000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"8e66c2635d48e11de616bb29c4b1323698eebc0a","modified":1488459237000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1488459237000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"b03f891883446f3a5548b7cc90d29c77e62f1053","modified":1488459237000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1488459237000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1488459237000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"795d94561888d31cb7a6ff4a125596809ea69b7d","modified":1488459237000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"3afc459442c132c480d1d832f1a872f1070bb048","modified":1488459237000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1488459237000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1488459237000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1488459236000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1488459233000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1488459233000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1488459233000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1488459233000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1488459233000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1488459233000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1488459233000},{"_id":"themes/next/source/vendors/velocity/velocity.js","hash":"e63dc7cea055ca60a95d286f32349d88b10c5a4d","modified":1488459234000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","hash":"2b3c8ba7008cc014d8fb37abc6f9f49aeda83824","modified":1488459233000},{"_id":"themes/next/.git/objects/pack/pack-9c35dd2569afab397db073db4eeb1c3f4a48f886.pack","hash":"c87504504f6d620710e77b50a9b72815be02bf44","modified":1488459445000},{"_id":"public/baidusitemap.xml","hash":"e3107552d86c357562345226d4202cd3e0eb9de7","modified":1572517341126},{"_id":"public/sitemap.xml","hash":"d48a70e2e5dd7bcfd5cd248a4bbb98aef0256fa3","modified":1572517341126},{"_id":"public/categories/index.html","hash":"636c5a9584db7a281a3dc3b544bea15ca026deaf","modified":1572517341135},{"_id":"public/archives/2016/index.html","hash":"195a57f21e1974bd9da949b92e6349172eac0c80","modified":1572517341135},{"_id":"public/archives/2016/02/index.html","hash":"ccea3f1759352fa94eaacff4e368d08a37a58b4b","modified":1572517341135},{"_id":"public/archives/2016/03/index.html","hash":"b5d373abec31b7cf8894bacd0f6a9cd8f295b16a","modified":1572517341136},{"_id":"public/archives/2016/04/index.html","hash":"01e9461d713cc7314e0389f4cd991692ee4787e4","modified":1572517341136},{"_id":"public/archives/2016/05/index.html","hash":"0f987a2dcc6fc15f1f1f20b25cf62a6918e25264","modified":1572517341136},{"_id":"public/archives/2016/09/index.html","hash":"79b1d486f082a7fd6bf0a682279653b3bc4b5cd5","modified":1572517341136},{"_id":"public/archives/2016/10/index.html","hash":"aa84db262700be61d05400b08658018235f966e6","modified":1572517341136},{"_id":"public/archives/2016/12/index.html","hash":"48fce9109f695b4a64a3dfc019bc8d7c1ccf46ef","modified":1572517341136},{"_id":"public/archives/2017/index.html","hash":"db2c7b7b35557b21628b0d8587171b2328c5eeb3","modified":1572517341136},{"_id":"public/archives/2017/02/index.html","hash":"36dc80fc3066ebbd79598797cf31a6190fa7c6e0","modified":1572517341136},{"_id":"public/categories/折腾/index.html","hash":"c6fd62ac3949f96b20d7db7b116785156313c9ba","modified":1572517341136},{"_id":"public/categories/文字/index.html","hash":"e0780360c1a1d7a0c0a1873c5047f4583e8ad477","modified":1572517341136},{"_id":"public/2016/12/22/1小时教你理解HTTP，TCP，UDP，Socket，WebSocket/index.html","hash":"25297eb35cb81ae53dd404643e5599fad14f137c","modified":1572517341137},{"_id":"public/2016/10/29/自饮故乡酒-未尽故乡情/index.html","hash":"11be6ccc41d9c50c80fe79a8d740b32cc6128c62","modified":1572517341137},{"_id":"public/2016/10/27/1小时利用VPS搭建SVN/index.html","hash":"a6e3d0f602fc4b5c9bf93ac6a2239f65ffaffd07","modified":1572517341137},{"_id":"public/2016/09/24/1小时利用VPS搭配Hexo建立个人博客/index.html","hash":"335b5a5eb23a34e16ef8aecc44e52b3adefe33d8","modified":1572517341137},{"_id":"public/2016/09/01/女神不仅仅是你的目标，更是得手之后的努力/index.html","hash":"c594bfb2c7ce34366a4192c22afb72d07baf28be","modified":1572517341137},{"_id":"public/2016/05/25/那些一个人的日子-才是你蜕变的时光/index.html","hash":"fde8e19bdb6a32e922b087e9dc8b8c79a999f544","modified":1572517341137},{"_id":"public/2016/04/10/一路向北/index.html","hash":"6ede814f6e245ba8ab3e2dce3ac4810d8a53dd63","modified":1572517341137},{"_id":"public/2016/03/20/老人/index.html","hash":"fca69067204ce94866a30b53b2a13c60e2b8fec4","modified":1572517341137},{"_id":"public/2016/02/15/造大学的日子/index.html","hash":"8f33a0d1aed85a8d24a3c9b94d8aacbfdfc8408f","modified":1572517341137},{"_id":"public/index.html","hash":"54f4a9074ca044291f0c8d57f27dd3a93ded7650","modified":1572517341137},{"_id":"public/archives/index.html","hash":"cb9f6b338e7205620698d3aa9c0257cd165c306c","modified":1572517341138},{"_id":"public/2017/02/25/1小时理解并总结iOS7-10推送通知流程/index.html","hash":"708ebcce2df5ac87ed7c5a6bf8bc9d9a9c5551b8","modified":1572517341138},{"_id":"public/assets/js/APlayer.min.js","hash":"b35bcf96b0e9c4045320f26d2c4af2946554cd54","modified":1572517341139}],"Category":[{"name":"折腾","_id":"ck2ek6qav000bi3nmhnbsy5au"},{"name":"文字","_id":"ck2ek6qb2000fi3nmxwo6b57h"}],"Data":[],"Page":[{"title":"categories","date":"2016-09-20T06:33:08.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2016-09-20 14:33:08\ntype: \"categories\"\n---\n","updated":"2017-03-02T12:53:47.000Z","path":"categories/index.html","comments":1,"layout":"page","_id":"ck2ek6q840000i3nm3auaxpmx","content":"<script src=\"/assets/js/APlayer.min.js\"> </script>","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"1小时利用VPS搭建SVN","date":"2016-10-27T01:10:18.000Z","_content":"SVN的搭建可以用独立主机安装，也可以apache为基础安装，以便于web访问，基于懒人的原则，本文介绍的是基于独立主机安装的。\n\n\n#### 一、用途\n项目开发中，总会碰到需要回退版本或者打包阶段性版本的情况，公司的项目还好，可以利用公司的SVN或者git中进行管理，但如果是自己的项目，除了挂在github上进行版本管理，最方便的就是利用手头的VPS主机搭建一个私人的SVN了。\n\n#### 二、安装环境\n下面是我的一些安装环境，其他环境没试过，基本通用。\n\n- VPS：Centos6 64位操作系统。\n- Mac：这个无影响，终端方便而已。\n\n#### 三、具体步骤\n- **1、终端登录VPS**\n\n- **2、安装SVN**\n\n```\nyum install subversion\n```\n\n<!--more-->\n\n- **3、创建SVN版本库**\n\n随便找个自己习惯的路径建立版本库，本文使用usr/local路径。\n在usr/local文件夹下新建svn文件夹\n\n```\nmkdir svn \n```\n建立工程文件夹，project随意取名。\n\n```\nsvnadmin create /usr/local/svn/project\n```\n\n- **4、修改svnserve.conf文件**\n\n打开下面的三行注释。\n\n```\nanon-access = read\nauth-access = write\npassword-db = passwd\n```\n*注意：默认无用户名认证登录的也会有只读权限，建议将anon-access 设为 none，禁止访问。*\n\n- **5、修改authz文件**\n\n```\n[groups]\ngroup1 = test1，test2，test3 \n[/foo/bar]\ntest1 = rw\ntest2 = r\n* =\n```\n创建一个名为group1的组，并指定三个用户test1，test2，test3。test1可读可写，test2仅读，test3和其他用户无任何权限。结合里面原有的注释应该很好理解。\n\n- **6、修改passwd文件**\n\n创建或修改用户密码。\n\n```\n[users]\ntest1 = 123456\ntest2 = 123456\ntest3 = 123456\n```\n\n- **7、启动SVN服务**\n\n```\nsvnserve -d -r /usr/local/svn\n```\n要设置开机启动的话就编辑/etc/rc.local文件，将上条命令添加进去就OK了。\n\n- **8、访问SVN**\n\n懒人的话使用SVN客户端连接，比如Cornerstone啥的，附上一张Cornerstone连接图，SVN默认端口为3690。\n![连接SVN配置图](http://upload-images.jianshu.io/upload_images/1723686-33312aa7a0604570.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n#### 四、总结\n整个流程较为简单，因为受限于不同VPS访问速度以及硬盘大小，首次上传项目时长可能和公司独立主机要稍长，但不影响代码同步操作。实测大约200M的项目首次import大概5分钟，当然这个会因VPS和本地带宽而异。\n> Have Fun~","source":"_posts/1小时利用VPS搭建SVN.md","raw":"---\ntitle: 1小时利用VPS搭建SVN\ndate: 2016-10-27 09:10:18\ncategories: 折腾\n---\nSVN的搭建可以用独立主机安装，也可以apache为基础安装，以便于web访问，基于懒人的原则，本文介绍的是基于独立主机安装的。\n\n\n#### 一、用途\n项目开发中，总会碰到需要回退版本或者打包阶段性版本的情况，公司的项目还好，可以利用公司的SVN或者git中进行管理，但如果是自己的项目，除了挂在github上进行版本管理，最方便的就是利用手头的VPS主机搭建一个私人的SVN了。\n\n#### 二、安装环境\n下面是我的一些安装环境，其他环境没试过，基本通用。\n\n- VPS：Centos6 64位操作系统。\n- Mac：这个无影响，终端方便而已。\n\n#### 三、具体步骤\n- **1、终端登录VPS**\n\n- **2、安装SVN**\n\n```\nyum install subversion\n```\n\n<!--more-->\n\n- **3、创建SVN版本库**\n\n随便找个自己习惯的路径建立版本库，本文使用usr/local路径。\n在usr/local文件夹下新建svn文件夹\n\n```\nmkdir svn \n```\n建立工程文件夹，project随意取名。\n\n```\nsvnadmin create /usr/local/svn/project\n```\n\n- **4、修改svnserve.conf文件**\n\n打开下面的三行注释。\n\n```\nanon-access = read\nauth-access = write\npassword-db = passwd\n```\n*注意：默认无用户名认证登录的也会有只读权限，建议将anon-access 设为 none，禁止访问。*\n\n- **5、修改authz文件**\n\n```\n[groups]\ngroup1 = test1，test2，test3 \n[/foo/bar]\ntest1 = rw\ntest2 = r\n* =\n```\n创建一个名为group1的组，并指定三个用户test1，test2，test3。test1可读可写，test2仅读，test3和其他用户无任何权限。结合里面原有的注释应该很好理解。\n\n- **6、修改passwd文件**\n\n创建或修改用户密码。\n\n```\n[users]\ntest1 = 123456\ntest2 = 123456\ntest3 = 123456\n```\n\n- **7、启动SVN服务**\n\n```\nsvnserve -d -r /usr/local/svn\n```\n要设置开机启动的话就编辑/etc/rc.local文件，将上条命令添加进去就OK了。\n\n- **8、访问SVN**\n\n懒人的话使用SVN客户端连接，比如Cornerstone啥的，附上一张Cornerstone连接图，SVN默认端口为3690。\n![连接SVN配置图](http://upload-images.jianshu.io/upload_images/1723686-33312aa7a0604570.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n#### 四、总结\n整个流程较为简单，因为受限于不同VPS访问速度以及硬盘大小，首次上传项目时长可能和公司独立主机要稍长，但不影响代码同步操作。实测大约200M的项目首次import大概5分钟，当然这个会因VPS和本地带宽而异。\n> Have Fun~","slug":"1小时利用VPS搭建SVN","published":1,"updated":"2017-03-02T12:53:47.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck2ek6q860001i3nmejcxfzo4","content":"<script src=\"/assets/js/APlayer.min.js\"> </script><p>SVN的搭建可以用独立主机安装，也可以apache为基础安装，以便于web访问，基于懒人的原则，本文介绍的是基于独立主机安装的。</p>\n<h4 id=\"一、用途\"><a href=\"#一、用途\" class=\"headerlink\" title=\"一、用途\"></a>一、用途</h4><p>项目开发中，总会碰到需要回退版本或者打包阶段性版本的情况，公司的项目还好，可以利用公司的SVN或者git中进行管理，但如果是自己的项目，除了挂在github上进行版本管理，最方便的就是利用手头的VPS主机搭建一个私人的SVN了。</p>\n<h4 id=\"二、安装环境\"><a href=\"#二、安装环境\" class=\"headerlink\" title=\"二、安装环境\"></a>二、安装环境</h4><p>下面是我的一些安装环境，其他环境没试过，基本通用。</p>\n<ul>\n<li>VPS：Centos6 64位操作系统。</li>\n<li>Mac：这个无影响，终端方便而已。</li>\n</ul>\n<h4 id=\"三、具体步骤\"><a href=\"#三、具体步骤\" class=\"headerlink\" title=\"三、具体步骤\"></a>三、具体步骤</h4><ul>\n<li><p><strong>1、终端登录VPS</strong></p>\n</li>\n<li><p><strong>2、安装SVN</strong></p>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install subversion</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<ul>\n<li><strong>3、创建SVN版本库</strong></li>\n</ul>\n<p>随便找个自己习惯的路径建立版本库，本文使用usr/local路径。<br>在usr/local文件夹下新建svn文件夹</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir svn</span><br></pre></td></tr></table></figure>\n<p>建立工程文件夹，project随意取名。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">svnadmin create /usr/local/svn/project</span><br></pre></td></tr></table></figure>\n<ul>\n<li><strong>4、修改svnserve.conf文件</strong></li>\n</ul>\n<p>打开下面的三行注释。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">anon-access = read</span><br><span class=\"line\">auth-access = write</span><br><span class=\"line\">password-db = passwd</span><br></pre></td></tr></table></figure>\n<p><em>注意：默认无用户名认证登录的也会有只读权限，建议将anon-access 设为 none，禁止访问。</em></p>\n<ul>\n<li><strong>5、修改authz文件</strong></li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[groups]</span><br><span class=\"line\">group1 = test1，test2，test3 </span><br><span class=\"line\">[/foo/bar]</span><br><span class=\"line\">test1 = rw</span><br><span class=\"line\">test2 = r</span><br><span class=\"line\">* =</span><br></pre></td></tr></table></figure>\n<p>创建一个名为group1的组，并指定三个用户test1，test2，test3。test1可读可写，test2仅读，test3和其他用户无任何权限。结合里面原有的注释应该很好理解。</p>\n<ul>\n<li><strong>6、修改passwd文件</strong></li>\n</ul>\n<p>创建或修改用户密码。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[users]</span><br><span class=\"line\">test1 = 123456</span><br><span class=\"line\">test2 = 123456</span><br><span class=\"line\">test3 = 123456</span><br></pre></td></tr></table></figure>\n<ul>\n<li><strong>7、启动SVN服务</strong></li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">svnserve -d -r /usr/local/svn</span><br></pre></td></tr></table></figure>\n<p>要设置开机启动的话就编辑/etc/rc.local文件，将上条命令添加进去就OK了。</p>\n<ul>\n<li><strong>8、访问SVN</strong></li>\n</ul>\n<p>懒人的话使用SVN客户端连接，比如Cornerstone啥的，附上一张Cornerstone连接图，SVN默认端口为3690。<br><img src=\"http://upload-images.jianshu.io/upload_images/1723686-33312aa7a0604570.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"连接SVN配置图\"></p>\n<h4 id=\"四、总结\"><a href=\"#四、总结\" class=\"headerlink\" title=\"四、总结\"></a>四、总结</h4><p>整个流程较为简单，因为受限于不同VPS访问速度以及硬盘大小，首次上传项目时长可能和公司独立主机要稍长，但不影响代码同步操作。实测大约200M的项目首次import大概5分钟，当然这个会因VPS和本地带宽而异。</p>\n<blockquote>\n<p>Have Fun~</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<p>SVN的搭建可以用独立主机安装，也可以apache为基础安装，以便于web访问，基于懒人的原则，本文介绍的是基于独立主机安装的。</p>\n<h4 id=\"一、用途\"><a href=\"#一、用途\" class=\"headerlink\" title=\"一、用途\"></a>一、用途</h4><p>项目开发中，总会碰到需要回退版本或者打包阶段性版本的情况，公司的项目还好，可以利用公司的SVN或者git中进行管理，但如果是自己的项目，除了挂在github上进行版本管理，最方便的就是利用手头的VPS主机搭建一个私人的SVN了。</p>\n<h4 id=\"二、安装环境\"><a href=\"#二、安装环境\" class=\"headerlink\" title=\"二、安装环境\"></a>二、安装环境</h4><p>下面是我的一些安装环境，其他环境没试过，基本通用。</p>\n<ul>\n<li>VPS：Centos6 64位操作系统。</li>\n<li>Mac：这个无影响，终端方便而已。</li>\n</ul>\n<h4 id=\"三、具体步骤\"><a href=\"#三、具体步骤\" class=\"headerlink\" title=\"三、具体步骤\"></a>三、具体步骤</h4><ul>\n<li><p><strong>1、终端登录VPS</strong></p>\n</li>\n<li><p><strong>2、安装SVN</strong></p>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install subversion</span><br></pre></td></tr></table></figure>","more":"<ul>\n<li><strong>3、创建SVN版本库</strong></li>\n</ul>\n<p>随便找个自己习惯的路径建立版本库，本文使用usr/local路径。<br>在usr/local文件夹下新建svn文件夹</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir svn</span><br></pre></td></tr></table></figure>\n<p>建立工程文件夹，project随意取名。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">svnadmin create /usr/local/svn/project</span><br></pre></td></tr></table></figure>\n<ul>\n<li><strong>4、修改svnserve.conf文件</strong></li>\n</ul>\n<p>打开下面的三行注释。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">anon-access = read</span><br><span class=\"line\">auth-access = write</span><br><span class=\"line\">password-db = passwd</span><br></pre></td></tr></table></figure>\n<p><em>注意：默认无用户名认证登录的也会有只读权限，建议将anon-access 设为 none，禁止访问。</em></p>\n<ul>\n<li><strong>5、修改authz文件</strong></li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[groups]</span><br><span class=\"line\">group1 = test1，test2，test3 </span><br><span class=\"line\">[/foo/bar]</span><br><span class=\"line\">test1 = rw</span><br><span class=\"line\">test2 = r</span><br><span class=\"line\">* =</span><br></pre></td></tr></table></figure>\n<p>创建一个名为group1的组，并指定三个用户test1，test2，test3。test1可读可写，test2仅读，test3和其他用户无任何权限。结合里面原有的注释应该很好理解。</p>\n<ul>\n<li><strong>6、修改passwd文件</strong></li>\n</ul>\n<p>创建或修改用户密码。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[users]</span><br><span class=\"line\">test1 = 123456</span><br><span class=\"line\">test2 = 123456</span><br><span class=\"line\">test3 = 123456</span><br></pre></td></tr></table></figure>\n<ul>\n<li><strong>7、启动SVN服务</strong></li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">svnserve -d -r /usr/local/svn</span><br></pre></td></tr></table></figure>\n<p>要设置开机启动的话就编辑/etc/rc.local文件，将上条命令添加进去就OK了。</p>\n<ul>\n<li><strong>8、访问SVN</strong></li>\n</ul>\n<p>懒人的话使用SVN客户端连接，比如Cornerstone啥的，附上一张Cornerstone连接图，SVN默认端口为3690。<br><img src=\"http://upload-images.jianshu.io/upload_images/1723686-33312aa7a0604570.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"连接SVN配置图\"></p>\n<h4 id=\"四、总结\"><a href=\"#四、总结\" class=\"headerlink\" title=\"四、总结\"></a>四、总结</h4><p>整个流程较为简单，因为受限于不同VPS访问速度以及硬盘大小，首次上传项目时长可能和公司独立主机要稍长，但不影响代码同步操作。实测大约200M的项目首次import大概5分钟，当然这个会因VPS和本地带宽而异。</p>\n<blockquote>\n<p>Have Fun~</p>\n</blockquote>"},{"title":"1小时利用VPS搭配Hexo建立个人博客","date":"2016-09-24T03:21:59.000Z","_content":"有了VPS，除了可以满足科学上网的需求，最简单实用的就算弄个小博客了，可以供学习和总结。\n\n本文也是我这个小白自个爬帖总结出来的，适应范围也是同等级的小白。先把效果放在前面：[个人博客地址](http://tangyi.ml)\n#### 一、准备条件\n- VPS\n> 这总得有一个吧，最低配置都行。实在没有的话可以换个组合，网上很多Hexo或者WordPress搭配Github啥的建立博客的，随便一搜都是一大堆，这里就不赘述了。\n- 域名\n> 这个也是硬性基本要求，不多说。免费的，收费的都行。\n\n#### 二、环境要求\n介绍下我的一些安装环境，其他环境没试过，就不打包票了：\n- VPS：搬瓦工VPS，要求Centos6操作系统。（其他VPS没试过，无关广告）\n- Mac：这个无影响，终端方便而已。\n- 域名：国外ML免费的域名，同类型还有tk,gq等等结尾的域名。冷门域名一般免费一年。地址：[域名注册入口](http://www.freenom.com)\n\n#### 三、安装一（VPS部分）\n- **1. 登录VPS**\n- **2. 更新一次系统**\n```\nyum update -y\n```\n- **3. 安装软件**\n```\nyum -y install wget;\nwget http://download.kanglesoft.com/easypanel/ep.sh -O ep.sh;\nsh ep.sh\n```\n\n<!--more-->\n\n\n> 解释一下上面三行命令：\n第一行是安装wget，用于文件下载，已安装的可以忽略。\n第二行是从给定地址下载软件，输出保存为ep.sh。安装的软件是kangle，web服务器和反向代理服务器。\n第三行就是执行了。\n然后就是静等上面走完。\n\n- **4. 修改mysql的密码**\n```\nmysqladmin -u root password 你的密码\n```\n>数据库目前没用上，评论或者其他高级功能可能会用得上。先把密码改了备份，防以后不时之需。\n\n- **5. 登录后台管理面板**\n```\nhttp://VPS地址:3312/admin/\n```\n>第一次登录的用户名为admin,密码kangle,登录成功后可在面板里自行修改密码。\n\n- **6. 初始化web服务器**\n![配置web服务器](http://upload-images.jianshu.io/upload_images/1723686-0eaccfb22b7762bf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n![初始化web服务器](http://upload-images.jianshu.io/upload_images/1723686-26491ac684bbf767.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n>配置下数据库，其他全部默认，第一次初始化服务器三个选项全选，以后再有初始化需求的时候默认会勾选后两个，如上图所示。\n\n- **7. 建立网站**\n![新建网站需要的设置](http://upload-images.jianshu.io/upload_images/1723686-f4a4ab89b16c84f1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n>网站名和密码用于登录FTP，名字随意。最好能区分你的网站，因为你可以同理建立你的多个子站。\n\n- **8. 登录网站**\n```\nhttp://VPS地址:3312/vhost\n```\n> 当然这也可以从后台管理面板中网站管理→所有网站进入。帐号密码即第7步设置的帐号密码。\n\n- **9. 绑定域名**\n![域名绑定](http://upload-images.jianshu.io/upload_images/1723686-f96c976d1930c717.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n> 接下来就是最简单的域名解析了，先进入你购买的域名对应管理页面，一般都有管理dns的，添加A记录到你的VPS地址。然后再回来把你域名添加上，如上图所示。\n\n- **10. VPS配置到此为止，剩下的就是将你的静态网页放入wwwroot文件夹。静态网页在接下来的Hexo部分将会生成在你的电脑本地，至于VPS文件和你电脑端网页同步的问题，因为服务器具备FTP功能，可以使用FTP管理工具，我这里推荐Yummy FTP，当然你也可以使用控制面板中的“在线文件”功能在线上传，如果你不觉得每次更新网站都得全部上传覆盖的话。**\n\n#### 四、安装二（本地Hexo部分）\n- **1.安装Node.js**，去[Node.js官网](https://nodejs.org)下载对应系统版本。\n- **2.安装Git**，安装过Xcode的可以跳过，[Git下载地址](https://git-scm.com/downloads)。\n- **3.安装Hexo**\n```\nsudo npm install -g hexo\n```\n- **4.生成静态网页**。在你要存储静态网页的路径下创建文件夹，打开终端cd到这个文件夹，执行如下命令，生成初始静态网页。\n```\nhexo init\n```\n执行完效果应该下图所示：\n![初始效果图](http://upload-images.jianshu.io/upload_images/1723686-0c87181cf6a4d844.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n> 常用文件夹说明：\n> ①_config.yml：站点配置文件，里面配置你网站名字，网站标题，作者信息，语言，主题等信息。具体如下：\nSite               ##修改以适应搜索引擎的收录\ntitle:       ##定义网站的标题\nsubtitle:            ##定义网站的副标题（不一定会显示）\ndescription:         ##定义网站的描述\nauthor:            ##定义网站的负责人\nemail:               ##定义网站负责人的电子邮件\nlanguage:            ##定义网站的语言，默认zh-Hans\nurl:                   ##定义访问的域名\nroot:  \t\t\t\t##定义所在Web文件夹的哪一个目录\npermalink: :year/:month/:day/:title/      ##定义时间格式\nsource_dir: source           ##定义从哪个文件夹获取博客资料              \npublic_dir: public           ##定义生成静态网站到哪个文件夹\n> ②source：存放需要发布的文章。默认生成的文件为md格式，支持markdown语法。\n> ③themes：里面默认有一个主题，丑得很一般。\n\n- **5.常用命令**\n```\nhexo new 名字 //新建文章，会在source/_posts下生成一个.md文件，不可直接复制生成新文件，否则部署生成会报错。\nhexo new page 页面名字 //生成新的页面，比如标签页默认没有，会显示404。\nhexo deploy 或 hexo d //部署到localhost，用于本地调试预览。\nhexo server 或 hexo s //启动本地预览服务，地址为http://localhost:4000/\nhexo generate 或 hexo g //会在你init的文件夹下生成public文件夹，里面包含全套静态网页代码。这里面的全部文件（不包括public文件夹）放入你服务器的wwwroot文件夹里就可以通过域名访问了。\nhexo clean //清空缓存，删除配置数据库及public文件夹。\n```\n- **6.更换主题**\n```\ncd themes\ngit clone 需要下载的主题地址\n```\n[Hexo官方主题地址](https://github.com/hexojs/hexo/wiki/Themes)在这里，我使用的是next主题，简单好看又容易弄。\n下载完后修改根目录站点配置文件_config.yml里面的theme: 为主题文件夹的名字来启用主题。注意冒号后有一个空格，注意和themes对应主题文件夹下的_config.yml主题配置文件进行区分~\n\n- **7.自定义主题**，修改成自己想要的样子。每个主题都有相关的配置文档，比如[Next使用文档](http://theme-next.iissnan.com/getting-started.html)，这里特别详细，我也不赘述了。\n\n- **8.更新文章**，只需将public文件夹文件全部同步到VPS的wwwroot文件夹就行了，我用的FTP工具，方法比较笨，没办法，懒。附上我的FTP连接图。登录帐号密码即VPS部分第7步的帐号密码。\n![FTP连接图](http://upload-images.jianshu.io/upload_images/1723686-2f68eae2286df49a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n>**开始折腾吧~**","source":"_posts/1小时利用VPS搭配Hexo建立个人博客.md","raw":"---\ntitle: 1小时利用VPS搭配Hexo建立个人博客\ndate: 2016-09-24 11:21:59\ncategories: 折腾\n---\n有了VPS，除了可以满足科学上网的需求，最简单实用的就算弄个小博客了，可以供学习和总结。\n\n本文也是我这个小白自个爬帖总结出来的，适应范围也是同等级的小白。先把效果放在前面：[个人博客地址](http://tangyi.ml)\n#### 一、准备条件\n- VPS\n> 这总得有一个吧，最低配置都行。实在没有的话可以换个组合，网上很多Hexo或者WordPress搭配Github啥的建立博客的，随便一搜都是一大堆，这里就不赘述了。\n- 域名\n> 这个也是硬性基本要求，不多说。免费的，收费的都行。\n\n#### 二、环境要求\n介绍下我的一些安装环境，其他环境没试过，就不打包票了：\n- VPS：搬瓦工VPS，要求Centos6操作系统。（其他VPS没试过，无关广告）\n- Mac：这个无影响，终端方便而已。\n- 域名：国外ML免费的域名，同类型还有tk,gq等等结尾的域名。冷门域名一般免费一年。地址：[域名注册入口](http://www.freenom.com)\n\n#### 三、安装一（VPS部分）\n- **1. 登录VPS**\n- **2. 更新一次系统**\n```\nyum update -y\n```\n- **3. 安装软件**\n```\nyum -y install wget;\nwget http://download.kanglesoft.com/easypanel/ep.sh -O ep.sh;\nsh ep.sh\n```\n\n<!--more-->\n\n\n> 解释一下上面三行命令：\n第一行是安装wget，用于文件下载，已安装的可以忽略。\n第二行是从给定地址下载软件，输出保存为ep.sh。安装的软件是kangle，web服务器和反向代理服务器。\n第三行就是执行了。\n然后就是静等上面走完。\n\n- **4. 修改mysql的密码**\n```\nmysqladmin -u root password 你的密码\n```\n>数据库目前没用上，评论或者其他高级功能可能会用得上。先把密码改了备份，防以后不时之需。\n\n- **5. 登录后台管理面板**\n```\nhttp://VPS地址:3312/admin/\n```\n>第一次登录的用户名为admin,密码kangle,登录成功后可在面板里自行修改密码。\n\n- **6. 初始化web服务器**\n![配置web服务器](http://upload-images.jianshu.io/upload_images/1723686-0eaccfb22b7762bf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n![初始化web服务器](http://upload-images.jianshu.io/upload_images/1723686-26491ac684bbf767.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n>配置下数据库，其他全部默认，第一次初始化服务器三个选项全选，以后再有初始化需求的时候默认会勾选后两个，如上图所示。\n\n- **7. 建立网站**\n![新建网站需要的设置](http://upload-images.jianshu.io/upload_images/1723686-f4a4ab89b16c84f1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n>网站名和密码用于登录FTP，名字随意。最好能区分你的网站，因为你可以同理建立你的多个子站。\n\n- **8. 登录网站**\n```\nhttp://VPS地址:3312/vhost\n```\n> 当然这也可以从后台管理面板中网站管理→所有网站进入。帐号密码即第7步设置的帐号密码。\n\n- **9. 绑定域名**\n![域名绑定](http://upload-images.jianshu.io/upload_images/1723686-f96c976d1930c717.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n> 接下来就是最简单的域名解析了，先进入你购买的域名对应管理页面，一般都有管理dns的，添加A记录到你的VPS地址。然后再回来把你域名添加上，如上图所示。\n\n- **10. VPS配置到此为止，剩下的就是将你的静态网页放入wwwroot文件夹。静态网页在接下来的Hexo部分将会生成在你的电脑本地，至于VPS文件和你电脑端网页同步的问题，因为服务器具备FTP功能，可以使用FTP管理工具，我这里推荐Yummy FTP，当然你也可以使用控制面板中的“在线文件”功能在线上传，如果你不觉得每次更新网站都得全部上传覆盖的话。**\n\n#### 四、安装二（本地Hexo部分）\n- **1.安装Node.js**，去[Node.js官网](https://nodejs.org)下载对应系统版本。\n- **2.安装Git**，安装过Xcode的可以跳过，[Git下载地址](https://git-scm.com/downloads)。\n- **3.安装Hexo**\n```\nsudo npm install -g hexo\n```\n- **4.生成静态网页**。在你要存储静态网页的路径下创建文件夹，打开终端cd到这个文件夹，执行如下命令，生成初始静态网页。\n```\nhexo init\n```\n执行完效果应该下图所示：\n![初始效果图](http://upload-images.jianshu.io/upload_images/1723686-0c87181cf6a4d844.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n> 常用文件夹说明：\n> ①_config.yml：站点配置文件，里面配置你网站名字，网站标题，作者信息，语言，主题等信息。具体如下：\nSite               ##修改以适应搜索引擎的收录\ntitle:       ##定义网站的标题\nsubtitle:            ##定义网站的副标题（不一定会显示）\ndescription:         ##定义网站的描述\nauthor:            ##定义网站的负责人\nemail:               ##定义网站负责人的电子邮件\nlanguage:            ##定义网站的语言，默认zh-Hans\nurl:                   ##定义访问的域名\nroot:  \t\t\t\t##定义所在Web文件夹的哪一个目录\npermalink: :year/:month/:day/:title/      ##定义时间格式\nsource_dir: source           ##定义从哪个文件夹获取博客资料              \npublic_dir: public           ##定义生成静态网站到哪个文件夹\n> ②source：存放需要发布的文章。默认生成的文件为md格式，支持markdown语法。\n> ③themes：里面默认有一个主题，丑得很一般。\n\n- **5.常用命令**\n```\nhexo new 名字 //新建文章，会在source/_posts下生成一个.md文件，不可直接复制生成新文件，否则部署生成会报错。\nhexo new page 页面名字 //生成新的页面，比如标签页默认没有，会显示404。\nhexo deploy 或 hexo d //部署到localhost，用于本地调试预览。\nhexo server 或 hexo s //启动本地预览服务，地址为http://localhost:4000/\nhexo generate 或 hexo g //会在你init的文件夹下生成public文件夹，里面包含全套静态网页代码。这里面的全部文件（不包括public文件夹）放入你服务器的wwwroot文件夹里就可以通过域名访问了。\nhexo clean //清空缓存，删除配置数据库及public文件夹。\n```\n- **6.更换主题**\n```\ncd themes\ngit clone 需要下载的主题地址\n```\n[Hexo官方主题地址](https://github.com/hexojs/hexo/wiki/Themes)在这里，我使用的是next主题，简单好看又容易弄。\n下载完后修改根目录站点配置文件_config.yml里面的theme: 为主题文件夹的名字来启用主题。注意冒号后有一个空格，注意和themes对应主题文件夹下的_config.yml主题配置文件进行区分~\n\n- **7.自定义主题**，修改成自己想要的样子。每个主题都有相关的配置文档，比如[Next使用文档](http://theme-next.iissnan.com/getting-started.html)，这里特别详细，我也不赘述了。\n\n- **8.更新文章**，只需将public文件夹文件全部同步到VPS的wwwroot文件夹就行了，我用的FTP工具，方法比较笨，没办法，懒。附上我的FTP连接图。登录帐号密码即VPS部分第7步的帐号密码。\n![FTP连接图](http://upload-images.jianshu.io/upload_images/1723686-2f68eae2286df49a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n>**开始折腾吧~**","slug":"1小时利用VPS搭配Hexo建立个人博客","published":1,"updated":"2017-03-02T12:53:47.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck2ek6q890002i3nm8b8z3rp2","content":"<script src=\"/assets/js/APlayer.min.js\"> </script><p>有了VPS，除了可以满足科学上网的需求，最简单实用的就算弄个小博客了，可以供学习和总结。</p>\n<p>本文也是我这个小白自个爬帖总结出来的，适应范围也是同等级的小白。先把效果放在前面：<a href=\"http://tangyi.ml\" target=\"_blank\" rel=\"noopener\">个人博客地址</a></p>\n<h4 id=\"一、准备条件\"><a href=\"#一、准备条件\" class=\"headerlink\" title=\"一、准备条件\"></a>一、准备条件</h4><ul>\n<li>VPS<blockquote>\n<p>这总得有一个吧，最低配置都行。实在没有的话可以换个组合，网上很多Hexo或者WordPress搭配Github啥的建立博客的，随便一搜都是一大堆，这里就不赘述了。</p>\n</blockquote>\n</li>\n<li>域名<blockquote>\n<p>这个也是硬性基本要求，不多说。免费的，收费的都行。</p>\n</blockquote>\n</li>\n</ul>\n<h4 id=\"二、环境要求\"><a href=\"#二、环境要求\" class=\"headerlink\" title=\"二、环境要求\"></a>二、环境要求</h4><p>介绍下我的一些安装环境，其他环境没试过，就不打包票了：</p>\n<ul>\n<li>VPS：搬瓦工VPS，要求Centos6操作系统。（其他VPS没试过，无关广告）</li>\n<li>Mac：这个无影响，终端方便而已。</li>\n<li>域名：国外ML免费的域名，同类型还有tk,gq等等结尾的域名。冷门域名一般免费一年。地址：<a href=\"http://www.freenom.com\" target=\"_blank\" rel=\"noopener\">域名注册入口</a></li>\n</ul>\n<h4 id=\"三、安装一（VPS部分）\"><a href=\"#三、安装一（VPS部分）\" class=\"headerlink\" title=\"三、安装一（VPS部分）\"></a>三、安装一（VPS部分）</h4><ul>\n<li><strong>1. 登录VPS</strong></li>\n<li><p><strong>2. 更新一次系统</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum update -y</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>3. 安装软件</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install wget;</span><br><span class=\"line\">wget http://download.kanglesoft.com/easypanel/ep.sh -O ep.sh;</span><br><span class=\"line\">sh ep.sh</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<a id=\"more\"></a>\n<blockquote>\n<p>解释一下上面三行命令：<br>第一行是安装wget，用于文件下载，已安装的可以忽略。<br>第二行是从给定地址下载软件，输出保存为ep.sh。安装的软件是kangle，web服务器和反向代理服务器。<br>第三行就是执行了。<br>然后就是静等上面走完。</p>\n</blockquote>\n<ul>\n<li><strong>4. 修改mysql的密码</strong><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysqladmin -u root password 你的密码</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<blockquote>\n<p>数据库目前没用上，评论或者其他高级功能可能会用得上。先把密码改了备份，防以后不时之需。</p>\n</blockquote>\n<ul>\n<li><strong>5. 登录后台管理面板</strong><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://VPS地址:3312/admin/</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<blockquote>\n<p>第一次登录的用户名为admin,密码kangle,登录成功后可在面板里自行修改密码。</p>\n</blockquote>\n<ul>\n<li><p><strong>6. 初始化web服务器</strong><br><img src=\"http://upload-images.jianshu.io/upload_images/1723686-0eaccfb22b7762bf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"配置web服务器\"><br><img src=\"http://upload-images.jianshu.io/upload_images/1723686-26491ac684bbf767.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"初始化web服务器\"></p>\n<blockquote>\n<p>配置下数据库，其他全部默认，第一次初始化服务器三个选项全选，以后再有初始化需求的时候默认会勾选后两个，如上图所示。</p>\n</blockquote>\n</li>\n<li><p><strong>7. 建立网站</strong><br><img src=\"http://upload-images.jianshu.io/upload_images/1723686-f4a4ab89b16c84f1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"新建网站需要的设置\"></p>\n<blockquote>\n<p>网站名和密码用于登录FTP，名字随意。最好能区分你的网站，因为你可以同理建立你的多个子站。</p>\n</blockquote>\n</li>\n<li><p><strong>8. 登录网站</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://VPS地址:3312/vhost</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<blockquote>\n<p>当然这也可以从后台管理面板中网站管理→所有网站进入。帐号密码即第7步设置的帐号密码。</p>\n</blockquote>\n<ul>\n<li><p><strong>9. 绑定域名</strong><br><img src=\"http://upload-images.jianshu.io/upload_images/1723686-f96c976d1930c717.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"域名绑定\"></p>\n<blockquote>\n<p>接下来就是最简单的域名解析了，先进入你购买的域名对应管理页面，一般都有管理dns的，添加A记录到你的VPS地址。然后再回来把你域名添加上，如上图所示。</p>\n</blockquote>\n</li>\n<li><p><strong>10. VPS配置到此为止，剩下的就是将你的静态网页放入wwwroot文件夹。静态网页在接下来的Hexo部分将会生成在你的电脑本地，至于VPS文件和你电脑端网页同步的问题，因为服务器具备FTP功能，可以使用FTP管理工具，我这里推荐Yummy FTP，当然你也可以使用控制面板中的“在线文件”功能在线上传，如果你不觉得每次更新网站都得全部上传覆盖的话。</strong></p>\n</li>\n</ul>\n<h4 id=\"四、安装二（本地Hexo部分）\"><a href=\"#四、安装二（本地Hexo部分）\" class=\"headerlink\" title=\"四、安装二（本地Hexo部分）\"></a>四、安装二（本地Hexo部分）</h4><ul>\n<li><strong>1.安装Node.js</strong>，去<a href=\"https://nodejs.org\" target=\"_blank\" rel=\"noopener\">Node.js官网</a>下载对应系统版本。</li>\n<li><strong>2.安装Git</strong>，安装过Xcode的可以跳过，<a href=\"https://git-scm.com/downloads\" target=\"_blank\" rel=\"noopener\">Git下载地址</a>。</li>\n<li><p><strong>3.安装Hexo</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo npm install -g hexo</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>4.生成静态网页</strong>。在你要存储静态网页的路径下创建文件夹，打开终端cd到这个文件夹，执行如下命令，生成初始静态网页。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>执行完效果应该下图所示：<br><img src=\"http://upload-images.jianshu.io/upload_images/1723686-0c87181cf6a4d844.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"初始效果图\"></p>\n<blockquote>\n<p>常用文件夹说明：<br>①_config.yml：站点配置文件，里面配置你网站名字，网站标题，作者信息，语言，主题等信息。具体如下：<br>Site               ##修改以适应搜索引擎的收录<br>title:       ##定义网站的标题<br>subtitle:            ##定义网站的副标题（不一定会显示）<br>description:         ##定义网站的描述<br>author:            ##定义网站的负责人<br>email:               ##定义网站负责人的电子邮件<br>language:            ##定义网站的语言，默认zh-Hans<br>url:                   ##定义访问的域名<br>root:                  ##定义所在Web文件夹的哪一个目录<br>permalink: :year/:month/:day/:title/      ##定义时间格式<br>source_dir: source           ##定义从哪个文件夹获取博客资料<br>public_dir: public           ##定义生成静态网站到哪个文件夹<br>②source：存放需要发布的文章。默认生成的文件为md格式，支持markdown语法。<br>③themes：里面默认有一个主题，丑得很一般。</p>\n</blockquote>\n<ul>\n<li><p><strong>5.常用命令</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new 名字 //新建文章，会在source/_posts下生成一个.md文件，不可直接复制生成新文件，否则部署生成会报错。</span><br><span class=\"line\">hexo new page 页面名字 //生成新的页面，比如标签页默认没有，会显示404。</span><br><span class=\"line\">hexo deploy 或 hexo d //部署到localhost，用于本地调试预览。</span><br><span class=\"line\">hexo server 或 hexo s //启动本地预览服务，地址为http://localhost:4000/</span><br><span class=\"line\">hexo generate 或 hexo g //会在你init的文件夹下生成public文件夹，里面包含全套静态网页代码。这里面的全部文件（不包括public文件夹）放入你服务器的wwwroot文件夹里就可以通过域名访问了。</span><br><span class=\"line\">hexo clean //清空缓存，删除配置数据库及public文件夹。</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>6.更换主题</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd themes</span><br><span class=\"line\">git clone 需要下载的主题地址</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><a href=\"https://github.com/hexojs/hexo/wiki/Themes\" target=\"_blank\" rel=\"noopener\">Hexo官方主题地址</a>在这里，我使用的是next主题，简单好看又容易弄。<br>下载完后修改根目录站点配置文件_config.yml里面的theme: 为主题文件夹的名字来启用主题。注意冒号后有一个空格，注意和themes对应主题文件夹下的_config.yml主题配置文件进行区分~</p>\n<ul>\n<li><p><strong>7.自定义主题</strong>，修改成自己想要的样子。每个主题都有相关的配置文档，比如<a href=\"http://theme-next.iissnan.com/getting-started.html\" target=\"_blank\" rel=\"noopener\">Next使用文档</a>，这里特别详细，我也不赘述了。</p>\n</li>\n<li><p><strong>8.更新文章</strong>，只需将public文件夹文件全部同步到VPS的wwwroot文件夹就行了，我用的FTP工具，方法比较笨，没办法，懒。附上我的FTP连接图。登录帐号密码即VPS部分第7步的帐号密码。<br><img src=\"http://upload-images.jianshu.io/upload_images/1723686-2f68eae2286df49a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"FTP连接图\"></p>\n<blockquote>\n<p><strong>开始折腾吧~</strong></p>\n</blockquote>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>有了VPS，除了可以满足科学上网的需求，最简单实用的就算弄个小博客了，可以供学习和总结。</p>\n<p>本文也是我这个小白自个爬帖总结出来的，适应范围也是同等级的小白。先把效果放在前面：<a href=\"http://tangyi.ml\" target=\"_blank\" rel=\"noopener\">个人博客地址</a></p>\n<h4 id=\"一、准备条件\"><a href=\"#一、准备条件\" class=\"headerlink\" title=\"一、准备条件\"></a>一、准备条件</h4><ul>\n<li>VPS<blockquote>\n<p>这总得有一个吧，最低配置都行。实在没有的话可以换个组合，网上很多Hexo或者WordPress搭配Github啥的建立博客的，随便一搜都是一大堆，这里就不赘述了。</p>\n</blockquote>\n</li>\n<li>域名<blockquote>\n<p>这个也是硬性基本要求，不多说。免费的，收费的都行。</p>\n</blockquote>\n</li>\n</ul>\n<h4 id=\"二、环境要求\"><a href=\"#二、环境要求\" class=\"headerlink\" title=\"二、环境要求\"></a>二、环境要求</h4><p>介绍下我的一些安装环境，其他环境没试过，就不打包票了：</p>\n<ul>\n<li>VPS：搬瓦工VPS，要求Centos6操作系统。（其他VPS没试过，无关广告）</li>\n<li>Mac：这个无影响，终端方便而已。</li>\n<li>域名：国外ML免费的域名，同类型还有tk,gq等等结尾的域名。冷门域名一般免费一年。地址：<a href=\"http://www.freenom.com\" target=\"_blank\" rel=\"noopener\">域名注册入口</a></li>\n</ul>\n<h4 id=\"三、安装一（VPS部分）\"><a href=\"#三、安装一（VPS部分）\" class=\"headerlink\" title=\"三、安装一（VPS部分）\"></a>三、安装一（VPS部分）</h4><ul>\n<li><strong>1. 登录VPS</strong></li>\n<li><p><strong>2. 更新一次系统</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum update -y</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>3. 安装软件</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install wget;</span><br><span class=\"line\">wget http://download.kanglesoft.com/easypanel/ep.sh -O ep.sh;</span><br><span class=\"line\">sh ep.sh</span><br></pre></td></tr></table></figure>\n</li>\n</ul>","more":"<blockquote>\n<p>解释一下上面三行命令：<br>第一行是安装wget，用于文件下载，已安装的可以忽略。<br>第二行是从给定地址下载软件，输出保存为ep.sh。安装的软件是kangle，web服务器和反向代理服务器。<br>第三行就是执行了。<br>然后就是静等上面走完。</p>\n</blockquote>\n<ul>\n<li><strong>4. 修改mysql的密码</strong><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysqladmin -u root password 你的密码</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<blockquote>\n<p>数据库目前没用上，评论或者其他高级功能可能会用得上。先把密码改了备份，防以后不时之需。</p>\n</blockquote>\n<ul>\n<li><strong>5. 登录后台管理面板</strong><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://VPS地址:3312/admin/</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<blockquote>\n<p>第一次登录的用户名为admin,密码kangle,登录成功后可在面板里自行修改密码。</p>\n</blockquote>\n<ul>\n<li><p><strong>6. 初始化web服务器</strong><br><img src=\"http://upload-images.jianshu.io/upload_images/1723686-0eaccfb22b7762bf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"配置web服务器\"><br><img src=\"http://upload-images.jianshu.io/upload_images/1723686-26491ac684bbf767.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"初始化web服务器\"></p>\n<blockquote>\n<p>配置下数据库，其他全部默认，第一次初始化服务器三个选项全选，以后再有初始化需求的时候默认会勾选后两个，如上图所示。</p>\n</blockquote>\n</li>\n<li><p><strong>7. 建立网站</strong><br><img src=\"http://upload-images.jianshu.io/upload_images/1723686-f4a4ab89b16c84f1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"新建网站需要的设置\"></p>\n<blockquote>\n<p>网站名和密码用于登录FTP，名字随意。最好能区分你的网站，因为你可以同理建立你的多个子站。</p>\n</blockquote>\n</li>\n<li><p><strong>8. 登录网站</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://VPS地址:3312/vhost</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<blockquote>\n<p>当然这也可以从后台管理面板中网站管理→所有网站进入。帐号密码即第7步设置的帐号密码。</p>\n</blockquote>\n<ul>\n<li><p><strong>9. 绑定域名</strong><br><img src=\"http://upload-images.jianshu.io/upload_images/1723686-f96c976d1930c717.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"域名绑定\"></p>\n<blockquote>\n<p>接下来就是最简单的域名解析了，先进入你购买的域名对应管理页面，一般都有管理dns的，添加A记录到你的VPS地址。然后再回来把你域名添加上，如上图所示。</p>\n</blockquote>\n</li>\n<li><p><strong>10. VPS配置到此为止，剩下的就是将你的静态网页放入wwwroot文件夹。静态网页在接下来的Hexo部分将会生成在你的电脑本地，至于VPS文件和你电脑端网页同步的问题，因为服务器具备FTP功能，可以使用FTP管理工具，我这里推荐Yummy FTP，当然你也可以使用控制面板中的“在线文件”功能在线上传，如果你不觉得每次更新网站都得全部上传覆盖的话。</strong></p>\n</li>\n</ul>\n<h4 id=\"四、安装二（本地Hexo部分）\"><a href=\"#四、安装二（本地Hexo部分）\" class=\"headerlink\" title=\"四、安装二（本地Hexo部分）\"></a>四、安装二（本地Hexo部分）</h4><ul>\n<li><strong>1.安装Node.js</strong>，去<a href=\"https://nodejs.org\" target=\"_blank\" rel=\"noopener\">Node.js官网</a>下载对应系统版本。</li>\n<li><strong>2.安装Git</strong>，安装过Xcode的可以跳过，<a href=\"https://git-scm.com/downloads\" target=\"_blank\" rel=\"noopener\">Git下载地址</a>。</li>\n<li><p><strong>3.安装Hexo</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo npm install -g hexo</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>4.生成静态网页</strong>。在你要存储静态网页的路径下创建文件夹，打开终端cd到这个文件夹，执行如下命令，生成初始静态网页。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>执行完效果应该下图所示：<br><img src=\"http://upload-images.jianshu.io/upload_images/1723686-0c87181cf6a4d844.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"初始效果图\"></p>\n<blockquote>\n<p>常用文件夹说明：<br>①_config.yml：站点配置文件，里面配置你网站名字，网站标题，作者信息，语言，主题等信息。具体如下：<br>Site               ##修改以适应搜索引擎的收录<br>title:       ##定义网站的标题<br>subtitle:            ##定义网站的副标题（不一定会显示）<br>description:         ##定义网站的描述<br>author:            ##定义网站的负责人<br>email:               ##定义网站负责人的电子邮件<br>language:            ##定义网站的语言，默认zh-Hans<br>url:                   ##定义访问的域名<br>root:                  ##定义所在Web文件夹的哪一个目录<br>permalink: :year/:month/:day/:title/      ##定义时间格式<br>source_dir: source           ##定义从哪个文件夹获取博客资料<br>public_dir: public           ##定义生成静态网站到哪个文件夹<br>②source：存放需要发布的文章。默认生成的文件为md格式，支持markdown语法。<br>③themes：里面默认有一个主题，丑得很一般。</p>\n</blockquote>\n<ul>\n<li><p><strong>5.常用命令</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new 名字 //新建文章，会在source/_posts下生成一个.md文件，不可直接复制生成新文件，否则部署生成会报错。</span><br><span class=\"line\">hexo new page 页面名字 //生成新的页面，比如标签页默认没有，会显示404。</span><br><span class=\"line\">hexo deploy 或 hexo d //部署到localhost，用于本地调试预览。</span><br><span class=\"line\">hexo server 或 hexo s //启动本地预览服务，地址为http://localhost:4000/</span><br><span class=\"line\">hexo generate 或 hexo g //会在你init的文件夹下生成public文件夹，里面包含全套静态网页代码。这里面的全部文件（不包括public文件夹）放入你服务器的wwwroot文件夹里就可以通过域名访问了。</span><br><span class=\"line\">hexo clean //清空缓存，删除配置数据库及public文件夹。</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>6.更换主题</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd themes</span><br><span class=\"line\">git clone 需要下载的主题地址</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><a href=\"https://github.com/hexojs/hexo/wiki/Themes\" target=\"_blank\" rel=\"noopener\">Hexo官方主题地址</a>在这里，我使用的是next主题，简单好看又容易弄。<br>下载完后修改根目录站点配置文件_config.yml里面的theme: 为主题文件夹的名字来启用主题。注意冒号后有一个空格，注意和themes对应主题文件夹下的_config.yml主题配置文件进行区分~</p>\n<ul>\n<li><p><strong>7.自定义主题</strong>，修改成自己想要的样子。每个主题都有相关的配置文档，比如<a href=\"http://theme-next.iissnan.com/getting-started.html\" target=\"_blank\" rel=\"noopener\">Next使用文档</a>，这里特别详细，我也不赘述了。</p>\n</li>\n<li><p><strong>8.更新文章</strong>，只需将public文件夹文件全部同步到VPS的wwwroot文件夹就行了，我用的FTP工具，方法比较笨，没办法，懒。附上我的FTP连接图。登录帐号密码即VPS部分第7步的帐号密码。<br><img src=\"http://upload-images.jianshu.io/upload_images/1723686-2f68eae2286df49a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"FTP连接图\"></p>\n<blockquote>\n<p><strong>开始折腾吧~</strong></p>\n</blockquote>\n</li>\n</ul>"},{"title":"1小时教你理解HTTP，TCP，UDP，Socket，WebSocket","date":"2016-12-22T01:49:47.000Z","_content":"谨以此文总结我站在iOS开发者角度对于以上关键词的形象理解，至于底层抽象的概念，别人用啥TCP/IP详解：卷一、卷二、卷三都讲不清楚，我也懒得浪费时间。前人栽树，后人乘凉，一个道理。\n### 一、这一大堆关键词之间到底有啥区别？\n有名字就有定义，理解的前提从来都是对定义有所了解。就好比现在让你形容一下梯形的定义，如果你不知道定义，你就可能把平行四边形当做特殊的梯形处理，也就有可能把TCP和Socket搞混，更加会纠结TCP连接与Socket连接以及HTTP的长/短连接之间到底有啥区别。\n\n其实有了区别才好理解。但在这之前首先得理清一个概念，那就是OSI七层模型，以及所谓的五层模型，四层模型到底是什么鬼？\n\n<!--more-->\n\n> OSI七层模型是万能的国际标准化组织(ISO)提出的一个试图使各种计算机在世界范围内互连的理想标准，说白了理想和现实的差距就是七层模型和五层模型的差距。具体分类如下表：\n\n| 七层模型 | 五层模型 | 四层模型 |\n|:-------:|:-----:|:-----:|\n| 应用层 |||\n| 表示层 |应用层|应用层|\n| 会话层 |||\n| 传输层 | 传输层 | 传输层 |\n| 网络层 | 网络层 | 网络层 |\n| 数据链路层 | 数据链路层 |链接层/实体层|\n| 物理层 | 物理层 |||\n\n>七层模型的上三层归为应用层即为TCP/IP五层模型，五层模型的下两层归为链接层或者说实体层即为四层模型。\n也就是说，所谓的五层或者四层，其实可以认为是方便理解而形成的潜规则，而具体的实施肯定还是得根据七层的标准来。毕竟每一层都有每一层各自的功能，而为了完成每一层的功能，就需要大家遵守相关的规则，也就是协议。所以，对模型分层没必要太在意，五层也好，四层也罢，对于这些看不见摸不着的东西，你只要知道，互联网是分层的，来来去去加起来也就这么几层就够了。\n\n**那么，回到第一个问题，这一大堆关键词之间到底有啥区别？**\n- 从本质上来区分，HTTP，WebSocket，TCP，UDP，IP都是协议，而TCP/IP是不同协议的组合，你也可以称之为协议栈，协议族，TCP/IP模型等等都可以，你开心就行，反正都是虚无的不能吃的东西，都是为了完成对应功能而制定的统一规则。\n而Socket（套接字）才是真正能操作的东西。Socket的本质是API，是先人对TCP/IP协议族的抽象或者说封装，它就像一个门面，给你一个操作TCP/IP协议的入口，来建立Socket连接。值得一提的是，此Socket是指网络编程下的Socket，而不是Unix中的Socket。虽然概念相似，但是Unix中的Socket不是基于这些乱七八糟的协议，而是基于操作系统本身的文件系统。\n\n- 从分层上来区分，HTTP，WebSocket是应用层协议，TCP，UDP是传输层协议，IP是网络层协议。\n\n### 二、这些关键词之间具体有什么联系？\n#### 1.TCP和UDP\n> TCP是面向连接的一种传输控制协议。TCP连接之后，客户端和服务器可以互相发送和接收消息，在客户端或者服务器没有主动断开之前，连接一直存在，故称为长连接。特点：连接有耗时，传输数据无大小限制，准确可靠，先发先至。\nUDP是无连接的用户数据报协议，所谓的无连接就是在传输数据之前不需要交换信息，没有握手建立连接的过程，只需要直接将对应的数据发送到指定的地址和端口就行。故UDP的特点是不稳定，速度快，可广播，一般数据包限定64KB之内，先发未必先至。\n\n#### 2.HTTP\n> HTTP是基于TCP协议的应用，请求时需建立TCP连接，而且请求包中需要包含请求方法，URI，协议版本等信息，请求结束后断开连接，完成一次请求/响应操作。故称为短连接。\n而HTTP/1.1中的keep-alive所保持的长连接则是为了优化每次HTTP请求中TCP连接三次握手的麻烦和资源开销，只建立一次TCP连接，多次的在这个通道上完成请求/响应操作。\n值得一提的是，服务器无法主动给客户端推送消息。\n\n#### 3.WebSocket\n> WebSocket也是一种协议，并且也是基于TCP协议的。具体流程是WebSocket通过HTTP先发送一个标记了 Upgrade 的请求，服务端解析后开始建立TCP连接，省去了HTTP长连接每次请求都要上传header的冗余，可以理解为WebSocket是HTTP的优化，但WebSocket不仅仅在Web应用程序上得到支持。\n\n#### 4.Socket连接和TCP连接\n> 其实这就是一个文字游戏而已，建立Socket连接需要至少一对Socket（套接字），而创建Socket连接可以指定不同的传输层协议，即TCP或UDP，所以当采用TCP建立连接时，该Socket连接就视为一个TCP连接。而采用UDP则是无连接的。\n\n#### 5.Socket和WebSocket\n> 这两个虽然名字差不多，但却是两个完全不同的概念，就好比Java和JavaScript一样毫无关系。Socket是一套协议封装后的接口，用于建立Socket连接，而WebSocket虽然是Html5的产物，但也不仅仅局限于浏览器的应用程序，许多语言都提供了WebSocket的支持，比如C，C++，Python等。\n\n#### 6.HTTP、WebSocket与TCP的关系\n> HTTP通信过程属于“你推一下，我走一下”的方式，客户端不发请求则服务器永远无法发送数据给客户端，而WebSocket则在进行第一次HTTP请求之后，其他全部采用TCP通道进行双向通讯。所以，HTTP和WebSocket虽都是基于TCP协议，但是两者属于完全不同的两种通讯方式。\n\n能比较的都比较了，附上一张关系图强化理解。其实，如果不是专攻网络方面，作为一个程序猿，了解了不同的通讯方式及其对应的优缺点，就可以确定其应用的场景。而这些，就已经基本够用了。\n![HTTP-WebSocket-TCP关系图](http://upload-images.jianshu.io/upload_images/1723686-94d1d409d7d6746d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n> 如有理解纰漏的地方还请批评斧正。","source":"_posts/1小时教你理解HTTP，TCP，UDP，Socket，WebSocket.md","raw":"---\ntitle: 1小时教你理解HTTP，TCP，UDP，Socket，WebSocket\ndate: 2016-12-22 09:49:47\ncategories: 折腾\n---\n谨以此文总结我站在iOS开发者角度对于以上关键词的形象理解，至于底层抽象的概念，别人用啥TCP/IP详解：卷一、卷二、卷三都讲不清楚，我也懒得浪费时间。前人栽树，后人乘凉，一个道理。\n### 一、这一大堆关键词之间到底有啥区别？\n有名字就有定义，理解的前提从来都是对定义有所了解。就好比现在让你形容一下梯形的定义，如果你不知道定义，你就可能把平行四边形当做特殊的梯形处理，也就有可能把TCP和Socket搞混，更加会纠结TCP连接与Socket连接以及HTTP的长/短连接之间到底有啥区别。\n\n其实有了区别才好理解。但在这之前首先得理清一个概念，那就是OSI七层模型，以及所谓的五层模型，四层模型到底是什么鬼？\n\n<!--more-->\n\n> OSI七层模型是万能的国际标准化组织(ISO)提出的一个试图使各种计算机在世界范围内互连的理想标准，说白了理想和现实的差距就是七层模型和五层模型的差距。具体分类如下表：\n\n| 七层模型 | 五层模型 | 四层模型 |\n|:-------:|:-----:|:-----:|\n| 应用层 |||\n| 表示层 |应用层|应用层|\n| 会话层 |||\n| 传输层 | 传输层 | 传输层 |\n| 网络层 | 网络层 | 网络层 |\n| 数据链路层 | 数据链路层 |链接层/实体层|\n| 物理层 | 物理层 |||\n\n>七层模型的上三层归为应用层即为TCP/IP五层模型，五层模型的下两层归为链接层或者说实体层即为四层模型。\n也就是说，所谓的五层或者四层，其实可以认为是方便理解而形成的潜规则，而具体的实施肯定还是得根据七层的标准来。毕竟每一层都有每一层各自的功能，而为了完成每一层的功能，就需要大家遵守相关的规则，也就是协议。所以，对模型分层没必要太在意，五层也好，四层也罢，对于这些看不见摸不着的东西，你只要知道，互联网是分层的，来来去去加起来也就这么几层就够了。\n\n**那么，回到第一个问题，这一大堆关键词之间到底有啥区别？**\n- 从本质上来区分，HTTP，WebSocket，TCP，UDP，IP都是协议，而TCP/IP是不同协议的组合，你也可以称之为协议栈，协议族，TCP/IP模型等等都可以，你开心就行，反正都是虚无的不能吃的东西，都是为了完成对应功能而制定的统一规则。\n而Socket（套接字）才是真正能操作的东西。Socket的本质是API，是先人对TCP/IP协议族的抽象或者说封装，它就像一个门面，给你一个操作TCP/IP协议的入口，来建立Socket连接。值得一提的是，此Socket是指网络编程下的Socket，而不是Unix中的Socket。虽然概念相似，但是Unix中的Socket不是基于这些乱七八糟的协议，而是基于操作系统本身的文件系统。\n\n- 从分层上来区分，HTTP，WebSocket是应用层协议，TCP，UDP是传输层协议，IP是网络层协议。\n\n### 二、这些关键词之间具体有什么联系？\n#### 1.TCP和UDP\n> TCP是面向连接的一种传输控制协议。TCP连接之后，客户端和服务器可以互相发送和接收消息，在客户端或者服务器没有主动断开之前，连接一直存在，故称为长连接。特点：连接有耗时，传输数据无大小限制，准确可靠，先发先至。\nUDP是无连接的用户数据报协议，所谓的无连接就是在传输数据之前不需要交换信息，没有握手建立连接的过程，只需要直接将对应的数据发送到指定的地址和端口就行。故UDP的特点是不稳定，速度快，可广播，一般数据包限定64KB之内，先发未必先至。\n\n#### 2.HTTP\n> HTTP是基于TCP协议的应用，请求时需建立TCP连接，而且请求包中需要包含请求方法，URI，协议版本等信息，请求结束后断开连接，完成一次请求/响应操作。故称为短连接。\n而HTTP/1.1中的keep-alive所保持的长连接则是为了优化每次HTTP请求中TCP连接三次握手的麻烦和资源开销，只建立一次TCP连接，多次的在这个通道上完成请求/响应操作。\n值得一提的是，服务器无法主动给客户端推送消息。\n\n#### 3.WebSocket\n> WebSocket也是一种协议，并且也是基于TCP协议的。具体流程是WebSocket通过HTTP先发送一个标记了 Upgrade 的请求，服务端解析后开始建立TCP连接，省去了HTTP长连接每次请求都要上传header的冗余，可以理解为WebSocket是HTTP的优化，但WebSocket不仅仅在Web应用程序上得到支持。\n\n#### 4.Socket连接和TCP连接\n> 其实这就是一个文字游戏而已，建立Socket连接需要至少一对Socket（套接字），而创建Socket连接可以指定不同的传输层协议，即TCP或UDP，所以当采用TCP建立连接时，该Socket连接就视为一个TCP连接。而采用UDP则是无连接的。\n\n#### 5.Socket和WebSocket\n> 这两个虽然名字差不多，但却是两个完全不同的概念，就好比Java和JavaScript一样毫无关系。Socket是一套协议封装后的接口，用于建立Socket连接，而WebSocket虽然是Html5的产物，但也不仅仅局限于浏览器的应用程序，许多语言都提供了WebSocket的支持，比如C，C++，Python等。\n\n#### 6.HTTP、WebSocket与TCP的关系\n> HTTP通信过程属于“你推一下，我走一下”的方式，客户端不发请求则服务器永远无法发送数据给客户端，而WebSocket则在进行第一次HTTP请求之后，其他全部采用TCP通道进行双向通讯。所以，HTTP和WebSocket虽都是基于TCP协议，但是两者属于完全不同的两种通讯方式。\n\n能比较的都比较了，附上一张关系图强化理解。其实，如果不是专攻网络方面，作为一个程序猿，了解了不同的通讯方式及其对应的优缺点，就可以确定其应用的场景。而这些，就已经基本够用了。\n![HTTP-WebSocket-TCP关系图](http://upload-images.jianshu.io/upload_images/1723686-94d1d409d7d6746d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n> 如有理解纰漏的地方还请批评斧正。","slug":"1小时教你理解HTTP，TCP，UDP，Socket，WebSocket","published":1,"updated":"2017-03-02T12:53:47.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck2ek6q8a0003i3nm3ze3mzhz","content":"<script src=\"/assets/js/APlayer.min.js\"> </script><p>谨以此文总结我站在iOS开发者角度对于以上关键词的形象理解，至于底层抽象的概念，别人用啥TCP/IP详解：卷一、卷二、卷三都讲不清楚，我也懒得浪费时间。前人栽树，后人乘凉，一个道理。</p>\n<h3 id=\"一、这一大堆关键词之间到底有啥区别？\"><a href=\"#一、这一大堆关键词之间到底有啥区别？\" class=\"headerlink\" title=\"一、这一大堆关键词之间到底有啥区别？\"></a>一、这一大堆关键词之间到底有啥区别？</h3><p>有名字就有定义，理解的前提从来都是对定义有所了解。就好比现在让你形容一下梯形的定义，如果你不知道定义，你就可能把平行四边形当做特殊的梯形处理，也就有可能把TCP和Socket搞混，更加会纠结TCP连接与Socket连接以及HTTP的长/短连接之间到底有啥区别。</p>\n<p>其实有了区别才好理解。但在这之前首先得理清一个概念，那就是OSI七层模型，以及所谓的五层模型，四层模型到底是什么鬼？</p>\n<a id=\"more\"></a>\n<blockquote>\n<p>OSI七层模型是万能的国际标准化组织(ISO)提出的一个试图使各种计算机在世界范围内互连的理想标准，说白了理想和现实的差距就是七层模型和五层模型的差距。具体分类如下表：</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">七层模型</th>\n<th style=\"text-align:center\">五层模型</th>\n<th style=\"text-align:center\">四层模型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">应用层</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">表示层</td>\n<td style=\"text-align:center\">应用层</td>\n<td style=\"text-align:center\">应用层</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">会话层</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">传输层</td>\n<td style=\"text-align:center\">传输层</td>\n<td style=\"text-align:center\">传输层</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">网络层</td>\n<td style=\"text-align:center\">网络层</td>\n<td style=\"text-align:center\">网络层</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">数据链路层</td>\n<td style=\"text-align:center\">数据链路层</td>\n<td style=\"text-align:center\">链接层/实体层</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">物理层</td>\n<td style=\"text-align:center\">物理层</td>\n<td style=\"text-align:center\"></td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>七层模型的上三层归为应用层即为TCP/IP五层模型，五层模型的下两层归为链接层或者说实体层即为四层模型。<br>也就是说，所谓的五层或者四层，其实可以认为是方便理解而形成的潜规则，而具体的实施肯定还是得根据七层的标准来。毕竟每一层都有每一层各自的功能，而为了完成每一层的功能，就需要大家遵守相关的规则，也就是协议。所以，对模型分层没必要太在意，五层也好，四层也罢，对于这些看不见摸不着的东西，你只要知道，互联网是分层的，来来去去加起来也就这么几层就够了。</p>\n</blockquote>\n<p><strong>那么，回到第一个问题，这一大堆关键词之间到底有啥区别？</strong></p>\n<ul>\n<li><p>从本质上来区分，HTTP，WebSocket，TCP，UDP，IP都是协议，而TCP/IP是不同协议的组合，你也可以称之为协议栈，协议族，TCP/IP模型等等都可以，你开心就行，反正都是虚无的不能吃的东西，都是为了完成对应功能而制定的统一规则。<br>而Socket（套接字）才是真正能操作的东西。Socket的本质是API，是先人对TCP/IP协议族的抽象或者说封装，它就像一个门面，给你一个操作TCP/IP协议的入口，来建立Socket连接。值得一提的是，此Socket是指网络编程下的Socket，而不是Unix中的Socket。虽然概念相似，但是Unix中的Socket不是基于这些乱七八糟的协议，而是基于操作系统本身的文件系统。</p>\n</li>\n<li><p>从分层上来区分，HTTP，WebSocket是应用层协议，TCP，UDP是传输层协议，IP是网络层协议。</p>\n</li>\n</ul>\n<h3 id=\"二、这些关键词之间具体有什么联系？\"><a href=\"#二、这些关键词之间具体有什么联系？\" class=\"headerlink\" title=\"二、这些关键词之间具体有什么联系？\"></a>二、这些关键词之间具体有什么联系？</h3><h4 id=\"1-TCP和UDP\"><a href=\"#1-TCP和UDP\" class=\"headerlink\" title=\"1.TCP和UDP\"></a>1.TCP和UDP</h4><blockquote>\n<p>TCP是面向连接的一种传输控制协议。TCP连接之后，客户端和服务器可以互相发送和接收消息，在客户端或者服务器没有主动断开之前，连接一直存在，故称为长连接。特点：连接有耗时，传输数据无大小限制，准确可靠，先发先至。<br>UDP是无连接的用户数据报协议，所谓的无连接就是在传输数据之前不需要交换信息，没有握手建立连接的过程，只需要直接将对应的数据发送到指定的地址和端口就行。故UDP的特点是不稳定，速度快，可广播，一般数据包限定64KB之内，先发未必先至。</p>\n</blockquote>\n<h4 id=\"2-HTTP\"><a href=\"#2-HTTP\" class=\"headerlink\" title=\"2.HTTP\"></a>2.HTTP</h4><blockquote>\n<p>HTTP是基于TCP协议的应用，请求时需建立TCP连接，而且请求包中需要包含请求方法，URI，协议版本等信息，请求结束后断开连接，完成一次请求/响应操作。故称为短连接。<br>而HTTP/1.1中的keep-alive所保持的长连接则是为了优化每次HTTP请求中TCP连接三次握手的麻烦和资源开销，只建立一次TCP连接，多次的在这个通道上完成请求/响应操作。<br>值得一提的是，服务器无法主动给客户端推送消息。</p>\n</blockquote>\n<h4 id=\"3-WebSocket\"><a href=\"#3-WebSocket\" class=\"headerlink\" title=\"3.WebSocket\"></a>3.WebSocket</h4><blockquote>\n<p>WebSocket也是一种协议，并且也是基于TCP协议的。具体流程是WebSocket通过HTTP先发送一个标记了 Upgrade 的请求，服务端解析后开始建立TCP连接，省去了HTTP长连接每次请求都要上传header的冗余，可以理解为WebSocket是HTTP的优化，但WebSocket不仅仅在Web应用程序上得到支持。</p>\n</blockquote>\n<h4 id=\"4-Socket连接和TCP连接\"><a href=\"#4-Socket连接和TCP连接\" class=\"headerlink\" title=\"4.Socket连接和TCP连接\"></a>4.Socket连接和TCP连接</h4><blockquote>\n<p>其实这就是一个文字游戏而已，建立Socket连接需要至少一对Socket（套接字），而创建Socket连接可以指定不同的传输层协议，即TCP或UDP，所以当采用TCP建立连接时，该Socket连接就视为一个TCP连接。而采用UDP则是无连接的。</p>\n</blockquote>\n<h4 id=\"5-Socket和WebSocket\"><a href=\"#5-Socket和WebSocket\" class=\"headerlink\" title=\"5.Socket和WebSocket\"></a>5.Socket和WebSocket</h4><blockquote>\n<p>这两个虽然名字差不多，但却是两个完全不同的概念，就好比Java和JavaScript一样毫无关系。Socket是一套协议封装后的接口，用于建立Socket连接，而WebSocket虽然是Html5的产物，但也不仅仅局限于浏览器的应用程序，许多语言都提供了WebSocket的支持，比如C，C++，Python等。</p>\n</blockquote>\n<h4 id=\"6-HTTP、WebSocket与TCP的关系\"><a href=\"#6-HTTP、WebSocket与TCP的关系\" class=\"headerlink\" title=\"6.HTTP、WebSocket与TCP的关系\"></a>6.HTTP、WebSocket与TCP的关系</h4><blockquote>\n<p>HTTP通信过程属于“你推一下，我走一下”的方式，客户端不发请求则服务器永远无法发送数据给客户端，而WebSocket则在进行第一次HTTP请求之后，其他全部采用TCP通道进行双向通讯。所以，HTTP和WebSocket虽都是基于TCP协议，但是两者属于完全不同的两种通讯方式。</p>\n</blockquote>\n<p>能比较的都比较了，附上一张关系图强化理解。其实，如果不是专攻网络方面，作为一个程序猿，了解了不同的通讯方式及其对应的优缺点，就可以确定其应用的场景。而这些，就已经基本够用了。<br><img src=\"http://upload-images.jianshu.io/upload_images/1723686-94d1d409d7d6746d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"HTTP-WebSocket-TCP关系图\"></p>\n<blockquote>\n<p>如有理解纰漏的地方还请批评斧正。</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<p>谨以此文总结我站在iOS开发者角度对于以上关键词的形象理解，至于底层抽象的概念，别人用啥TCP/IP详解：卷一、卷二、卷三都讲不清楚，我也懒得浪费时间。前人栽树，后人乘凉，一个道理。</p>\n<h3 id=\"一、这一大堆关键词之间到底有啥区别？\"><a href=\"#一、这一大堆关键词之间到底有啥区别？\" class=\"headerlink\" title=\"一、这一大堆关键词之间到底有啥区别？\"></a>一、这一大堆关键词之间到底有啥区别？</h3><p>有名字就有定义，理解的前提从来都是对定义有所了解。就好比现在让你形容一下梯形的定义，如果你不知道定义，你就可能把平行四边形当做特殊的梯形处理，也就有可能把TCP和Socket搞混，更加会纠结TCP连接与Socket连接以及HTTP的长/短连接之间到底有啥区别。</p>\n<p>其实有了区别才好理解。但在这之前首先得理清一个概念，那就是OSI七层模型，以及所谓的五层模型，四层模型到底是什么鬼？</p>","more":"<blockquote>\n<p>OSI七层模型是万能的国际标准化组织(ISO)提出的一个试图使各种计算机在世界范围内互连的理想标准，说白了理想和现实的差距就是七层模型和五层模型的差距。具体分类如下表：</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">七层模型</th>\n<th style=\"text-align:center\">五层模型</th>\n<th style=\"text-align:center\">四层模型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">应用层</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">表示层</td>\n<td style=\"text-align:center\">应用层</td>\n<td style=\"text-align:center\">应用层</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">会话层</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">传输层</td>\n<td style=\"text-align:center\">传输层</td>\n<td style=\"text-align:center\">传输层</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">网络层</td>\n<td style=\"text-align:center\">网络层</td>\n<td style=\"text-align:center\">网络层</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">数据链路层</td>\n<td style=\"text-align:center\">数据链路层</td>\n<td style=\"text-align:center\">链接层/实体层</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">物理层</td>\n<td style=\"text-align:center\">物理层</td>\n<td style=\"text-align:center\"></td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>七层模型的上三层归为应用层即为TCP/IP五层模型，五层模型的下两层归为链接层或者说实体层即为四层模型。<br>也就是说，所谓的五层或者四层，其实可以认为是方便理解而形成的潜规则，而具体的实施肯定还是得根据七层的标准来。毕竟每一层都有每一层各自的功能，而为了完成每一层的功能，就需要大家遵守相关的规则，也就是协议。所以，对模型分层没必要太在意，五层也好，四层也罢，对于这些看不见摸不着的东西，你只要知道，互联网是分层的，来来去去加起来也就这么几层就够了。</p>\n</blockquote>\n<p><strong>那么，回到第一个问题，这一大堆关键词之间到底有啥区别？</strong></p>\n<ul>\n<li><p>从本质上来区分，HTTP，WebSocket，TCP，UDP，IP都是协议，而TCP/IP是不同协议的组合，你也可以称之为协议栈，协议族，TCP/IP模型等等都可以，你开心就行，反正都是虚无的不能吃的东西，都是为了完成对应功能而制定的统一规则。<br>而Socket（套接字）才是真正能操作的东西。Socket的本质是API，是先人对TCP/IP协议族的抽象或者说封装，它就像一个门面，给你一个操作TCP/IP协议的入口，来建立Socket连接。值得一提的是，此Socket是指网络编程下的Socket，而不是Unix中的Socket。虽然概念相似，但是Unix中的Socket不是基于这些乱七八糟的协议，而是基于操作系统本身的文件系统。</p>\n</li>\n<li><p>从分层上来区分，HTTP，WebSocket是应用层协议，TCP，UDP是传输层协议，IP是网络层协议。</p>\n</li>\n</ul>\n<h3 id=\"二、这些关键词之间具体有什么联系？\"><a href=\"#二、这些关键词之间具体有什么联系？\" class=\"headerlink\" title=\"二、这些关键词之间具体有什么联系？\"></a>二、这些关键词之间具体有什么联系？</h3><h4 id=\"1-TCP和UDP\"><a href=\"#1-TCP和UDP\" class=\"headerlink\" title=\"1.TCP和UDP\"></a>1.TCP和UDP</h4><blockquote>\n<p>TCP是面向连接的一种传输控制协议。TCP连接之后，客户端和服务器可以互相发送和接收消息，在客户端或者服务器没有主动断开之前，连接一直存在，故称为长连接。特点：连接有耗时，传输数据无大小限制，准确可靠，先发先至。<br>UDP是无连接的用户数据报协议，所谓的无连接就是在传输数据之前不需要交换信息，没有握手建立连接的过程，只需要直接将对应的数据发送到指定的地址和端口就行。故UDP的特点是不稳定，速度快，可广播，一般数据包限定64KB之内，先发未必先至。</p>\n</blockquote>\n<h4 id=\"2-HTTP\"><a href=\"#2-HTTP\" class=\"headerlink\" title=\"2.HTTP\"></a>2.HTTP</h4><blockquote>\n<p>HTTP是基于TCP协议的应用，请求时需建立TCP连接，而且请求包中需要包含请求方法，URI，协议版本等信息，请求结束后断开连接，完成一次请求/响应操作。故称为短连接。<br>而HTTP/1.1中的keep-alive所保持的长连接则是为了优化每次HTTP请求中TCP连接三次握手的麻烦和资源开销，只建立一次TCP连接，多次的在这个通道上完成请求/响应操作。<br>值得一提的是，服务器无法主动给客户端推送消息。</p>\n</blockquote>\n<h4 id=\"3-WebSocket\"><a href=\"#3-WebSocket\" class=\"headerlink\" title=\"3.WebSocket\"></a>3.WebSocket</h4><blockquote>\n<p>WebSocket也是一种协议，并且也是基于TCP协议的。具体流程是WebSocket通过HTTP先发送一个标记了 Upgrade 的请求，服务端解析后开始建立TCP连接，省去了HTTP长连接每次请求都要上传header的冗余，可以理解为WebSocket是HTTP的优化，但WebSocket不仅仅在Web应用程序上得到支持。</p>\n</blockquote>\n<h4 id=\"4-Socket连接和TCP连接\"><a href=\"#4-Socket连接和TCP连接\" class=\"headerlink\" title=\"4.Socket连接和TCP连接\"></a>4.Socket连接和TCP连接</h4><blockquote>\n<p>其实这就是一个文字游戏而已，建立Socket连接需要至少一对Socket（套接字），而创建Socket连接可以指定不同的传输层协议，即TCP或UDP，所以当采用TCP建立连接时，该Socket连接就视为一个TCP连接。而采用UDP则是无连接的。</p>\n</blockquote>\n<h4 id=\"5-Socket和WebSocket\"><a href=\"#5-Socket和WebSocket\" class=\"headerlink\" title=\"5.Socket和WebSocket\"></a>5.Socket和WebSocket</h4><blockquote>\n<p>这两个虽然名字差不多，但却是两个完全不同的概念，就好比Java和JavaScript一样毫无关系。Socket是一套协议封装后的接口，用于建立Socket连接，而WebSocket虽然是Html5的产物，但也不仅仅局限于浏览器的应用程序，许多语言都提供了WebSocket的支持，比如C，C++，Python等。</p>\n</blockquote>\n<h4 id=\"6-HTTP、WebSocket与TCP的关系\"><a href=\"#6-HTTP、WebSocket与TCP的关系\" class=\"headerlink\" title=\"6.HTTP、WebSocket与TCP的关系\"></a>6.HTTP、WebSocket与TCP的关系</h4><blockquote>\n<p>HTTP通信过程属于“你推一下，我走一下”的方式，客户端不发请求则服务器永远无法发送数据给客户端，而WebSocket则在进行第一次HTTP请求之后，其他全部采用TCP通道进行双向通讯。所以，HTTP和WebSocket虽都是基于TCP协议，但是两者属于完全不同的两种通讯方式。</p>\n</blockquote>\n<p>能比较的都比较了，附上一张关系图强化理解。其实，如果不是专攻网络方面，作为一个程序猿，了解了不同的通讯方式及其对应的优缺点，就可以确定其应用的场景。而这些，就已经基本够用了。<br><img src=\"http://upload-images.jianshu.io/upload_images/1723686-94d1d409d7d6746d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"HTTP-WebSocket-TCP关系图\"></p>\n<blockquote>\n<p>如有理解纰漏的地方还请批评斧正。</p>\n</blockquote>"},{"title":"理解并总结iOS7-10推送通知流程","date":"2017-02-25T00:12:29.000Z","_content":"### 为什么会有这篇文章？\n推送通知苹果几乎每年都改，但都是缝缝补补的功效，直到iOS10的出现，可能苹果觉得之前的代码架构已经无法满足他们的功能需求了，于是也就出现了代码重构。多版本的修改多少有点让人混淆，而此文仅在对iOS7-10通知有一定了解的基础上进行流程总结。[Demo地址](https://github.com/1070824493/NotificationDemo)。\n### iOS推送通知各版本到底改了些啥？\n在回答之前，我先上一段代码：看看iOS10出来之后，兼容到iOS7最一般的推送通知代码该如何写。\n\n<!--more-->\n\n```\n#define IS_IOS_10 [[UIDevice currentDevice].systemVersion floatValue] >= 10.0\n\n#define IS_IOS_9 [[UIDevice currentDevice].systemVersion floatValue] >= 9.0\n\n#define IS_IOS_8 [[UIDevice currentDevice].systemVersion floatValue] >= 8.0\n```\n\n```\n- (void)registerNotification{\n    if (IS_IOS_10) {\n        UNUserNotificationCenter *center = [UNUserNotificationCenter currentNotificationCenter];\n        [center requestAuthorizationWithOptions:(UNAuthorizationOptionBadge | UNAuthorizationOptionSound | UNAuthorizationOptionAlert) completionHandler:^(BOOL granted, NSError * _Nullable error) {\n            if (granted) {\n                [[UIApplication sharedApplication] registerForRemoteNotifications];\n            }\n        }];\n\n        //设置代理\n        [UNUserNotificationCenter currentNotificationCenter].delegate = self;\n    }\n    else if (IS_IOS_8){\n        //ios8注册通知\n        UIUserNotificationType type = UIUserNotificationTypeAlert | UIUserNotificationTypeBadge | UIUserNotificationTypeSound;\n        UIUserNotificationSettings *setting = [UIUserNotificationSettings settingsForTypes:type categories:nil];\n        [[UIApplication sharedApplication]registerUserNotificationSettings:setting];\n        [[UIApplication sharedApplication] registerForRemoteNotifications];\n    }else{\n        //ios7及之前注册通知\n        UIRemoteNotificationType type = UIRemoteNotificationTypeBadge | UIRemoteNotificationTypeAlert | UIRemoteNotificationTypeSound;\n        [[UIApplication sharedApplication]registerForRemoteNotificationTypes:type];\n\n    }\n}\n\n```\n\n随着版本的更替，远程通知和本地通知两个概念是越来越一体了，到iOS10已经无法从方法名直接区分远程通知还是本地通知了，而是通过``UNNotificationTrigger``这个类的子类来区分。需求决定功能，再怎么一体，远程和本地毕竟两个不同的需求，只是代码规范不同了而已。回到前面，先看看通知各版本到底都改了些啥？\n\n> 太老的版本我也就不列了，截至2017年1月初，iOS9以下（不包括iOS9）的系统覆盖率为6%，应用撑死兼容到iOS7，iOS7以下的那些覆盖率，基本可以忽略。\n\n- iOS7 后台静默通知。需要开启``Background Modes``中的``Remote notifications``。\n\n- iOS8 通知请求权限修改。即``UIRemoteNotificationType``由``UIUserNotificationType``代替，并加入了``UIUserNotificationSettings``。\n\n- iOS9 通知加入可输入操作。\n- iOS10 通知重构，全新框架``UserNotifications``。\n\n### 远程通知，本地通知，iOS7到iOS10等那么多的代理方法，怎么区分？又什么时候调用和触发？\n\n对于概念多、各自又有分支和联系的时候，是时候来一张图表了。表中列举了各版本中通知使用相关的类或类库。\n\n![通知理解逻辑图.png](http://upload-images.jianshu.io/upload_images/1723686-100c6d5d505facf1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n#### 普通本地通知\n怎么发送本地通知这个不多说，Demo里面也有，由于真机系统有限，仅在iOS8-9下分应用状态测试了本地通知的流程，iOS7同样适用。主要理清各版本通知的代理方法具体怎么走。\n- 程序杀死状态。\n所有版本，本地通知在``- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions;``方法中获取。``[launchOptions objectForKey:UIApplicationLaunchOptionsLocalNotificationKey]``即为我们需要的通知对象。没有通知时``launchOptions``为空。\n\n- 程序后台状态。\niOS10以下，在点击通知会调用``- (void)application:(UIApplication *)application didReceiveLocalNotification:(UILocalNotification *)notification;``方法。\niOS10会调用``- (void)userNotificationCenter:(UNUserNotificationCenter *)center didReceiveNotificationResponse:(UNNotificationResponse *)response withCompletionHandler:(void (^)())completionHandler``方法。\n\n- 程序前台状态下，iOS10以下不会触发通知栏，并且还是调用``- (void)application:(UIApplication *)application didReceiveLocalNotification:(UILocalNotification *)notification;``方法。\niOS10会立马触发``- (void)userNotificationCenter:(UNUserNotificationCenter *)center willPresentNotification:(UNNotification *)notification withCompletionHandler:(void (^)(UNNotificationPresentationOptions))completionHandler;``方法，并且能根据``completionHandler``回调配置通知的显示样式。点击通知后同样会触发``- (void)userNotificationCenter:(UNUserNotificationCenter *)center didReceiveNotificationResponse:(UNNotificationResponse *)response withCompletionHandler:(void (^)())completionHandler;``方法。\n\n> 值得注意的是，程序后台状态下，代理方法都是在用户点击通知后才会执行，收到通知点击应用图标启动是不会走代理方法的。\n\n> 程序杀死状态下启动应用只会触发``- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions;``方法。\n\n#### 注册了category的可操作本地通知\n先上个通知具体样式图，方便理解。具体代码直接看Demo。\n\n![iOS8-9可操作通知](http://upload-images.jianshu.io/upload_images/1723686-25a50d5a5ccb94da.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n这是iOS8-9上的通知截图，iOS8-9上可操作通知共分为两种，即图中的按钮1和按钮2，点击按钮1会激活应用程序到前台，按钮2后台触发，不会激活应用。点击这两个按钮都会走如下代理方法：\n\n```\n//本地通知category属性使用,iOS8引入，点击按钮触发。\n- (void)application:(UIApplication *)application handleActionWithIdentifier:(NSString *)identifier forLocalNotification:(UILocalNotification *)notification completionHandler:(void (^)())completionHandler{\n    //业务逻辑代码写在这。\n    completionHandler();\n}\n//本地通知category属性使用，iOS9引入，点击按钮或输入文字触发（当实现了此代理方法时，上面的方法失效）。\n- (void)application:(UIApplication *)application handleActionWithIdentifier:(NSString *)identifier forLocalNotification:(UILocalNotification *)notification withResponseInfo:(NSDictionary *)responseInfo completionHandler:(void (^)())completionHandler{\n\n    NSLog(@\"用户输入的信息为:%@\",[responseInfo objectForKey:UIUserNotificationActionResponseTypedTextKey]);\n    //业务逻辑代码写在这。\n    completionHandler();\n}\n```\n\n下面是iOS10的通知截图。\n![iOS10可操作通知](http://upload-images.jianshu.io/upload_images/1723686-32d409a21e677a44.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\niOS10上可操作通知共分为三种：\n\n```\nUNNotificationActionOptionForeground //点击通知会激活应用到前台，需要解锁。\n\nUNNotificationActionOptionAuthenticationRequired //点击通知需要解锁但不会激活应用到前台。\n\nUNNotificationActionOptionDestructive //显示为红色字体，不需要解锁。\n```\n\n> iOS10**所有的**通知，即远程推送，本地推送，都只会触发下面两个方法。而区分远程还是本地通知，就是前面提到的``UNNotificationTrigger``的子类，当``UNNotificationRequest ``的``trigger``为``UNPushNotificationTrigger ``时，说明此通知为远程通知，否则为本地通知。下面为代理方法：\n\n```\n//MARK: iOS10通知代理方法,程序在前台时收到通知调用\n- (void)userNotificationCenter:(UNUserNotificationCenter *)center willPresentNotification:(UNNotification *)notification withCompletionHandler:(void (^)(UNNotificationPresentationOptions))completionHandler{\n    \n    UNNotificationRequest *request = notification.request;\n    NSDictionary *userInfo = request.content.userInfo;\n    \n    if ([request.trigger isKindOfClass:[UNPushNotificationTrigger class]]) {\n        NSLog(@\"收到了一个远程推送:%@\",userInfo);\n    }\n    else{\n        NSLog(@\"收到了一个本地推送:%@\",userInfo);\n    }\n    \n    //此方法回调,设置程序前台是,banner提示框的显示选项,\n    completionHandler(UNNotificationPresentationOptionBadge|UNNotificationPresentationOptionSound|UNNotificationPresentationOptionAlert);\n}\n\n//MARK: iOS10通知代理方法，通知前后台点击时会触发。\n- (void)userNotificationCenter:(UNUserNotificationCenter *)center didReceiveNotificationResponse:(UNNotificationResponse *)response withCompletionHandler:(void (^)())completionHandler{\n    NSDictionary *userInfo = response.notification.request.content.userInfo;\n    NSLog(@\"userInfo:%@\",userInfo);\n    \n    completionHandler();\n}\n```\n> 远程通知和本地通知之所以能统一规范，就是因为其原理类似，唯一的区别在于远程通知需要获取用户的token，通过苹果的APNS将通知发送给对应用户，而具体通知的内容则由后台配置的那个aps字典决定了。\n\n#### 普通远程通知\n远程通知测试的软件我用的[这个](https://github.com/KnuffApp/Knuff)，选择好证书，输入从``- (void)application:(UIApplication *)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)deviceToken``方法中获取的``deviceToken ``，等连接完毕就可以推送一般的远程的通知了。下面是iOS7-9远程通知相关的代理方法（iOS10所有通知只走前面提及的两个方法，不再赘述）。\n\n```\n/**\n 已经收到远程推送消息\n @param userInfo 收到的userInfo信息\n */\n- (void)application:(UIApplication *)application didReceiveRemoteNotification:(NSDictionary *)userInfo{\n    NSLog(@\"userInfo:%@\",userInfo);\n    if (application.applicationState == UIApplicationStateActive) {\n        NSLog(@\"程序运行中收到通知\");\n    }else{\n        NSLog(@\"程序不活跃中收到通知\");\n    }\n}\n\n\n/**\n 后台模式收到的远程推送信息，需要开启后台模式的远程推送，实现了此方法，上面的方法就失效。\n */\n- (void)application:(UIApplication *)application didReceiveRemoteNotification:(NSDictionary *)userInfo fetchCompletionHandler:(void (^)(UIBackgroundFetchResult))completionHandler{\n    NSLog(@\"userInfo:%@\",userInfo);\n    if (application.applicationState == UIApplicationStateActive) {\n        NSLog(@\"程序运行中收到通知\");\n    }else{\n        NSLog(@\"程序不活跃中收到通知\");\n    }\n    \n    completionHandler(UIBackgroundFetchResultNewData);\n}\n\n```\n远程推送需要后台配置title等参数，也就是在本地通知中设置的那些什么``alertTitle，alertBody``啥子的。基本格式如下：\n\n```\n{\n  \"aps\" : {\n    \"alert\" : {\n      \"title\" : \"主标题\",\n      \"subtitle\" : \"子标题\",\n      \"body\" : \"通知内容\"\n    },\n    \"badge\" : 2,\n    \"sound\" : \"alert.wav\"\n  },\n  \"custom\" : \"something\"\n}\n```\n\n> - 其中aps为固定对象，后台需要传输自己的参数可以自行添加与aps并列的键值对。\n- ``subtitle``是iOS10才有的，iOS10之前加不加无所谓。\n- ``sound``为提示音，默认为``default``，自定义时别忘了后缀。\n- ``custom ``为自扩展字段，比如iOS10中图片和视频的连接地址就可以放这里。\n\n#### 高级远程通知\n所谓高级，无非就是iOS10以下的可操作通知、iOS10中通知的增删改，以及``UNNotificationServiceExtension ``和``UNNotificationContentExtension``这两个通知扩展了。由于是远程通知，这里仅附上测试aps格式，方便测试。\n\n```\n{\n  \"aps\" : {\n    \"alert\" : {\n      \"title\" : \"这是title\",\n      \"subtitle\" : \"这是subtitle\",\n      \"body\" : \"这是body\"\t\t\n    },\n    \"mutable-content\" : \"1\",\t\t\t\n    \"category\" : \"myNotificationCategory\"\t\t\t\t\n  }\n}\n```\n\n> \n- 此aps可以用来测试上述所有高级远程通知。\n- ``category``中的值必须与测试可操作通知时的``category``值一样。\n- 测试``UNNotificationContentExtension ``时，必须和plist文件中的``UNNotificationExtensionCategory``所对应的值保持一致，编译对应的``Scheme``即可。\n- 凡是需要对通知内容做修改的都要加上``mutable-content``字段，``UNNotificationServiceExtension ``中需要使用。例如下载通知中传来的图片或视频，先下载后再通知。\n- 通知的增删改都是根据``request``中的``identifier``进行查找和区分的。\n\n\n通知其实也就这些，只是改的多，显得乱而已。理解了通知的流程与原理，处理这一模块的问题也就能得心应手。","source":"_posts/1小时理解并总结iOS7-10推送通知流程.md","raw":"---\ntitle: 理解并总结iOS7-10推送通知流程\ndate: 2017-02-25 08:12:29\ncategories: 折腾\n---\n### 为什么会有这篇文章？\n推送通知苹果几乎每年都改，但都是缝缝补补的功效，直到iOS10的出现，可能苹果觉得之前的代码架构已经无法满足他们的功能需求了，于是也就出现了代码重构。多版本的修改多少有点让人混淆，而此文仅在对iOS7-10通知有一定了解的基础上进行流程总结。[Demo地址](https://github.com/1070824493/NotificationDemo)。\n### iOS推送通知各版本到底改了些啥？\n在回答之前，我先上一段代码：看看iOS10出来之后，兼容到iOS7最一般的推送通知代码该如何写。\n\n<!--more-->\n\n```\n#define IS_IOS_10 [[UIDevice currentDevice].systemVersion floatValue] >= 10.0\n\n#define IS_IOS_9 [[UIDevice currentDevice].systemVersion floatValue] >= 9.0\n\n#define IS_IOS_8 [[UIDevice currentDevice].systemVersion floatValue] >= 8.0\n```\n\n```\n- (void)registerNotification{\n    if (IS_IOS_10) {\n        UNUserNotificationCenter *center = [UNUserNotificationCenter currentNotificationCenter];\n        [center requestAuthorizationWithOptions:(UNAuthorizationOptionBadge | UNAuthorizationOptionSound | UNAuthorizationOptionAlert) completionHandler:^(BOOL granted, NSError * _Nullable error) {\n            if (granted) {\n                [[UIApplication sharedApplication] registerForRemoteNotifications];\n            }\n        }];\n\n        //设置代理\n        [UNUserNotificationCenter currentNotificationCenter].delegate = self;\n    }\n    else if (IS_IOS_8){\n        //ios8注册通知\n        UIUserNotificationType type = UIUserNotificationTypeAlert | UIUserNotificationTypeBadge | UIUserNotificationTypeSound;\n        UIUserNotificationSettings *setting = [UIUserNotificationSettings settingsForTypes:type categories:nil];\n        [[UIApplication sharedApplication]registerUserNotificationSettings:setting];\n        [[UIApplication sharedApplication] registerForRemoteNotifications];\n    }else{\n        //ios7及之前注册通知\n        UIRemoteNotificationType type = UIRemoteNotificationTypeBadge | UIRemoteNotificationTypeAlert | UIRemoteNotificationTypeSound;\n        [[UIApplication sharedApplication]registerForRemoteNotificationTypes:type];\n\n    }\n}\n\n```\n\n随着版本的更替，远程通知和本地通知两个概念是越来越一体了，到iOS10已经无法从方法名直接区分远程通知还是本地通知了，而是通过``UNNotificationTrigger``这个类的子类来区分。需求决定功能，再怎么一体，远程和本地毕竟两个不同的需求，只是代码规范不同了而已。回到前面，先看看通知各版本到底都改了些啥？\n\n> 太老的版本我也就不列了，截至2017年1月初，iOS9以下（不包括iOS9）的系统覆盖率为6%，应用撑死兼容到iOS7，iOS7以下的那些覆盖率，基本可以忽略。\n\n- iOS7 后台静默通知。需要开启``Background Modes``中的``Remote notifications``。\n\n- iOS8 通知请求权限修改。即``UIRemoteNotificationType``由``UIUserNotificationType``代替，并加入了``UIUserNotificationSettings``。\n\n- iOS9 通知加入可输入操作。\n- iOS10 通知重构，全新框架``UserNotifications``。\n\n### 远程通知，本地通知，iOS7到iOS10等那么多的代理方法，怎么区分？又什么时候调用和触发？\n\n对于概念多、各自又有分支和联系的时候，是时候来一张图表了。表中列举了各版本中通知使用相关的类或类库。\n\n![通知理解逻辑图.png](http://upload-images.jianshu.io/upload_images/1723686-100c6d5d505facf1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n#### 普通本地通知\n怎么发送本地通知这个不多说，Demo里面也有，由于真机系统有限，仅在iOS8-9下分应用状态测试了本地通知的流程，iOS7同样适用。主要理清各版本通知的代理方法具体怎么走。\n- 程序杀死状态。\n所有版本，本地通知在``- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions;``方法中获取。``[launchOptions objectForKey:UIApplicationLaunchOptionsLocalNotificationKey]``即为我们需要的通知对象。没有通知时``launchOptions``为空。\n\n- 程序后台状态。\niOS10以下，在点击通知会调用``- (void)application:(UIApplication *)application didReceiveLocalNotification:(UILocalNotification *)notification;``方法。\niOS10会调用``- (void)userNotificationCenter:(UNUserNotificationCenter *)center didReceiveNotificationResponse:(UNNotificationResponse *)response withCompletionHandler:(void (^)())completionHandler``方法。\n\n- 程序前台状态下，iOS10以下不会触发通知栏，并且还是调用``- (void)application:(UIApplication *)application didReceiveLocalNotification:(UILocalNotification *)notification;``方法。\niOS10会立马触发``- (void)userNotificationCenter:(UNUserNotificationCenter *)center willPresentNotification:(UNNotification *)notification withCompletionHandler:(void (^)(UNNotificationPresentationOptions))completionHandler;``方法，并且能根据``completionHandler``回调配置通知的显示样式。点击通知后同样会触发``- (void)userNotificationCenter:(UNUserNotificationCenter *)center didReceiveNotificationResponse:(UNNotificationResponse *)response withCompletionHandler:(void (^)())completionHandler;``方法。\n\n> 值得注意的是，程序后台状态下，代理方法都是在用户点击通知后才会执行，收到通知点击应用图标启动是不会走代理方法的。\n\n> 程序杀死状态下启动应用只会触发``- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions;``方法。\n\n#### 注册了category的可操作本地通知\n先上个通知具体样式图，方便理解。具体代码直接看Demo。\n\n![iOS8-9可操作通知](http://upload-images.jianshu.io/upload_images/1723686-25a50d5a5ccb94da.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n这是iOS8-9上的通知截图，iOS8-9上可操作通知共分为两种，即图中的按钮1和按钮2，点击按钮1会激活应用程序到前台，按钮2后台触发，不会激活应用。点击这两个按钮都会走如下代理方法：\n\n```\n//本地通知category属性使用,iOS8引入，点击按钮触发。\n- (void)application:(UIApplication *)application handleActionWithIdentifier:(NSString *)identifier forLocalNotification:(UILocalNotification *)notification completionHandler:(void (^)())completionHandler{\n    //业务逻辑代码写在这。\n    completionHandler();\n}\n//本地通知category属性使用，iOS9引入，点击按钮或输入文字触发（当实现了此代理方法时，上面的方法失效）。\n- (void)application:(UIApplication *)application handleActionWithIdentifier:(NSString *)identifier forLocalNotification:(UILocalNotification *)notification withResponseInfo:(NSDictionary *)responseInfo completionHandler:(void (^)())completionHandler{\n\n    NSLog(@\"用户输入的信息为:%@\",[responseInfo objectForKey:UIUserNotificationActionResponseTypedTextKey]);\n    //业务逻辑代码写在这。\n    completionHandler();\n}\n```\n\n下面是iOS10的通知截图。\n![iOS10可操作通知](http://upload-images.jianshu.io/upload_images/1723686-32d409a21e677a44.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\niOS10上可操作通知共分为三种：\n\n```\nUNNotificationActionOptionForeground //点击通知会激活应用到前台，需要解锁。\n\nUNNotificationActionOptionAuthenticationRequired //点击通知需要解锁但不会激活应用到前台。\n\nUNNotificationActionOptionDestructive //显示为红色字体，不需要解锁。\n```\n\n> iOS10**所有的**通知，即远程推送，本地推送，都只会触发下面两个方法。而区分远程还是本地通知，就是前面提到的``UNNotificationTrigger``的子类，当``UNNotificationRequest ``的``trigger``为``UNPushNotificationTrigger ``时，说明此通知为远程通知，否则为本地通知。下面为代理方法：\n\n```\n//MARK: iOS10通知代理方法,程序在前台时收到通知调用\n- (void)userNotificationCenter:(UNUserNotificationCenter *)center willPresentNotification:(UNNotification *)notification withCompletionHandler:(void (^)(UNNotificationPresentationOptions))completionHandler{\n    \n    UNNotificationRequest *request = notification.request;\n    NSDictionary *userInfo = request.content.userInfo;\n    \n    if ([request.trigger isKindOfClass:[UNPushNotificationTrigger class]]) {\n        NSLog(@\"收到了一个远程推送:%@\",userInfo);\n    }\n    else{\n        NSLog(@\"收到了一个本地推送:%@\",userInfo);\n    }\n    \n    //此方法回调,设置程序前台是,banner提示框的显示选项,\n    completionHandler(UNNotificationPresentationOptionBadge|UNNotificationPresentationOptionSound|UNNotificationPresentationOptionAlert);\n}\n\n//MARK: iOS10通知代理方法，通知前后台点击时会触发。\n- (void)userNotificationCenter:(UNUserNotificationCenter *)center didReceiveNotificationResponse:(UNNotificationResponse *)response withCompletionHandler:(void (^)())completionHandler{\n    NSDictionary *userInfo = response.notification.request.content.userInfo;\n    NSLog(@\"userInfo:%@\",userInfo);\n    \n    completionHandler();\n}\n```\n> 远程通知和本地通知之所以能统一规范，就是因为其原理类似，唯一的区别在于远程通知需要获取用户的token，通过苹果的APNS将通知发送给对应用户，而具体通知的内容则由后台配置的那个aps字典决定了。\n\n#### 普通远程通知\n远程通知测试的软件我用的[这个](https://github.com/KnuffApp/Knuff)，选择好证书，输入从``- (void)application:(UIApplication *)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)deviceToken``方法中获取的``deviceToken ``，等连接完毕就可以推送一般的远程的通知了。下面是iOS7-9远程通知相关的代理方法（iOS10所有通知只走前面提及的两个方法，不再赘述）。\n\n```\n/**\n 已经收到远程推送消息\n @param userInfo 收到的userInfo信息\n */\n- (void)application:(UIApplication *)application didReceiveRemoteNotification:(NSDictionary *)userInfo{\n    NSLog(@\"userInfo:%@\",userInfo);\n    if (application.applicationState == UIApplicationStateActive) {\n        NSLog(@\"程序运行中收到通知\");\n    }else{\n        NSLog(@\"程序不活跃中收到通知\");\n    }\n}\n\n\n/**\n 后台模式收到的远程推送信息，需要开启后台模式的远程推送，实现了此方法，上面的方法就失效。\n */\n- (void)application:(UIApplication *)application didReceiveRemoteNotification:(NSDictionary *)userInfo fetchCompletionHandler:(void (^)(UIBackgroundFetchResult))completionHandler{\n    NSLog(@\"userInfo:%@\",userInfo);\n    if (application.applicationState == UIApplicationStateActive) {\n        NSLog(@\"程序运行中收到通知\");\n    }else{\n        NSLog(@\"程序不活跃中收到通知\");\n    }\n    \n    completionHandler(UIBackgroundFetchResultNewData);\n}\n\n```\n远程推送需要后台配置title等参数，也就是在本地通知中设置的那些什么``alertTitle，alertBody``啥子的。基本格式如下：\n\n```\n{\n  \"aps\" : {\n    \"alert\" : {\n      \"title\" : \"主标题\",\n      \"subtitle\" : \"子标题\",\n      \"body\" : \"通知内容\"\n    },\n    \"badge\" : 2,\n    \"sound\" : \"alert.wav\"\n  },\n  \"custom\" : \"something\"\n}\n```\n\n> - 其中aps为固定对象，后台需要传输自己的参数可以自行添加与aps并列的键值对。\n- ``subtitle``是iOS10才有的，iOS10之前加不加无所谓。\n- ``sound``为提示音，默认为``default``，自定义时别忘了后缀。\n- ``custom ``为自扩展字段，比如iOS10中图片和视频的连接地址就可以放这里。\n\n#### 高级远程通知\n所谓高级，无非就是iOS10以下的可操作通知、iOS10中通知的增删改，以及``UNNotificationServiceExtension ``和``UNNotificationContentExtension``这两个通知扩展了。由于是远程通知，这里仅附上测试aps格式，方便测试。\n\n```\n{\n  \"aps\" : {\n    \"alert\" : {\n      \"title\" : \"这是title\",\n      \"subtitle\" : \"这是subtitle\",\n      \"body\" : \"这是body\"\t\t\n    },\n    \"mutable-content\" : \"1\",\t\t\t\n    \"category\" : \"myNotificationCategory\"\t\t\t\t\n  }\n}\n```\n\n> \n- 此aps可以用来测试上述所有高级远程通知。\n- ``category``中的值必须与测试可操作通知时的``category``值一样。\n- 测试``UNNotificationContentExtension ``时，必须和plist文件中的``UNNotificationExtensionCategory``所对应的值保持一致，编译对应的``Scheme``即可。\n- 凡是需要对通知内容做修改的都要加上``mutable-content``字段，``UNNotificationServiceExtension ``中需要使用。例如下载通知中传来的图片或视频，先下载后再通知。\n- 通知的增删改都是根据``request``中的``identifier``进行查找和区分的。\n\n\n通知其实也就这些，只是改的多，显得乱而已。理解了通知的流程与原理，处理这一模块的问题也就能得心应手。","slug":"1小时理解并总结iOS7-10推送通知流程","published":1,"updated":"2017-03-02T12:53:47.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck2ek6q8b0004i3nmonn8a93w","content":"<script src=\"/assets/js/APlayer.min.js\"> </script><h3 id=\"为什么会有这篇文章？\"><a href=\"#为什么会有这篇文章？\" class=\"headerlink\" title=\"为什么会有这篇文章？\"></a>为什么会有这篇文章？</h3><p>推送通知苹果几乎每年都改，但都是缝缝补补的功效，直到iOS10的出现，可能苹果觉得之前的代码架构已经无法满足他们的功能需求了，于是也就出现了代码重构。多版本的修改多少有点让人混淆，而此文仅在对iOS7-10通知有一定了解的基础上进行流程总结。<a href=\"https://github.com/1070824493/NotificationDemo\" target=\"_blank\" rel=\"noopener\">Demo地址</a>。</p>\n<h3 id=\"iOS推送通知各版本到底改了些啥？\"><a href=\"#iOS推送通知各版本到底改了些啥？\" class=\"headerlink\" title=\"iOS推送通知各版本到底改了些啥？\"></a>iOS推送通知各版本到底改了些啥？</h3><p>在回答之前，我先上一段代码：看看iOS10出来之后，兼容到iOS7最一般的推送通知代码该如何写。</p>\n<a id=\"more\"></a>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#define IS_IOS_10 [[UIDevice currentDevice].systemVersion floatValue] &gt;= 10.0</span><br><span class=\"line\"></span><br><span class=\"line\">#define IS_IOS_9 [[UIDevice currentDevice].systemVersion floatValue] &gt;= 9.0</span><br><span class=\"line\"></span><br><span class=\"line\">#define IS_IOS_8 [[UIDevice currentDevice].systemVersion floatValue] &gt;= 8.0</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- (void)registerNotification&#123;</span><br><span class=\"line\">    if (IS_IOS_10) &#123;</span><br><span class=\"line\">        UNUserNotificationCenter *center = [UNUserNotificationCenter currentNotificationCenter];</span><br><span class=\"line\">        [center requestAuthorizationWithOptions:(UNAuthorizationOptionBadge | UNAuthorizationOptionSound | UNAuthorizationOptionAlert) completionHandler:^(BOOL granted, NSError * _Nullable error) &#123;</span><br><span class=\"line\">            if (granted) &#123;</span><br><span class=\"line\">                [[UIApplication sharedApplication] registerForRemoteNotifications];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;];</span><br><span class=\"line\"></span><br><span class=\"line\">        //设置代理</span><br><span class=\"line\">        [UNUserNotificationCenter currentNotificationCenter].delegate = self;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    else if (IS_IOS_8)&#123;</span><br><span class=\"line\">        //ios8注册通知</span><br><span class=\"line\">        UIUserNotificationType type = UIUserNotificationTypeAlert | UIUserNotificationTypeBadge | UIUserNotificationTypeSound;</span><br><span class=\"line\">        UIUserNotificationSettings *setting = [UIUserNotificationSettings settingsForTypes:type categories:nil];</span><br><span class=\"line\">        [[UIApplication sharedApplication]registerUserNotificationSettings:setting];</span><br><span class=\"line\">        [[UIApplication sharedApplication] registerForRemoteNotifications];</span><br><span class=\"line\">    &#125;else&#123;</span><br><span class=\"line\">        //ios7及之前注册通知</span><br><span class=\"line\">        UIRemoteNotificationType type = UIRemoteNotificationTypeBadge | UIRemoteNotificationTypeAlert | UIRemoteNotificationTypeSound;</span><br><span class=\"line\">        [[UIApplication sharedApplication]registerForRemoteNotificationTypes:type];</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>随着版本的更替，远程通知和本地通知两个概念是越来越一体了，到iOS10已经无法从方法名直接区分远程通知还是本地通知了，而是通过<code>UNNotificationTrigger</code>这个类的子类来区分。需求决定功能，再怎么一体，远程和本地毕竟两个不同的需求，只是代码规范不同了而已。回到前面，先看看通知各版本到底都改了些啥？</p>\n<blockquote>\n<p>太老的版本我也就不列了，截至2017年1月初，iOS9以下（不包括iOS9）的系统覆盖率为6%，应用撑死兼容到iOS7，iOS7以下的那些覆盖率，基本可以忽略。</p>\n</blockquote>\n<ul>\n<li><p>iOS7 后台静默通知。需要开启<code>Background Modes</code>中的<code>Remote notifications</code>。</p>\n</li>\n<li><p>iOS8 通知请求权限修改。即<code>UIRemoteNotificationType</code>由<code>UIUserNotificationType</code>代替，并加入了<code>UIUserNotificationSettings</code>。</p>\n</li>\n<li><p>iOS9 通知加入可输入操作。</p>\n</li>\n<li>iOS10 通知重构，全新框架<code>UserNotifications</code>。</li>\n</ul>\n<h3 id=\"远程通知，本地通知，iOS7到iOS10等那么多的代理方法，怎么区分？又什么时候调用和触发？\"><a href=\"#远程通知，本地通知，iOS7到iOS10等那么多的代理方法，怎么区分？又什么时候调用和触发？\" class=\"headerlink\" title=\"远程通知，本地通知，iOS7到iOS10等那么多的代理方法，怎么区分？又什么时候调用和触发？\"></a>远程通知，本地通知，iOS7到iOS10等那么多的代理方法，怎么区分？又什么时候调用和触发？</h3><p>对于概念多、各自又有分支和联系的时候，是时候来一张图表了。表中列举了各版本中通知使用相关的类或类库。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1723686-100c6d5d505facf1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"通知理解逻辑图.png\"></p>\n<h4 id=\"普通本地通知\"><a href=\"#普通本地通知\" class=\"headerlink\" title=\"普通本地通知\"></a>普通本地通知</h4><p>怎么发送本地通知这个不多说，Demo里面也有，由于真机系统有限，仅在iOS8-9下分应用状态测试了本地通知的流程，iOS7同样适用。主要理清各版本通知的代理方法具体怎么走。</p>\n<ul>\n<li><p>程序杀死状态。<br>所有版本，本地通知在<code>- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions;</code>方法中获取。<code>[launchOptions objectForKey:UIApplicationLaunchOptionsLocalNotificationKey]</code>即为我们需要的通知对象。没有通知时<code>launchOptions</code>为空。</p>\n</li>\n<li><p>程序后台状态。<br>iOS10以下，在点击通知会调用<code>- (void)application:(UIApplication *)application didReceiveLocalNotification:(UILocalNotification *)notification;</code>方法。<br>iOS10会调用<code>- (void)userNotificationCenter:(UNUserNotificationCenter *)center didReceiveNotificationResponse:(UNNotificationResponse *)response withCompletionHandler:(void (^)())completionHandler</code>方法。</p>\n</li>\n<li><p>程序前台状态下，iOS10以下不会触发通知栏，并且还是调用<code>- (void)application:(UIApplication *)application didReceiveLocalNotification:(UILocalNotification *)notification;</code>方法。<br>iOS10会立马触发<code>- (void)userNotificationCenter:(UNUserNotificationCenter *)center willPresentNotification:(UNNotification *)notification withCompletionHandler:(void (^)(UNNotificationPresentationOptions))completionHandler;</code>方法，并且能根据<code>completionHandler</code>回调配置通知的显示样式。点击通知后同样会触发<code>- (void)userNotificationCenter:(UNUserNotificationCenter *)center didReceiveNotificationResponse:(UNNotificationResponse *)response withCompletionHandler:(void (^)())completionHandler;</code>方法。</p>\n</li>\n</ul>\n<blockquote>\n<p>值得注意的是，程序后台状态下，代理方法都是在用户点击通知后才会执行，收到通知点击应用图标启动是不会走代理方法的。</p>\n</blockquote>\n<blockquote>\n<p>程序杀死状态下启动应用只会触发<code>- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions;</code>方法。</p>\n</blockquote>\n<h4 id=\"注册了category的可操作本地通知\"><a href=\"#注册了category的可操作本地通知\" class=\"headerlink\" title=\"注册了category的可操作本地通知\"></a>注册了category的可操作本地通知</h4><p>先上个通知具体样式图，方便理解。具体代码直接看Demo。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1723686-25a50d5a5ccb94da.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"iOS8-9可操作通知\"><br>这是iOS8-9上的通知截图，iOS8-9上可操作通知共分为两种，即图中的按钮1和按钮2，点击按钮1会激活应用程序到前台，按钮2后台触发，不会激活应用。点击这两个按钮都会走如下代理方法：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//本地通知category属性使用,iOS8引入，点击按钮触发。</span><br><span class=\"line\">- (void)application:(UIApplication *)application handleActionWithIdentifier:(NSString *)identifier forLocalNotification:(UILocalNotification *)notification completionHandler:(void (^)())completionHandler&#123;</span><br><span class=\"line\">    //业务逻辑代码写在这。</span><br><span class=\"line\">    completionHandler();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">//本地通知category属性使用，iOS9引入，点击按钮或输入文字触发（当实现了此代理方法时，上面的方法失效）。</span><br><span class=\"line\">- (void)application:(UIApplication *)application handleActionWithIdentifier:(NSString *)identifier forLocalNotification:(UILocalNotification *)notification withResponseInfo:(NSDictionary *)responseInfo completionHandler:(void (^)())completionHandler&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    NSLog(@&quot;用户输入的信息为:%@&quot;,[responseInfo objectForKey:UIUserNotificationActionResponseTypedTextKey]);</span><br><span class=\"line\">    //业务逻辑代码写在这。</span><br><span class=\"line\">    completionHandler();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>下面是iOS10的通知截图。<br><img src=\"http://upload-images.jianshu.io/upload_images/1723686-32d409a21e677a44.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"iOS10可操作通知\"></p>\n<p>iOS10上可操作通知共分为三种：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">UNNotificationActionOptionForeground //点击通知会激活应用到前台，需要解锁。</span><br><span class=\"line\"></span><br><span class=\"line\">UNNotificationActionOptionAuthenticationRequired //点击通知需要解锁但不会激活应用到前台。</span><br><span class=\"line\"></span><br><span class=\"line\">UNNotificationActionOptionDestructive //显示为红色字体，不需要解锁。</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>iOS10<strong>所有的</strong>通知，即远程推送，本地推送，都只会触发下面两个方法。而区分远程还是本地通知，就是前面提到的<code>UNNotificationTrigger</code>的子类，当<code>UNNotificationRequest</code>的<code>trigger</code>为<code>UNPushNotificationTrigger</code>时，说明此通知为远程通知，否则为本地通知。下面为代理方法：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//MARK: iOS10通知代理方法,程序在前台时收到通知调用</span><br><span class=\"line\">- (void)userNotificationCenter:(UNUserNotificationCenter *)center willPresentNotification:(UNNotification *)notification withCompletionHandler:(void (^)(UNNotificationPresentationOptions))completionHandler&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    UNNotificationRequest *request = notification.request;</span><br><span class=\"line\">    NSDictionary *userInfo = request.content.userInfo;</span><br><span class=\"line\">    </span><br><span class=\"line\">    if ([request.trigger isKindOfClass:[UNPushNotificationTrigger class]]) &#123;</span><br><span class=\"line\">        NSLog(@&quot;收到了一个远程推送:%@&quot;,userInfo);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    else&#123;</span><br><span class=\"line\">        NSLog(@&quot;收到了一个本地推送:%@&quot;,userInfo);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    //此方法回调,设置程序前台是,banner提示框的显示选项,</span><br><span class=\"line\">    completionHandler(UNNotificationPresentationOptionBadge|UNNotificationPresentationOptionSound|UNNotificationPresentationOptionAlert);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">//MARK: iOS10通知代理方法，通知前后台点击时会触发。</span><br><span class=\"line\">- (void)userNotificationCenter:(UNUserNotificationCenter *)center didReceiveNotificationResponse:(UNNotificationResponse *)response withCompletionHandler:(void (^)())completionHandler&#123;</span><br><span class=\"line\">    NSDictionary *userInfo = response.notification.request.content.userInfo;</span><br><span class=\"line\">    NSLog(@&quot;userInfo:%@&quot;,userInfo);</span><br><span class=\"line\">    </span><br><span class=\"line\">    completionHandler();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>远程通知和本地通知之所以能统一规范，就是因为其原理类似，唯一的区别在于远程通知需要获取用户的token，通过苹果的APNS将通知发送给对应用户，而具体通知的内容则由后台配置的那个aps字典决定了。</p>\n</blockquote>\n<h4 id=\"普通远程通知\"><a href=\"#普通远程通知\" class=\"headerlink\" title=\"普通远程通知\"></a>普通远程通知</h4><p>远程通知测试的软件我用的<a href=\"https://github.com/KnuffApp/Knuff\" target=\"_blank\" rel=\"noopener\">这个</a>，选择好证书，输入从<code>- (void)application:(UIApplication *)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)deviceToken</code>方法中获取的<code>deviceToken</code>，等连接完毕就可以推送一般的远程的通知了。下面是iOS7-9远程通知相关的代理方法（iOS10所有通知只走前面提及的两个方法，不再赘述）。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> 已经收到远程推送消息</span><br><span class=\"line\"> @param userInfo 收到的userInfo信息</span><br><span class=\"line\"> */</span><br><span class=\"line\">- (void)application:(UIApplication *)application didReceiveRemoteNotification:(NSDictionary *)userInfo&#123;</span><br><span class=\"line\">    NSLog(@&quot;userInfo:%@&quot;,userInfo);</span><br><span class=\"line\">    if (application.applicationState == UIApplicationStateActive) &#123;</span><br><span class=\"line\">        NSLog(@&quot;程序运行中收到通知&quot;);</span><br><span class=\"line\">    &#125;else&#123;</span><br><span class=\"line\">        NSLog(@&quot;程序不活跃中收到通知&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"> 后台模式收到的远程推送信息，需要开启后台模式的远程推送，实现了此方法，上面的方法就失效。</span><br><span class=\"line\"> */</span><br><span class=\"line\">- (void)application:(UIApplication *)application didReceiveRemoteNotification:(NSDictionary *)userInfo fetchCompletionHandler:(void (^)(UIBackgroundFetchResult))completionHandler&#123;</span><br><span class=\"line\">    NSLog(@&quot;userInfo:%@&quot;,userInfo);</span><br><span class=\"line\">    if (application.applicationState == UIApplicationStateActive) &#123;</span><br><span class=\"line\">        NSLog(@&quot;程序运行中收到通知&quot;);</span><br><span class=\"line\">    &#125;else&#123;</span><br><span class=\"line\">        NSLog(@&quot;程序不活跃中收到通知&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    completionHandler(UIBackgroundFetchResultNewData);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>远程推送需要后台配置title等参数，也就是在本地通知中设置的那些什么<code>alertTitle，alertBody</code>啥子的。基本格式如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;aps&quot; : &#123;</span><br><span class=\"line\">    &quot;alert&quot; : &#123;</span><br><span class=\"line\">      &quot;title&quot; : &quot;主标题&quot;,</span><br><span class=\"line\">      &quot;subtitle&quot; : &quot;子标题&quot;,</span><br><span class=\"line\">      &quot;body&quot; : &quot;通知内容&quot;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &quot;badge&quot; : 2,</span><br><span class=\"line\">    &quot;sound&quot; : &quot;alert.wav&quot;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &quot;custom&quot; : &quot;something&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<ul>\n<li>其中aps为固定对象，后台需要传输自己的参数可以自行添加与aps并列的键值对。</li>\n<li><code>subtitle</code>是iOS10才有的，iOS10之前加不加无所谓。</li>\n<li><code>sound</code>为提示音，默认为<code>default</code>，自定义时别忘了后缀。</li>\n<li><code>custom</code>为自扩展字段，比如iOS10中图片和视频的连接地址就可以放这里。</li>\n</ul>\n</blockquote>\n<h4 id=\"高级远程通知\"><a href=\"#高级远程通知\" class=\"headerlink\" title=\"高级远程通知\"></a>高级远程通知</h4><p>所谓高级，无非就是iOS10以下的可操作通知、iOS10中通知的增删改，以及<code>UNNotificationServiceExtension</code>和<code>UNNotificationContentExtension</code>这两个通知扩展了。由于是远程通知，这里仅附上测试aps格式，方便测试。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;aps&quot; : &#123;</span><br><span class=\"line\">    &quot;alert&quot; : &#123;</span><br><span class=\"line\">      &quot;title&quot; : &quot;这是title&quot;,</span><br><span class=\"line\">      &quot;subtitle&quot; : &quot;这是subtitle&quot;,</span><br><span class=\"line\">      &quot;body&quot; : &quot;这是body&quot;\t\t</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &quot;mutable-content&quot; : &quot;1&quot;,\t\t\t</span><br><span class=\"line\">    &quot;category&quot; : &quot;myNotificationCategory&quot;\t\t\t\t</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n</blockquote>\n<ul>\n<li>此aps可以用来测试上述所有高级远程通知。</li>\n<li><code>category</code>中的值必须与测试可操作通知时的<code>category</code>值一样。</li>\n<li>测试<code>UNNotificationContentExtension</code>时，必须和plist文件中的<code>UNNotificationExtensionCategory</code>所对应的值保持一致，编译对应的<code>Scheme</code>即可。</li>\n<li>凡是需要对通知内容做修改的都要加上<code>mutable-content</code>字段，<code>UNNotificationServiceExtension</code>中需要使用。例如下载通知中传来的图片或视频，先下载后再通知。</li>\n<li>通知的增删改都是根据<code>request</code>中的<code>identifier</code>进行查找和区分的。</li>\n</ul>\n<p>通知其实也就这些，只是改的多，显得乱而已。理解了通知的流程与原理，处理这一模块的问题也就能得心应手。</p>\n","site":{"data":{}},"excerpt":"<h3 id=\"为什么会有这篇文章？\"><a href=\"#为什么会有这篇文章？\" class=\"headerlink\" title=\"为什么会有这篇文章？\"></a>为什么会有这篇文章？</h3><p>推送通知苹果几乎每年都改，但都是缝缝补补的功效，直到iOS10的出现，可能苹果觉得之前的代码架构已经无法满足他们的功能需求了，于是也就出现了代码重构。多版本的修改多少有点让人混淆，而此文仅在对iOS7-10通知有一定了解的基础上进行流程总结。<a href=\"https://github.com/1070824493/NotificationDemo\" target=\"_blank\" rel=\"noopener\">Demo地址</a>。</p>\n<h3 id=\"iOS推送通知各版本到底改了些啥？\"><a href=\"#iOS推送通知各版本到底改了些啥？\" class=\"headerlink\" title=\"iOS推送通知各版本到底改了些啥？\"></a>iOS推送通知各版本到底改了些啥？</h3><p>在回答之前，我先上一段代码：看看iOS10出来之后，兼容到iOS7最一般的推送通知代码该如何写。</p>","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#define IS_IOS_10 [[UIDevice currentDevice].systemVersion floatValue] &gt;= 10.0</span><br><span class=\"line\"></span><br><span class=\"line\">#define IS_IOS_9 [[UIDevice currentDevice].systemVersion floatValue] &gt;= 9.0</span><br><span class=\"line\"></span><br><span class=\"line\">#define IS_IOS_8 [[UIDevice currentDevice].systemVersion floatValue] &gt;= 8.0</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- (void)registerNotification&#123;</span><br><span class=\"line\">    if (IS_IOS_10) &#123;</span><br><span class=\"line\">        UNUserNotificationCenter *center = [UNUserNotificationCenter currentNotificationCenter];</span><br><span class=\"line\">        [center requestAuthorizationWithOptions:(UNAuthorizationOptionBadge | UNAuthorizationOptionSound | UNAuthorizationOptionAlert) completionHandler:^(BOOL granted, NSError * _Nullable error) &#123;</span><br><span class=\"line\">            if (granted) &#123;</span><br><span class=\"line\">                [[UIApplication sharedApplication] registerForRemoteNotifications];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;];</span><br><span class=\"line\"></span><br><span class=\"line\">        //设置代理</span><br><span class=\"line\">        [UNUserNotificationCenter currentNotificationCenter].delegate = self;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    else if (IS_IOS_8)&#123;</span><br><span class=\"line\">        //ios8注册通知</span><br><span class=\"line\">        UIUserNotificationType type = UIUserNotificationTypeAlert | UIUserNotificationTypeBadge | UIUserNotificationTypeSound;</span><br><span class=\"line\">        UIUserNotificationSettings *setting = [UIUserNotificationSettings settingsForTypes:type categories:nil];</span><br><span class=\"line\">        [[UIApplication sharedApplication]registerUserNotificationSettings:setting];</span><br><span class=\"line\">        [[UIApplication sharedApplication] registerForRemoteNotifications];</span><br><span class=\"line\">    &#125;else&#123;</span><br><span class=\"line\">        //ios7及之前注册通知</span><br><span class=\"line\">        UIRemoteNotificationType type = UIRemoteNotificationTypeBadge | UIRemoteNotificationTypeAlert | UIRemoteNotificationTypeSound;</span><br><span class=\"line\">        [[UIApplication sharedApplication]registerForRemoteNotificationTypes:type];</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>随着版本的更替，远程通知和本地通知两个概念是越来越一体了，到iOS10已经无法从方法名直接区分远程通知还是本地通知了，而是通过<code>UNNotificationTrigger</code>这个类的子类来区分。需求决定功能，再怎么一体，远程和本地毕竟两个不同的需求，只是代码规范不同了而已。回到前面，先看看通知各版本到底都改了些啥？</p>\n<blockquote>\n<p>太老的版本我也就不列了，截至2017年1月初，iOS9以下（不包括iOS9）的系统覆盖率为6%，应用撑死兼容到iOS7，iOS7以下的那些覆盖率，基本可以忽略。</p>\n</blockquote>\n<ul>\n<li><p>iOS7 后台静默通知。需要开启<code>Background Modes</code>中的<code>Remote notifications</code>。</p>\n</li>\n<li><p>iOS8 通知请求权限修改。即<code>UIRemoteNotificationType</code>由<code>UIUserNotificationType</code>代替，并加入了<code>UIUserNotificationSettings</code>。</p>\n</li>\n<li><p>iOS9 通知加入可输入操作。</p>\n</li>\n<li>iOS10 通知重构，全新框架<code>UserNotifications</code>。</li>\n</ul>\n<h3 id=\"远程通知，本地通知，iOS7到iOS10等那么多的代理方法，怎么区分？又什么时候调用和触发？\"><a href=\"#远程通知，本地通知，iOS7到iOS10等那么多的代理方法，怎么区分？又什么时候调用和触发？\" class=\"headerlink\" title=\"远程通知，本地通知，iOS7到iOS10等那么多的代理方法，怎么区分？又什么时候调用和触发？\"></a>远程通知，本地通知，iOS7到iOS10等那么多的代理方法，怎么区分？又什么时候调用和触发？</h3><p>对于概念多、各自又有分支和联系的时候，是时候来一张图表了。表中列举了各版本中通知使用相关的类或类库。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1723686-100c6d5d505facf1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"通知理解逻辑图.png\"></p>\n<h4 id=\"普通本地通知\"><a href=\"#普通本地通知\" class=\"headerlink\" title=\"普通本地通知\"></a>普通本地通知</h4><p>怎么发送本地通知这个不多说，Demo里面也有，由于真机系统有限，仅在iOS8-9下分应用状态测试了本地通知的流程，iOS7同样适用。主要理清各版本通知的代理方法具体怎么走。</p>\n<ul>\n<li><p>程序杀死状态。<br>所有版本，本地通知在<code>- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions;</code>方法中获取。<code>[launchOptions objectForKey:UIApplicationLaunchOptionsLocalNotificationKey]</code>即为我们需要的通知对象。没有通知时<code>launchOptions</code>为空。</p>\n</li>\n<li><p>程序后台状态。<br>iOS10以下，在点击通知会调用<code>- (void)application:(UIApplication *)application didReceiveLocalNotification:(UILocalNotification *)notification;</code>方法。<br>iOS10会调用<code>- (void)userNotificationCenter:(UNUserNotificationCenter *)center didReceiveNotificationResponse:(UNNotificationResponse *)response withCompletionHandler:(void (^)())completionHandler</code>方法。</p>\n</li>\n<li><p>程序前台状态下，iOS10以下不会触发通知栏，并且还是调用<code>- (void)application:(UIApplication *)application didReceiveLocalNotification:(UILocalNotification *)notification;</code>方法。<br>iOS10会立马触发<code>- (void)userNotificationCenter:(UNUserNotificationCenter *)center willPresentNotification:(UNNotification *)notification withCompletionHandler:(void (^)(UNNotificationPresentationOptions))completionHandler;</code>方法，并且能根据<code>completionHandler</code>回调配置通知的显示样式。点击通知后同样会触发<code>- (void)userNotificationCenter:(UNUserNotificationCenter *)center didReceiveNotificationResponse:(UNNotificationResponse *)response withCompletionHandler:(void (^)())completionHandler;</code>方法。</p>\n</li>\n</ul>\n<blockquote>\n<p>值得注意的是，程序后台状态下，代理方法都是在用户点击通知后才会执行，收到通知点击应用图标启动是不会走代理方法的。</p>\n</blockquote>\n<blockquote>\n<p>程序杀死状态下启动应用只会触发<code>- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions;</code>方法。</p>\n</blockquote>\n<h4 id=\"注册了category的可操作本地通知\"><a href=\"#注册了category的可操作本地通知\" class=\"headerlink\" title=\"注册了category的可操作本地通知\"></a>注册了category的可操作本地通知</h4><p>先上个通知具体样式图，方便理解。具体代码直接看Demo。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1723686-25a50d5a5ccb94da.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"iOS8-9可操作通知\"><br>这是iOS8-9上的通知截图，iOS8-9上可操作通知共分为两种，即图中的按钮1和按钮2，点击按钮1会激活应用程序到前台，按钮2后台触发，不会激活应用。点击这两个按钮都会走如下代理方法：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//本地通知category属性使用,iOS8引入，点击按钮触发。</span><br><span class=\"line\">- (void)application:(UIApplication *)application handleActionWithIdentifier:(NSString *)identifier forLocalNotification:(UILocalNotification *)notification completionHandler:(void (^)())completionHandler&#123;</span><br><span class=\"line\">    //业务逻辑代码写在这。</span><br><span class=\"line\">    completionHandler();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">//本地通知category属性使用，iOS9引入，点击按钮或输入文字触发（当实现了此代理方法时，上面的方法失效）。</span><br><span class=\"line\">- (void)application:(UIApplication *)application handleActionWithIdentifier:(NSString *)identifier forLocalNotification:(UILocalNotification *)notification withResponseInfo:(NSDictionary *)responseInfo completionHandler:(void (^)())completionHandler&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    NSLog(@&quot;用户输入的信息为:%@&quot;,[responseInfo objectForKey:UIUserNotificationActionResponseTypedTextKey]);</span><br><span class=\"line\">    //业务逻辑代码写在这。</span><br><span class=\"line\">    completionHandler();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>下面是iOS10的通知截图。<br><img src=\"http://upload-images.jianshu.io/upload_images/1723686-32d409a21e677a44.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"iOS10可操作通知\"></p>\n<p>iOS10上可操作通知共分为三种：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">UNNotificationActionOptionForeground //点击通知会激活应用到前台，需要解锁。</span><br><span class=\"line\"></span><br><span class=\"line\">UNNotificationActionOptionAuthenticationRequired //点击通知需要解锁但不会激活应用到前台。</span><br><span class=\"line\"></span><br><span class=\"line\">UNNotificationActionOptionDestructive //显示为红色字体，不需要解锁。</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>iOS10<strong>所有的</strong>通知，即远程推送，本地推送，都只会触发下面两个方法。而区分远程还是本地通知，就是前面提到的<code>UNNotificationTrigger</code>的子类，当<code>UNNotificationRequest</code>的<code>trigger</code>为<code>UNPushNotificationTrigger</code>时，说明此通知为远程通知，否则为本地通知。下面为代理方法：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//MARK: iOS10通知代理方法,程序在前台时收到通知调用</span><br><span class=\"line\">- (void)userNotificationCenter:(UNUserNotificationCenter *)center willPresentNotification:(UNNotification *)notification withCompletionHandler:(void (^)(UNNotificationPresentationOptions))completionHandler&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    UNNotificationRequest *request = notification.request;</span><br><span class=\"line\">    NSDictionary *userInfo = request.content.userInfo;</span><br><span class=\"line\">    </span><br><span class=\"line\">    if ([request.trigger isKindOfClass:[UNPushNotificationTrigger class]]) &#123;</span><br><span class=\"line\">        NSLog(@&quot;收到了一个远程推送:%@&quot;,userInfo);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    else&#123;</span><br><span class=\"line\">        NSLog(@&quot;收到了一个本地推送:%@&quot;,userInfo);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    //此方法回调,设置程序前台是,banner提示框的显示选项,</span><br><span class=\"line\">    completionHandler(UNNotificationPresentationOptionBadge|UNNotificationPresentationOptionSound|UNNotificationPresentationOptionAlert);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">//MARK: iOS10通知代理方法，通知前后台点击时会触发。</span><br><span class=\"line\">- (void)userNotificationCenter:(UNUserNotificationCenter *)center didReceiveNotificationResponse:(UNNotificationResponse *)response withCompletionHandler:(void (^)())completionHandler&#123;</span><br><span class=\"line\">    NSDictionary *userInfo = response.notification.request.content.userInfo;</span><br><span class=\"line\">    NSLog(@&quot;userInfo:%@&quot;,userInfo);</span><br><span class=\"line\">    </span><br><span class=\"line\">    completionHandler();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>远程通知和本地通知之所以能统一规范，就是因为其原理类似，唯一的区别在于远程通知需要获取用户的token，通过苹果的APNS将通知发送给对应用户，而具体通知的内容则由后台配置的那个aps字典决定了。</p>\n</blockquote>\n<h4 id=\"普通远程通知\"><a href=\"#普通远程通知\" class=\"headerlink\" title=\"普通远程通知\"></a>普通远程通知</h4><p>远程通知测试的软件我用的<a href=\"https://github.com/KnuffApp/Knuff\" target=\"_blank\" rel=\"noopener\">这个</a>，选择好证书，输入从<code>- (void)application:(UIApplication *)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)deviceToken</code>方法中获取的<code>deviceToken</code>，等连接完毕就可以推送一般的远程的通知了。下面是iOS7-9远程通知相关的代理方法（iOS10所有通知只走前面提及的两个方法，不再赘述）。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> 已经收到远程推送消息</span><br><span class=\"line\"> @param userInfo 收到的userInfo信息</span><br><span class=\"line\"> */</span><br><span class=\"line\">- (void)application:(UIApplication *)application didReceiveRemoteNotification:(NSDictionary *)userInfo&#123;</span><br><span class=\"line\">    NSLog(@&quot;userInfo:%@&quot;,userInfo);</span><br><span class=\"line\">    if (application.applicationState == UIApplicationStateActive) &#123;</span><br><span class=\"line\">        NSLog(@&quot;程序运行中收到通知&quot;);</span><br><span class=\"line\">    &#125;else&#123;</span><br><span class=\"line\">        NSLog(@&quot;程序不活跃中收到通知&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"> 后台模式收到的远程推送信息，需要开启后台模式的远程推送，实现了此方法，上面的方法就失效。</span><br><span class=\"line\"> */</span><br><span class=\"line\">- (void)application:(UIApplication *)application didReceiveRemoteNotification:(NSDictionary *)userInfo fetchCompletionHandler:(void (^)(UIBackgroundFetchResult))completionHandler&#123;</span><br><span class=\"line\">    NSLog(@&quot;userInfo:%@&quot;,userInfo);</span><br><span class=\"line\">    if (application.applicationState == UIApplicationStateActive) &#123;</span><br><span class=\"line\">        NSLog(@&quot;程序运行中收到通知&quot;);</span><br><span class=\"line\">    &#125;else&#123;</span><br><span class=\"line\">        NSLog(@&quot;程序不活跃中收到通知&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    completionHandler(UIBackgroundFetchResultNewData);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>远程推送需要后台配置title等参数，也就是在本地通知中设置的那些什么<code>alertTitle，alertBody</code>啥子的。基本格式如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;aps&quot; : &#123;</span><br><span class=\"line\">    &quot;alert&quot; : &#123;</span><br><span class=\"line\">      &quot;title&quot; : &quot;主标题&quot;,</span><br><span class=\"line\">      &quot;subtitle&quot; : &quot;子标题&quot;,</span><br><span class=\"line\">      &quot;body&quot; : &quot;通知内容&quot;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &quot;badge&quot; : 2,</span><br><span class=\"line\">    &quot;sound&quot; : &quot;alert.wav&quot;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &quot;custom&quot; : &quot;something&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<ul>\n<li>其中aps为固定对象，后台需要传输自己的参数可以自行添加与aps并列的键值对。</li>\n<li><code>subtitle</code>是iOS10才有的，iOS10之前加不加无所谓。</li>\n<li><code>sound</code>为提示音，默认为<code>default</code>，自定义时别忘了后缀。</li>\n<li><code>custom</code>为自扩展字段，比如iOS10中图片和视频的连接地址就可以放这里。</li>\n</ul>\n</blockquote>\n<h4 id=\"高级远程通知\"><a href=\"#高级远程通知\" class=\"headerlink\" title=\"高级远程通知\"></a>高级远程通知</h4><p>所谓高级，无非就是iOS10以下的可操作通知、iOS10中通知的增删改，以及<code>UNNotificationServiceExtension</code>和<code>UNNotificationContentExtension</code>这两个通知扩展了。由于是远程通知，这里仅附上测试aps格式，方便测试。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;aps&quot; : &#123;</span><br><span class=\"line\">    &quot;alert&quot; : &#123;</span><br><span class=\"line\">      &quot;title&quot; : &quot;这是title&quot;,</span><br><span class=\"line\">      &quot;subtitle&quot; : &quot;这是subtitle&quot;,</span><br><span class=\"line\">      &quot;body&quot; : &quot;这是body&quot;\t\t</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &quot;mutable-content&quot; : &quot;1&quot;,\t\t\t</span><br><span class=\"line\">    &quot;category&quot; : &quot;myNotificationCategory&quot;\t\t\t\t</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n</blockquote>\n<ul>\n<li>此aps可以用来测试上述所有高级远程通知。</li>\n<li><code>category</code>中的值必须与测试可操作通知时的<code>category</code>值一样。</li>\n<li>测试<code>UNNotificationContentExtension</code>时，必须和plist文件中的<code>UNNotificationExtensionCategory</code>所对应的值保持一致，编译对应的<code>Scheme</code>即可。</li>\n<li>凡是需要对通知内容做修改的都要加上<code>mutable-content</code>字段，<code>UNNotificationServiceExtension</code>中需要使用。例如下载通知中传来的图片或视频，先下载后再通知。</li>\n<li>通知的增删改都是根据<code>request</code>中的<code>identifier</code>进行查找和区分的。</li>\n</ul>\n<p>通知其实也就这些，只是改的多，显得乱而已。理解了通知的流程与原理，处理这一模块的问题也就能得心应手。</p>"},{"title":"一路向北","date":"2016-04-10T07:56:12.000Z","_content":"我是一个会迎风流泪的孩子，但我已不是一个好孩子。\n\n初夏，周末，傍晚，阴，有风。\n\n我站在红灯前，看着北京城中人来人往，却看不清物是人非。在红绿交错的刹那，我朝对面走去，看着剧毒般的绿影，我仿佛听到了急促锐耳的刹车声。\n\n阴天有着一种让人腐烂的味道，风一过就能带来一种窒息感。\n\n看着脚下的这座被铁路交通切割得支离破碎的城市，我忽的就想起了当初怎么就毅然决然的来到北京，来到这个充斥着杂质的混浊的城市，让我看不清自己。\n\n北京真是一个繁华的城市，繁华到过一次马路得等两个红绿灯，繁华到上班得六点赶公交然后挤上炼狱般的地铁，繁华到曾经一起拼搏的人也开始重新思考自己的生活，繁华到最初的梦想碎落满地，自己也逐渐迷失在灯红酒绿中。曾经乱舞平剑的少年，曾经说过的多么荡气回肠的句子，似乎就像经历了一场无声的爆炸，平淡却又让你体无完肤。\n\n<!--more-->\n\n我在路边的长椅坐下，头顶不知名的植物不停的掉着花瓣，潮湿而粘稠的泛着乳白色，没有樱花的轻盈，也没有枫叶的飒爽，就这么沉重的摔了下来。多么像我，突然一大片灰蒙蒙的天空压下来，一座城市塌下来，猝不及防。\n\n其实我是那种能和别人讲大道理的人，我习惯性的将一件事情从最好的情况到最坏的结果都考虑清楚，然后我就会以最差的情况开始计划。朋友说我太悲观，我想也是，一个喜欢下雨天，衣服只有黑白两种颜色的人能指望他有多乐观的人生观。可是我还是来到了这个陌生的城市，也莫名其妙的在这里生存了许久。看上去很多没有办法解决的问题我还是想办法腾出了时间，找到了方法，比如长假，比如官司。不管多么糟糕的情况我都能找到办法，或好或坏，或优或劣。\n\n北京的晚风像是掺了沙砾一般摩擦着皮肤，行道树也蒙上了一层灰绿。也许是习惯了南方的青山绿水，习惯了家乡随处可见的燕子和鸟窝，才会又突然的想起过去，想着自己为什么变成了自己曾经厌恶的样子。\n\n北京的傍晚并没有预期的干爽，也没有所期望的人来人往，我张扬的舒展了身子。\n\n一开始，我以为北京的人走路会有很精准的速度，事实上，原来自己也能跟上。\n\n一开始，我以为奇怪的天气会梦魇般的笼罩着这个城市，事实上，到哪我都能找到属于自己的蓝天。\n\n一开始，我以为一个喜欢独处，习惯以一种局外人的姿态冷眼看这个世界的人最后的结果只会是百年孤独般可怜和可恨，事实上，站在回忆的出口，我竟然也学会了迎难而上，而不再是迎风流泪。\n\n生活不愧为最好的老师。\n\n后视镜里的世界一点点的在倒退，连同着往日的阴影和这座孤单的城市，一起消失不见。","source":"_posts/一路向北.md","raw":"---\ntitle: 一路向北\ndate: 2016-04-10 15:56:12\ncategories: 文字\n---\n我是一个会迎风流泪的孩子，但我已不是一个好孩子。\n\n初夏，周末，傍晚，阴，有风。\n\n我站在红灯前，看着北京城中人来人往，却看不清物是人非。在红绿交错的刹那，我朝对面走去，看着剧毒般的绿影，我仿佛听到了急促锐耳的刹车声。\n\n阴天有着一种让人腐烂的味道，风一过就能带来一种窒息感。\n\n看着脚下的这座被铁路交通切割得支离破碎的城市，我忽的就想起了当初怎么就毅然决然的来到北京，来到这个充斥着杂质的混浊的城市，让我看不清自己。\n\n北京真是一个繁华的城市，繁华到过一次马路得等两个红绿灯，繁华到上班得六点赶公交然后挤上炼狱般的地铁，繁华到曾经一起拼搏的人也开始重新思考自己的生活，繁华到最初的梦想碎落满地，自己也逐渐迷失在灯红酒绿中。曾经乱舞平剑的少年，曾经说过的多么荡气回肠的句子，似乎就像经历了一场无声的爆炸，平淡却又让你体无完肤。\n\n<!--more-->\n\n我在路边的长椅坐下，头顶不知名的植物不停的掉着花瓣，潮湿而粘稠的泛着乳白色，没有樱花的轻盈，也没有枫叶的飒爽，就这么沉重的摔了下来。多么像我，突然一大片灰蒙蒙的天空压下来，一座城市塌下来，猝不及防。\n\n其实我是那种能和别人讲大道理的人，我习惯性的将一件事情从最好的情况到最坏的结果都考虑清楚，然后我就会以最差的情况开始计划。朋友说我太悲观，我想也是，一个喜欢下雨天，衣服只有黑白两种颜色的人能指望他有多乐观的人生观。可是我还是来到了这个陌生的城市，也莫名其妙的在这里生存了许久。看上去很多没有办法解决的问题我还是想办法腾出了时间，找到了方法，比如长假，比如官司。不管多么糟糕的情况我都能找到办法，或好或坏，或优或劣。\n\n北京的晚风像是掺了沙砾一般摩擦着皮肤，行道树也蒙上了一层灰绿。也许是习惯了南方的青山绿水，习惯了家乡随处可见的燕子和鸟窝，才会又突然的想起过去，想着自己为什么变成了自己曾经厌恶的样子。\n\n北京的傍晚并没有预期的干爽，也没有所期望的人来人往，我张扬的舒展了身子。\n\n一开始，我以为北京的人走路会有很精准的速度，事实上，原来自己也能跟上。\n\n一开始，我以为奇怪的天气会梦魇般的笼罩着这个城市，事实上，到哪我都能找到属于自己的蓝天。\n\n一开始，我以为一个喜欢独处，习惯以一种局外人的姿态冷眼看这个世界的人最后的结果只会是百年孤独般可怜和可恨，事实上，站在回忆的出口，我竟然也学会了迎难而上，而不再是迎风流泪。\n\n生活不愧为最好的老师。\n\n后视镜里的世界一点点的在倒退，连同着往日的阴影和这座孤单的城市，一起消失不见。","slug":"一路向北","published":1,"updated":"2017-03-02T12:53:47.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck2ek6q8c0005i3nm4ge7ygro","content":"<script src=\"/assets/js/APlayer.min.js\"> </script><p>我是一个会迎风流泪的孩子，但我已不是一个好孩子。</p>\n<p>初夏，周末，傍晚，阴，有风。</p>\n<p>我站在红灯前，看着北京城中人来人往，却看不清物是人非。在红绿交错的刹那，我朝对面走去，看着剧毒般的绿影，我仿佛听到了急促锐耳的刹车声。</p>\n<p>阴天有着一种让人腐烂的味道，风一过就能带来一种窒息感。</p>\n<p>看着脚下的这座被铁路交通切割得支离破碎的城市，我忽的就想起了当初怎么就毅然决然的来到北京，来到这个充斥着杂质的混浊的城市，让我看不清自己。</p>\n<p>北京真是一个繁华的城市，繁华到过一次马路得等两个红绿灯，繁华到上班得六点赶公交然后挤上炼狱般的地铁，繁华到曾经一起拼搏的人也开始重新思考自己的生活，繁华到最初的梦想碎落满地，自己也逐渐迷失在灯红酒绿中。曾经乱舞平剑的少年，曾经说过的多么荡气回肠的句子，似乎就像经历了一场无声的爆炸，平淡却又让你体无完肤。</p>\n<a id=\"more\"></a>\n<p>我在路边的长椅坐下，头顶不知名的植物不停的掉着花瓣，潮湿而粘稠的泛着乳白色，没有樱花的轻盈，也没有枫叶的飒爽，就这么沉重的摔了下来。多么像我，突然一大片灰蒙蒙的天空压下来，一座城市塌下来，猝不及防。</p>\n<p>其实我是那种能和别人讲大道理的人，我习惯性的将一件事情从最好的情况到最坏的结果都考虑清楚，然后我就会以最差的情况开始计划。朋友说我太悲观，我想也是，一个喜欢下雨天，衣服只有黑白两种颜色的人能指望他有多乐观的人生观。可是我还是来到了这个陌生的城市，也莫名其妙的在这里生存了许久。看上去很多没有办法解决的问题我还是想办法腾出了时间，找到了方法，比如长假，比如官司。不管多么糟糕的情况我都能找到办法，或好或坏，或优或劣。</p>\n<p>北京的晚风像是掺了沙砾一般摩擦着皮肤，行道树也蒙上了一层灰绿。也许是习惯了南方的青山绿水，习惯了家乡随处可见的燕子和鸟窝，才会又突然的想起过去，想着自己为什么变成了自己曾经厌恶的样子。</p>\n<p>北京的傍晚并没有预期的干爽，也没有所期望的人来人往，我张扬的舒展了身子。</p>\n<p>一开始，我以为北京的人走路会有很精准的速度，事实上，原来自己也能跟上。</p>\n<p>一开始，我以为奇怪的天气会梦魇般的笼罩着这个城市，事实上，到哪我都能找到属于自己的蓝天。</p>\n<p>一开始，我以为一个喜欢独处，习惯以一种局外人的姿态冷眼看这个世界的人最后的结果只会是百年孤独般可怜和可恨，事实上，站在回忆的出口，我竟然也学会了迎难而上，而不再是迎风流泪。</p>\n<p>生活不愧为最好的老师。</p>\n<p>后视镜里的世界一点点的在倒退，连同着往日的阴影和这座孤单的城市，一起消失不见。</p>\n","site":{"data":{}},"excerpt":"<p>我是一个会迎风流泪的孩子，但我已不是一个好孩子。</p>\n<p>初夏，周末，傍晚，阴，有风。</p>\n<p>我站在红灯前，看着北京城中人来人往，却看不清物是人非。在红绿交错的刹那，我朝对面走去，看着剧毒般的绿影，我仿佛听到了急促锐耳的刹车声。</p>\n<p>阴天有着一种让人腐烂的味道，风一过就能带来一种窒息感。</p>\n<p>看着脚下的这座被铁路交通切割得支离破碎的城市，我忽的就想起了当初怎么就毅然决然的来到北京，来到这个充斥着杂质的混浊的城市，让我看不清自己。</p>\n<p>北京真是一个繁华的城市，繁华到过一次马路得等两个红绿灯，繁华到上班得六点赶公交然后挤上炼狱般的地铁，繁华到曾经一起拼搏的人也开始重新思考自己的生活，繁华到最初的梦想碎落满地，自己也逐渐迷失在灯红酒绿中。曾经乱舞平剑的少年，曾经说过的多么荡气回肠的句子，似乎就像经历了一场无声的爆炸，平淡却又让你体无完肤。</p>","more":"<p>我在路边的长椅坐下，头顶不知名的植物不停的掉着花瓣，潮湿而粘稠的泛着乳白色，没有樱花的轻盈，也没有枫叶的飒爽，就这么沉重的摔了下来。多么像我，突然一大片灰蒙蒙的天空压下来，一座城市塌下来，猝不及防。</p>\n<p>其实我是那种能和别人讲大道理的人，我习惯性的将一件事情从最好的情况到最坏的结果都考虑清楚，然后我就会以最差的情况开始计划。朋友说我太悲观，我想也是，一个喜欢下雨天，衣服只有黑白两种颜色的人能指望他有多乐观的人生观。可是我还是来到了这个陌生的城市，也莫名其妙的在这里生存了许久。看上去很多没有办法解决的问题我还是想办法腾出了时间，找到了方法，比如长假，比如官司。不管多么糟糕的情况我都能找到办法，或好或坏，或优或劣。</p>\n<p>北京的晚风像是掺了沙砾一般摩擦着皮肤，行道树也蒙上了一层灰绿。也许是习惯了南方的青山绿水，习惯了家乡随处可见的燕子和鸟窝，才会又突然的想起过去，想着自己为什么变成了自己曾经厌恶的样子。</p>\n<p>北京的傍晚并没有预期的干爽，也没有所期望的人来人往，我张扬的舒展了身子。</p>\n<p>一开始，我以为北京的人走路会有很精准的速度，事实上，原来自己也能跟上。</p>\n<p>一开始，我以为奇怪的天气会梦魇般的笼罩着这个城市，事实上，到哪我都能找到属于自己的蓝天。</p>\n<p>一开始，我以为一个喜欢独处，习惯以一种局外人的姿态冷眼看这个世界的人最后的结果只会是百年孤独般可怜和可恨，事实上，站在回忆的出口，我竟然也学会了迎难而上，而不再是迎风流泪。</p>\n<p>生活不愧为最好的老师。</p>\n<p>后视镜里的世界一点点的在倒退，连同着往日的阴影和这座孤单的城市，一起消失不见。</p>"},{"title":"女神不仅仅是你的目标，更是得手之后的努力","date":"2016-09-01T11:33:34.000Z","_content":">北京似乎成为了一个情感包囊，很多人将自己的喜怒哀乐推责于这座臃肿的城市。这个令人如痴如醉的城市，让整个人像是浸泡在福尔马林中，备受煎熬却一直吸引着你。\n\n我们常常一边相信着单身是最好的升值期，一边却在偶遇到自己的女神后悄然动心。\n\n七月，周五，傍晚，闷。\n\n我依旧背着黑色书包，沉浸在自己的音乐世界里，漫不经心的等着自己下班回家的公交车。\n\n我跟着节奏微微的抖动着，微驼的肩膀似有若无的被人轻轻拍了一下。我尝试着回头，一个化着淡妆，年龄似乎比我大的年轻女子正看着我，我扫视了她一眼之后立马将视线转移了，对，那双水灵的大眼睛，让我无法与之对视。\n\n>如同你在最深的海底，亦然偏见绝美的月光。\n\n<!--more-->\n\n我一脸懵逼的摘下一个耳机，没说话，示意有事吗？\n\n“你好，我手机没电了，你能帮我叫个滴滴打车吗？”\n\n我迟疑了2秒，但是我还是下意识的开始寻找着这个应用。\n\n“恩，可以，你要去哪？”，我打开了应用。\n\n“天通苑小学南门”，她声音很小，很浓的北方口音，“我刚来北京，坐错车了，手机没电了，不知道怎么回去了。”\n\n我波澜不惊的心竟起了一丝怜悯，对，是怜悯，想起当初刚来北京的痛楚，我清楚她现在最需要的是什么。\n\n司机比我想象得来的要慢，也不是从我想象的方向过来，我一边带着她在路口与公交车站来回等待，一边目送着自己回家的公交就这么过去。\n\n车到了，她坚持给我车费，我取下另一个耳机，象征性的拿了一部分，啥都没说就送她上车了。对，没错，电话，微信啥的都没要，全程就莫名其妙给一个陌生人打了个车，然后还收了个尾数的车费。我一边嘲笑着自己这个IT男晚期，一边又戴上耳机，继续望着自己回家的路。\n\n>北京是一座悲伤的城市，这里诞生着太多没有结果的故事。\n\n周六晚上，刚从游戏中逃离的我，百无聊赖中的瞅了眼万年不看的公司群，里面依旧聊着各种烧脑题目，搞笑视频。于我而言，整个微信的剩余价值仅仅是老总逢年过节的红包而已。然而，联系人旁那个猩红的数字“1”还是吸引了我这个轻微的强迫症患者。\n\n“谢谢你，我是刚才让你帮我打车的，”。\n\n就在我还纳闷整天宅在家里啥时候还出门积了德的时候，脑海中出现了这个说话以逗号结尾的女孩子轮廓。\n\n我同意了，打了个招呼，她简洁的表达了昨天的感谢，然后又问我北京站到她家怎么走。对,她此时又迷路了。\n\n>很多人都因为所谓的缘分而走在了一起，但最终都败给了那些只有一己之力的爱情。一屋，两人，三餐，四季，只有彼此都懂得珍惜的道理，才能一直走下去。\n\n我听朋友讲过一个故事，故事的男主风流倜傥，在学校追求着自己的女神，端茶倒水，嘘寒问暖，恨不得拉屎都得伺候着。没等他说完，我打断道：“最后的最后，男的得手了，但是他们最终也散了”。朋友说，你说话还是这么刻薄。\n\n刻薄的不是我，而是这个世界。两情相悦的前提从来都不应该是一己之力的付出，目的性太强的恋爱伴随的往往都是昙花一现的华丽。\n\n持续了一周断断续续的聊天，让我决定和女神再见一次面，直到买下电影票的时候我才要到她的联系方式。\n\n","source":"_posts/女神不仅仅是你的目标，更是得手之后的努力.md","raw":"---\ntitle: 女神不仅仅是你的目标，更是得手之后的努力\ndate: 2016-09-01 19:33:34\ncategories: 文字\n---\n>北京似乎成为了一个情感包囊，很多人将自己的喜怒哀乐推责于这座臃肿的城市。这个令人如痴如醉的城市，让整个人像是浸泡在福尔马林中，备受煎熬却一直吸引着你。\n\n我们常常一边相信着单身是最好的升值期，一边却在偶遇到自己的女神后悄然动心。\n\n七月，周五，傍晚，闷。\n\n我依旧背着黑色书包，沉浸在自己的音乐世界里，漫不经心的等着自己下班回家的公交车。\n\n我跟着节奏微微的抖动着，微驼的肩膀似有若无的被人轻轻拍了一下。我尝试着回头，一个化着淡妆，年龄似乎比我大的年轻女子正看着我，我扫视了她一眼之后立马将视线转移了，对，那双水灵的大眼睛，让我无法与之对视。\n\n>如同你在最深的海底，亦然偏见绝美的月光。\n\n<!--more-->\n\n我一脸懵逼的摘下一个耳机，没说话，示意有事吗？\n\n“你好，我手机没电了，你能帮我叫个滴滴打车吗？”\n\n我迟疑了2秒，但是我还是下意识的开始寻找着这个应用。\n\n“恩，可以，你要去哪？”，我打开了应用。\n\n“天通苑小学南门”，她声音很小，很浓的北方口音，“我刚来北京，坐错车了，手机没电了，不知道怎么回去了。”\n\n我波澜不惊的心竟起了一丝怜悯，对，是怜悯，想起当初刚来北京的痛楚，我清楚她现在最需要的是什么。\n\n司机比我想象得来的要慢，也不是从我想象的方向过来，我一边带着她在路口与公交车站来回等待，一边目送着自己回家的公交就这么过去。\n\n车到了，她坚持给我车费，我取下另一个耳机，象征性的拿了一部分，啥都没说就送她上车了。对，没错，电话，微信啥的都没要，全程就莫名其妙给一个陌生人打了个车，然后还收了个尾数的车费。我一边嘲笑着自己这个IT男晚期，一边又戴上耳机，继续望着自己回家的路。\n\n>北京是一座悲伤的城市，这里诞生着太多没有结果的故事。\n\n周六晚上，刚从游戏中逃离的我，百无聊赖中的瞅了眼万年不看的公司群，里面依旧聊着各种烧脑题目，搞笑视频。于我而言，整个微信的剩余价值仅仅是老总逢年过节的红包而已。然而，联系人旁那个猩红的数字“1”还是吸引了我这个轻微的强迫症患者。\n\n“谢谢你，我是刚才让你帮我打车的，”。\n\n就在我还纳闷整天宅在家里啥时候还出门积了德的时候，脑海中出现了这个说话以逗号结尾的女孩子轮廓。\n\n我同意了，打了个招呼，她简洁的表达了昨天的感谢，然后又问我北京站到她家怎么走。对,她此时又迷路了。\n\n>很多人都因为所谓的缘分而走在了一起，但最终都败给了那些只有一己之力的爱情。一屋，两人，三餐，四季，只有彼此都懂得珍惜的道理，才能一直走下去。\n\n我听朋友讲过一个故事，故事的男主风流倜傥，在学校追求着自己的女神，端茶倒水，嘘寒问暖，恨不得拉屎都得伺候着。没等他说完，我打断道：“最后的最后，男的得手了，但是他们最终也散了”。朋友说，你说话还是这么刻薄。\n\n刻薄的不是我，而是这个世界。两情相悦的前提从来都不应该是一己之力的付出，目的性太强的恋爱伴随的往往都是昙花一现的华丽。\n\n持续了一周断断续续的聊天，让我决定和女神再见一次面，直到买下电影票的时候我才要到她的联系方式。\n\n","slug":"女神不仅仅是你的目标，更是得手之后的努力","published":1,"updated":"2019-10-31T10:07:33.345Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck2ek6q8d0006i3nm6vga99f9","content":"<script src=\"/assets/js/APlayer.min.js\"> </script><blockquote>\n<p>北京似乎成为了一个情感包囊，很多人将自己的喜怒哀乐推责于这座臃肿的城市。这个令人如痴如醉的城市，让整个人像是浸泡在福尔马林中，备受煎熬却一直吸引着你。</p>\n</blockquote>\n<p>我们常常一边相信着单身是最好的升值期，一边却在偶遇到自己的女神后悄然动心。</p>\n<p>七月，周五，傍晚，闷。</p>\n<p>我依旧背着黑色书包，沉浸在自己的音乐世界里，漫不经心的等着自己下班回家的公交车。</p>\n<p>我跟着节奏微微的抖动着，微驼的肩膀似有若无的被人轻轻拍了一下。我尝试着回头，一个化着淡妆，年龄似乎比我大的年轻女子正看着我，我扫视了她一眼之后立马将视线转移了，对，那双水灵的大眼睛，让我无法与之对视。</p>\n<blockquote>\n<p>如同你在最深的海底，亦然偏见绝美的月光。</p>\n</blockquote>\n<a id=\"more\"></a>\n<p>我一脸懵逼的摘下一个耳机，没说话，示意有事吗？</p>\n<p>“你好，我手机没电了，你能帮我叫个滴滴打车吗？”</p>\n<p>我迟疑了2秒，但是我还是下意识的开始寻找着这个应用。</p>\n<p>“恩，可以，你要去哪？”，我打开了应用。</p>\n<p>“天通苑小学南门”，她声音很小，很浓的北方口音，“我刚来北京，坐错车了，手机没电了，不知道怎么回去了。”</p>\n<p>我波澜不惊的心竟起了一丝怜悯，对，是怜悯，想起当初刚来北京的痛楚，我清楚她现在最需要的是什么。</p>\n<p>司机比我想象得来的要慢，也不是从我想象的方向过来，我一边带着她在路口与公交车站来回等待，一边目送着自己回家的公交就这么过去。</p>\n<p>车到了，她坚持给我车费，我取下另一个耳机，象征性的拿了一部分，啥都没说就送她上车了。对，没错，电话，微信啥的都没要，全程就莫名其妙给一个陌生人打了个车，然后还收了个尾数的车费。我一边嘲笑着自己这个IT男晚期，一边又戴上耳机，继续望着自己回家的路。</p>\n<blockquote>\n<p>北京是一座悲伤的城市，这里诞生着太多没有结果的故事。</p>\n</blockquote>\n<p>周六晚上，刚从游戏中逃离的我，百无聊赖中的瞅了眼万年不看的公司群，里面依旧聊着各种烧脑题目，搞笑视频。于我而言，整个微信的剩余价值仅仅是老总逢年过节的红包而已。然而，联系人旁那个猩红的数字“1”还是吸引了我这个轻微的强迫症患者。</p>\n<p>“谢谢你，我是刚才让你帮我打车的，”。</p>\n<p>就在我还纳闷整天宅在家里啥时候还出门积了德的时候，脑海中出现了这个说话以逗号结尾的女孩子轮廓。</p>\n<p>我同意了，打了个招呼，她简洁的表达了昨天的感谢，然后又问我北京站到她家怎么走。对,她此时又迷路了。</p>\n<blockquote>\n<p>很多人都因为所谓的缘分而走在了一起，但最终都败给了那些只有一己之力的爱情。一屋，两人，三餐，四季，只有彼此都懂得珍惜的道理，才能一直走下去。</p>\n</blockquote>\n<p>我听朋友讲过一个故事，故事的男主风流倜傥，在学校追求着自己的女神，端茶倒水，嘘寒问暖，恨不得拉屎都得伺候着。没等他说完，我打断道：“最后的最后，男的得手了，但是他们最终也散了”。朋友说，你说话还是这么刻薄。</p>\n<p>刻薄的不是我，而是这个世界。两情相悦的前提从来都不应该是一己之力的付出，目的性太强的恋爱伴随的往往都是昙花一现的华丽。</p>\n<p>持续了一周断断续续的聊天，让我决定和女神再见一次面，直到买下电影票的时候我才要到她的联系方式。</p>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>北京似乎成为了一个情感包囊，很多人将自己的喜怒哀乐推责于这座臃肿的城市。这个令人如痴如醉的城市，让整个人像是浸泡在福尔马林中，备受煎熬却一直吸引着你。</p>\n</blockquote>\n<p>我们常常一边相信着单身是最好的升值期，一边却在偶遇到自己的女神后悄然动心。</p>\n<p>七月，周五，傍晚，闷。</p>\n<p>我依旧背着黑色书包，沉浸在自己的音乐世界里，漫不经心的等着自己下班回家的公交车。</p>\n<p>我跟着节奏微微的抖动着，微驼的肩膀似有若无的被人轻轻拍了一下。我尝试着回头，一个化着淡妆，年龄似乎比我大的年轻女子正看着我，我扫视了她一眼之后立马将视线转移了，对，那双水灵的大眼睛，让我无法与之对视。</p>\n<blockquote>\n<p>如同你在最深的海底，亦然偏见绝美的月光。</p>\n</blockquote>","more":"<p>我一脸懵逼的摘下一个耳机，没说话，示意有事吗？</p>\n<p>“你好，我手机没电了，你能帮我叫个滴滴打车吗？”</p>\n<p>我迟疑了2秒，但是我还是下意识的开始寻找着这个应用。</p>\n<p>“恩，可以，你要去哪？”，我打开了应用。</p>\n<p>“天通苑小学南门”，她声音很小，很浓的北方口音，“我刚来北京，坐错车了，手机没电了，不知道怎么回去了。”</p>\n<p>我波澜不惊的心竟起了一丝怜悯，对，是怜悯，想起当初刚来北京的痛楚，我清楚她现在最需要的是什么。</p>\n<p>司机比我想象得来的要慢，也不是从我想象的方向过来，我一边带着她在路口与公交车站来回等待，一边目送着自己回家的公交就这么过去。</p>\n<p>车到了，她坚持给我车费，我取下另一个耳机，象征性的拿了一部分，啥都没说就送她上车了。对，没错，电话，微信啥的都没要，全程就莫名其妙给一个陌生人打了个车，然后还收了个尾数的车费。我一边嘲笑着自己这个IT男晚期，一边又戴上耳机，继续望着自己回家的路。</p>\n<blockquote>\n<p>北京是一座悲伤的城市，这里诞生着太多没有结果的故事。</p>\n</blockquote>\n<p>周六晚上，刚从游戏中逃离的我，百无聊赖中的瞅了眼万年不看的公司群，里面依旧聊着各种烧脑题目，搞笑视频。于我而言，整个微信的剩余价值仅仅是老总逢年过节的红包而已。然而，联系人旁那个猩红的数字“1”还是吸引了我这个轻微的强迫症患者。</p>\n<p>“谢谢你，我是刚才让你帮我打车的，”。</p>\n<p>就在我还纳闷整天宅在家里啥时候还出门积了德的时候，脑海中出现了这个说话以逗号结尾的女孩子轮廓。</p>\n<p>我同意了，打了个招呼，她简洁的表达了昨天的感谢，然后又问我北京站到她家怎么走。对,她此时又迷路了。</p>\n<blockquote>\n<p>很多人都因为所谓的缘分而走在了一起，但最终都败给了那些只有一己之力的爱情。一屋，两人，三餐，四季，只有彼此都懂得珍惜的道理，才能一直走下去。</p>\n</blockquote>\n<p>我听朋友讲过一个故事，故事的男主风流倜傥，在学校追求着自己的女神，端茶倒水，嘘寒问暖，恨不得拉屎都得伺候着。没等他说完，我打断道：“最后的最后，男的得手了，但是他们最终也散了”。朋友说，你说话还是这么刻薄。</p>\n<p>刻薄的不是我，而是这个世界。两情相悦的前提从来都不应该是一己之力的付出，目的性太强的恋爱伴随的往往都是昙花一现的华丽。</p>\n<p>持续了一周断断续续的聊天，让我决定和女神再见一次面，直到买下电影票的时候我才要到她的联系方式。</p>"},{"title":"老人","date":"2016-03-20T08:56:05.000Z","_content":"老人是家乡的五保户，村籍和居民登记中都没有她的名字，可是她却在村子里生活了好多年。\n\n老人是一位无亲无助的妇人，左眼失明，牙齿脱落，耳朵也不好使，无任何经济来源，每天依靠邻居的好心，苦苦维持着羸弱的身子。似乎和乞丐相比，仅多了一栋遮风的土砖房子。\n\n\n房子是老村长的，听说很多年前老人流浪到村里，老村长救了她，给了他自己的柴房，然后象征性的搬走几捆后剩下的全交给了老人，村长召开村干部会议讨论老人的问题，会议很快不欢而散。\n\n<!--more-->\n\n“一个人能平稳的过完一辈子真的很难”。村长说。\n\n老人的事还没处理完，老村长就先走了，时过境迁，村民的楼房都开始有了颜色，鳞次栉比的铺满整个村庄，唯独老人守着村长又矮又黄的柴房，生活了一年又一年。\n\n几年前开始，我就揣着大包小包，和朋友们来拜访老人，老人没有名字，我们都叫她奶奶，看着这个祥林嫂般的女人寒衣瘦食的样子，看着她驼着背在灶火旁满脸笑容的给我们做饭，忽地就感觉一种悲凉感攫住了我，似乎连呼吸都略微颤抖。\n\n为数不多的几次聊过她的过往，似乎来村之前的记忆她都不愿触及，发白的左眼和纯青的右眼极不协调的表达着她对村长的感谢，她说她有一个儿子，她也一直相信她的儿子一直在寻找她这位年迈的母亲。\n\n最近一次暑假，也最后一次拜访老人，依旧是几个老朋友来慰问老人，聊聊天，谈谈心，至少让这个孤单了一辈子的人多几分温暖，少几丝孤独。山脚下便是她家，渐近时，看见老人从水沟里捧出几条死鱼，应该是几天前村里捕鱼漏下的，我们皱了眉，问她拿这个干什么？她顿了顿：“喂喂邻居家的狗”。我紧了紧鼻子，跟着她回到了她千疮百孔的家，时近中午，我提起水桶去山上提清凉的泉水。\n\n林中笼罩着茫茫水雾，潮湿的空气让我一阵恶心。\n\n回来转角，朋友们像一群没长大的孩子围在老人四周，像众多的小矮人守护着自己的公主。阳光穿过老人双鬓折射出枯黄的色彩，看着杂乱扭曲的白发簇拥成一团散乱的麻绳、看着多年烟火熏烤如今已发黑发亮的双手和脸颊、看着眼神矍铄却衣衫褴褛的她坐在孩子中间津津乐道的样子，我不禁疑问：远方的儿子是否也寻找了她几十年的光阴？眼前的这个年近八十的女人又是怎样孤独的生活了大半辈子？\n\n>一个人孤单了一辈子，总有什么值得让他留恋！\n\n夕阳沉沉，在山边垂挂了好久，迟迟不肯下坠......\n\n告别了老人，走在路上，忘拿背包而返，又到路口、转弯，我们都怔住了，老人在昏黄的灯光下，一块块剖开快腐烂的鱼尸，一块块扔进漆黑的铁锅中，柴火腾起的火星将她的头发渲染成血红色。我悄悄拿走东西，默默地离开了。这顿丰盛的晚餐，我们都不想打扰。\n\n两年后的冬天，我们回到阔别已久的家乡，才知道，昔日这位顽强且顽固的女人，在这个宁静的村庄，在这个白雪来不及覆盖的的角落，平静的去了。我想，即使她晚年不曾安定，但她不会因在这个村庄而后悔吧！只是，她等不到她唯一的儿子、等不到这个她一生都在等待的东西！\n\n>原来时间如此的脆弱而经不起等待。\n\n冬天的草干枯的失去了颜色，溪水也似乎流到了尽头，似乎一切都归于平静。我点燃了高草，在旺盛的烟火中，我们都落了泪！\n","source":"_posts/老人.md","raw":"---\ntitle: 老人\ndate: 2016-03-20 16:56:05\ncategories: 文字\n---\n老人是家乡的五保户，村籍和居民登记中都没有她的名字，可是她却在村子里生活了好多年。\n\n老人是一位无亲无助的妇人，左眼失明，牙齿脱落，耳朵也不好使，无任何经济来源，每天依靠邻居的好心，苦苦维持着羸弱的身子。似乎和乞丐相比，仅多了一栋遮风的土砖房子。\n\n\n房子是老村长的，听说很多年前老人流浪到村里，老村长救了她，给了他自己的柴房，然后象征性的搬走几捆后剩下的全交给了老人，村长召开村干部会议讨论老人的问题，会议很快不欢而散。\n\n<!--more-->\n\n“一个人能平稳的过完一辈子真的很难”。村长说。\n\n老人的事还没处理完，老村长就先走了，时过境迁，村民的楼房都开始有了颜色，鳞次栉比的铺满整个村庄，唯独老人守着村长又矮又黄的柴房，生活了一年又一年。\n\n几年前开始，我就揣着大包小包，和朋友们来拜访老人，老人没有名字，我们都叫她奶奶，看着这个祥林嫂般的女人寒衣瘦食的样子，看着她驼着背在灶火旁满脸笑容的给我们做饭，忽地就感觉一种悲凉感攫住了我，似乎连呼吸都略微颤抖。\n\n为数不多的几次聊过她的过往，似乎来村之前的记忆她都不愿触及，发白的左眼和纯青的右眼极不协调的表达着她对村长的感谢，她说她有一个儿子，她也一直相信她的儿子一直在寻找她这位年迈的母亲。\n\n最近一次暑假，也最后一次拜访老人，依旧是几个老朋友来慰问老人，聊聊天，谈谈心，至少让这个孤单了一辈子的人多几分温暖，少几丝孤独。山脚下便是她家，渐近时，看见老人从水沟里捧出几条死鱼，应该是几天前村里捕鱼漏下的，我们皱了眉，问她拿这个干什么？她顿了顿：“喂喂邻居家的狗”。我紧了紧鼻子，跟着她回到了她千疮百孔的家，时近中午，我提起水桶去山上提清凉的泉水。\n\n林中笼罩着茫茫水雾，潮湿的空气让我一阵恶心。\n\n回来转角，朋友们像一群没长大的孩子围在老人四周，像众多的小矮人守护着自己的公主。阳光穿过老人双鬓折射出枯黄的色彩，看着杂乱扭曲的白发簇拥成一团散乱的麻绳、看着多年烟火熏烤如今已发黑发亮的双手和脸颊、看着眼神矍铄却衣衫褴褛的她坐在孩子中间津津乐道的样子，我不禁疑问：远方的儿子是否也寻找了她几十年的光阴？眼前的这个年近八十的女人又是怎样孤独的生活了大半辈子？\n\n>一个人孤单了一辈子，总有什么值得让他留恋！\n\n夕阳沉沉，在山边垂挂了好久，迟迟不肯下坠......\n\n告别了老人，走在路上，忘拿背包而返，又到路口、转弯，我们都怔住了，老人在昏黄的灯光下，一块块剖开快腐烂的鱼尸，一块块扔进漆黑的铁锅中，柴火腾起的火星将她的头发渲染成血红色。我悄悄拿走东西，默默地离开了。这顿丰盛的晚餐，我们都不想打扰。\n\n两年后的冬天，我们回到阔别已久的家乡，才知道，昔日这位顽强且顽固的女人，在这个宁静的村庄，在这个白雪来不及覆盖的的角落，平静的去了。我想，即使她晚年不曾安定，但她不会因在这个村庄而后悔吧！只是，她等不到她唯一的儿子、等不到这个她一生都在等待的东西！\n\n>原来时间如此的脆弱而经不起等待。\n\n冬天的草干枯的失去了颜色，溪水也似乎流到了尽头，似乎一切都归于平静。我点燃了高草，在旺盛的烟火中，我们都落了泪！\n","slug":"老人","published":1,"updated":"2017-03-02T12:53:47.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck2ek6q8e0007i3nme4qebbst","content":"<script src=\"/assets/js/APlayer.min.js\"> </script><p>老人是家乡的五保户，村籍和居民登记中都没有她的名字，可是她却在村子里生活了好多年。</p>\n<p>老人是一位无亲无助的妇人，左眼失明，牙齿脱落，耳朵也不好使，无任何经济来源，每天依靠邻居的好心，苦苦维持着羸弱的身子。似乎和乞丐相比，仅多了一栋遮风的土砖房子。</p>\n<p>房子是老村长的，听说很多年前老人流浪到村里，老村长救了她，给了他自己的柴房，然后象征性的搬走几捆后剩下的全交给了老人，村长召开村干部会议讨论老人的问题，会议很快不欢而散。</p>\n<a id=\"more\"></a>\n<p>“一个人能平稳的过完一辈子真的很难”。村长说。</p>\n<p>老人的事还没处理完，老村长就先走了，时过境迁，村民的楼房都开始有了颜色，鳞次栉比的铺满整个村庄，唯独老人守着村长又矮又黄的柴房，生活了一年又一年。</p>\n<p>几年前开始，我就揣着大包小包，和朋友们来拜访老人，老人没有名字，我们都叫她奶奶，看着这个祥林嫂般的女人寒衣瘦食的样子，看着她驼着背在灶火旁满脸笑容的给我们做饭，忽地就感觉一种悲凉感攫住了我，似乎连呼吸都略微颤抖。</p>\n<p>为数不多的几次聊过她的过往，似乎来村之前的记忆她都不愿触及，发白的左眼和纯青的右眼极不协调的表达着她对村长的感谢，她说她有一个儿子，她也一直相信她的儿子一直在寻找她这位年迈的母亲。</p>\n<p>最近一次暑假，也最后一次拜访老人，依旧是几个老朋友来慰问老人，聊聊天，谈谈心，至少让这个孤单了一辈子的人多几分温暖，少几丝孤独。山脚下便是她家，渐近时，看见老人从水沟里捧出几条死鱼，应该是几天前村里捕鱼漏下的，我们皱了眉，问她拿这个干什么？她顿了顿：“喂喂邻居家的狗”。我紧了紧鼻子，跟着她回到了她千疮百孔的家，时近中午，我提起水桶去山上提清凉的泉水。</p>\n<p>林中笼罩着茫茫水雾，潮湿的空气让我一阵恶心。</p>\n<p>回来转角，朋友们像一群没长大的孩子围在老人四周，像众多的小矮人守护着自己的公主。阳光穿过老人双鬓折射出枯黄的色彩，看着杂乱扭曲的白发簇拥成一团散乱的麻绳、看着多年烟火熏烤如今已发黑发亮的双手和脸颊、看着眼神矍铄却衣衫褴褛的她坐在孩子中间津津乐道的样子，我不禁疑问：远方的儿子是否也寻找了她几十年的光阴？眼前的这个年近八十的女人又是怎样孤独的生活了大半辈子？</p>\n<blockquote>\n<p>一个人孤单了一辈子，总有什么值得让他留恋！</p>\n</blockquote>\n<p>夕阳沉沉，在山边垂挂了好久，迟迟不肯下坠……</p>\n<p>告别了老人，走在路上，忘拿背包而返，又到路口、转弯，我们都怔住了，老人在昏黄的灯光下，一块块剖开快腐烂的鱼尸，一块块扔进漆黑的铁锅中，柴火腾起的火星将她的头发渲染成血红色。我悄悄拿走东西，默默地离开了。这顿丰盛的晚餐，我们都不想打扰。</p>\n<p>两年后的冬天，我们回到阔别已久的家乡，才知道，昔日这位顽强且顽固的女人，在这个宁静的村庄，在这个白雪来不及覆盖的的角落，平静的去了。我想，即使她晚年不曾安定，但她不会因在这个村庄而后悔吧！只是，她等不到她唯一的儿子、等不到这个她一生都在等待的东西！</p>\n<blockquote>\n<p>原来时间如此的脆弱而经不起等待。</p>\n</blockquote>\n<p>冬天的草干枯的失去了颜色，溪水也似乎流到了尽头，似乎一切都归于平静。我点燃了高草，在旺盛的烟火中，我们都落了泪！</p>\n","site":{"data":{}},"excerpt":"<p>老人是家乡的五保户，村籍和居民登记中都没有她的名字，可是她却在村子里生活了好多年。</p>\n<p>老人是一位无亲无助的妇人，左眼失明，牙齿脱落，耳朵也不好使，无任何经济来源，每天依靠邻居的好心，苦苦维持着羸弱的身子。似乎和乞丐相比，仅多了一栋遮风的土砖房子。</p>\n<p>房子是老村长的，听说很多年前老人流浪到村里，老村长救了她，给了他自己的柴房，然后象征性的搬走几捆后剩下的全交给了老人，村长召开村干部会议讨论老人的问题，会议很快不欢而散。</p>","more":"<p>“一个人能平稳的过完一辈子真的很难”。村长说。</p>\n<p>老人的事还没处理完，老村长就先走了，时过境迁，村民的楼房都开始有了颜色，鳞次栉比的铺满整个村庄，唯独老人守着村长又矮又黄的柴房，生活了一年又一年。</p>\n<p>几年前开始，我就揣着大包小包，和朋友们来拜访老人，老人没有名字，我们都叫她奶奶，看着这个祥林嫂般的女人寒衣瘦食的样子，看着她驼着背在灶火旁满脸笑容的给我们做饭，忽地就感觉一种悲凉感攫住了我，似乎连呼吸都略微颤抖。</p>\n<p>为数不多的几次聊过她的过往，似乎来村之前的记忆她都不愿触及，发白的左眼和纯青的右眼极不协调的表达着她对村长的感谢，她说她有一个儿子，她也一直相信她的儿子一直在寻找她这位年迈的母亲。</p>\n<p>最近一次暑假，也最后一次拜访老人，依旧是几个老朋友来慰问老人，聊聊天，谈谈心，至少让这个孤单了一辈子的人多几分温暖，少几丝孤独。山脚下便是她家，渐近时，看见老人从水沟里捧出几条死鱼，应该是几天前村里捕鱼漏下的，我们皱了眉，问她拿这个干什么？她顿了顿：“喂喂邻居家的狗”。我紧了紧鼻子，跟着她回到了她千疮百孔的家，时近中午，我提起水桶去山上提清凉的泉水。</p>\n<p>林中笼罩着茫茫水雾，潮湿的空气让我一阵恶心。</p>\n<p>回来转角，朋友们像一群没长大的孩子围在老人四周，像众多的小矮人守护着自己的公主。阳光穿过老人双鬓折射出枯黄的色彩，看着杂乱扭曲的白发簇拥成一团散乱的麻绳、看着多年烟火熏烤如今已发黑发亮的双手和脸颊、看着眼神矍铄却衣衫褴褛的她坐在孩子中间津津乐道的样子，我不禁疑问：远方的儿子是否也寻找了她几十年的光阴？眼前的这个年近八十的女人又是怎样孤独的生活了大半辈子？</p>\n<blockquote>\n<p>一个人孤单了一辈子，总有什么值得让他留恋！</p>\n</blockquote>\n<p>夕阳沉沉，在山边垂挂了好久，迟迟不肯下坠……</p>\n<p>告别了老人，走在路上，忘拿背包而返，又到路口、转弯，我们都怔住了，老人在昏黄的灯光下，一块块剖开快腐烂的鱼尸，一块块扔进漆黑的铁锅中，柴火腾起的火星将她的头发渲染成血红色。我悄悄拿走东西，默默地离开了。这顿丰盛的晚餐，我们都不想打扰。</p>\n<p>两年后的冬天，我们回到阔别已久的家乡，才知道，昔日这位顽强且顽固的女人，在这个宁静的村庄，在这个白雪来不及覆盖的的角落，平静的去了。我想，即使她晚年不曾安定，但她不会因在这个村庄而后悔吧！只是，她等不到她唯一的儿子、等不到这个她一生都在等待的东西！</p>\n<blockquote>\n<p>原来时间如此的脆弱而经不起等待。</p>\n</blockquote>\n<p>冬天的草干枯的失去了颜色，溪水也似乎流到了尽头，似乎一切都归于平静。我点燃了高草，在旺盛的烟火中，我们都落了泪！</p>"},{"title":"自饮故乡酒,未尽故乡情","date":"2016-10-29T08:27:48.000Z","_content":"我们都曾在某一段时间里特别的想念故乡。\n\n来北之前，和爸喝过一次酒，冰啤的。杯子碰在一起，都是未来的声音在里面交错，咱们一个往南去扛起整个家庭，一个往北去学着一个人生存。妈妈湿润着眼睛说房子她一个人能看得住，而我们两个大男人搞得跟上战场一样，一瓶啤酒在昏黄中闪烁了一整晚。\n\n今年中秋，爸说他回家了，在外面干了近一年了，腰也不大好使了，然后问我什么时候能回来。\n\n我说国庆回。\n\n电话那头沉默了一会，而我却湿了眼眶。\n\n<!--more-->\n\n>是啊，从什么时候开始，回家就成为了一种量词，而不是不再背井离乡。\n\n事实上，国庆前两天我还没买到回家的火车票，在最后的一天，我还是咬咬牙坐了飞机，就想着，回去能和爸坐下来，再喝一次酒。\n\n起飞的那天，我感觉有好久都没有仔细的看过一眼蓝天了。那天，天很蓝，越过云层，更蓝。而落地的时候，却开始下着小雨。\n\n朋友请了一顿丰盛的晚餐，在网吧睡了一晚，然后第二天都咬着大饼，一起回家。\n\n到家时，每次接我的肯定是奶奶，我从来不知道她在家门外的路口守望了多久，我只想着她能在我回来前，痴呆症不要复发，不要再忘了我这个孝而不顺的孙子。每次我都说不用来接我，而每一次她都会守在那里。是啊，我又是多么希望，每次回来，她都是一如既往的站在那里，能让我欣慰的感谢旧物旧人。\n\n家里的哥哥两个孩子都已经可以开口叫我这个远方的叔叔，而我却还在异乡寻找着自己的出路，年龄越大，离家也越远。\n\n爸说，家里在搞装修，门窗都拆了，我跟你妈挤在后屋，你就还是睡你的房间吧，你妈给你换了新的床单和被套，还加了床被子，怕你冷。我点头。\n\n>人这辈子撒过无数的谎，而最多的谎，都是给了自己至亲至敬的人。\n\n那天晚上我几乎整晚没睡，下雨天蚊子都进屋，而我也在两面透风的房间里，半睡半醒。浑噩中，我想起了当初爸问我打算去北京呆多久，我说可能一两年吧。而这次回来我爸再问我时，而我却说，两三年。\n\n岁月磨平了我们的棱角，也在父母的双手和脸颊上磨出了沟壑，不管我们在外是过着寒衣瘦食还是酒肉回肠的日子，回家了餐桌上都会是新鲜的蔬菜和那热气腾腾的牛羊。年尾的忙碌，不再是为了除夕的欢闹，更多的是等待着浪子的归家。\n\n朋友问我，什么时候会让你觉得最为孤独。我说，你有没有体会过一个人回家，下火车时已是半夜，你拎着包走在街上，看着万家灯火却到不了家。那个时候，最为孤独。\n\n国庆尾声的时候，和朋友们出门玩了一天，可能终究还是习惯了北京这个铜墙铁壁般的城市，我竟然开始对一路顺车的这种旅行方式诧异起来。虽然平常我话语本就不多，但朋友们见我如此还是问我是不是在大城市呆久了，和我们这些“乡里人”搭不上了。\n\n>其实不是，只是一个人在一个必须浸泡着鸡汤才能支撑着拼下去的城市，呆久了，反而会让原来那些没有被物质化的人情显得弥足珍贵。\n\n装修将要持续近两个月，爸也整天忙着装修，和装修师傅应酬。假期结束末尾，我也终究没机会和爸坐下来喝一杯。我又要回到那座烟雾缭绕的城市，继续呼吸那里的功名利禄，继续窥探那里的世故人心。\n\n在火车上，我喝了一小瓶故乡的酒，却还是上飞机时的心情。","source":"_posts/自饮故乡酒-未尽故乡情.md","raw":"---\ntitle: '自饮故乡酒,未尽故乡情'\ndate: 2016-10-29 16:27:48\ncategories: 文字\n---\n我们都曾在某一段时间里特别的想念故乡。\n\n来北之前，和爸喝过一次酒，冰啤的。杯子碰在一起，都是未来的声音在里面交错，咱们一个往南去扛起整个家庭，一个往北去学着一个人生存。妈妈湿润着眼睛说房子她一个人能看得住，而我们两个大男人搞得跟上战场一样，一瓶啤酒在昏黄中闪烁了一整晚。\n\n今年中秋，爸说他回家了，在外面干了近一年了，腰也不大好使了，然后问我什么时候能回来。\n\n我说国庆回。\n\n电话那头沉默了一会，而我却湿了眼眶。\n\n<!--more-->\n\n>是啊，从什么时候开始，回家就成为了一种量词，而不是不再背井离乡。\n\n事实上，国庆前两天我还没买到回家的火车票，在最后的一天，我还是咬咬牙坐了飞机，就想着，回去能和爸坐下来，再喝一次酒。\n\n起飞的那天，我感觉有好久都没有仔细的看过一眼蓝天了。那天，天很蓝，越过云层，更蓝。而落地的时候，却开始下着小雨。\n\n朋友请了一顿丰盛的晚餐，在网吧睡了一晚，然后第二天都咬着大饼，一起回家。\n\n到家时，每次接我的肯定是奶奶，我从来不知道她在家门外的路口守望了多久，我只想着她能在我回来前，痴呆症不要复发，不要再忘了我这个孝而不顺的孙子。每次我都说不用来接我，而每一次她都会守在那里。是啊，我又是多么希望，每次回来，她都是一如既往的站在那里，能让我欣慰的感谢旧物旧人。\n\n家里的哥哥两个孩子都已经可以开口叫我这个远方的叔叔，而我却还在异乡寻找着自己的出路，年龄越大，离家也越远。\n\n爸说，家里在搞装修，门窗都拆了，我跟你妈挤在后屋，你就还是睡你的房间吧，你妈给你换了新的床单和被套，还加了床被子，怕你冷。我点头。\n\n>人这辈子撒过无数的谎，而最多的谎，都是给了自己至亲至敬的人。\n\n那天晚上我几乎整晚没睡，下雨天蚊子都进屋，而我也在两面透风的房间里，半睡半醒。浑噩中，我想起了当初爸问我打算去北京呆多久，我说可能一两年吧。而这次回来我爸再问我时，而我却说，两三年。\n\n岁月磨平了我们的棱角，也在父母的双手和脸颊上磨出了沟壑，不管我们在外是过着寒衣瘦食还是酒肉回肠的日子，回家了餐桌上都会是新鲜的蔬菜和那热气腾腾的牛羊。年尾的忙碌，不再是为了除夕的欢闹，更多的是等待着浪子的归家。\n\n朋友问我，什么时候会让你觉得最为孤独。我说，你有没有体会过一个人回家，下火车时已是半夜，你拎着包走在街上，看着万家灯火却到不了家。那个时候，最为孤独。\n\n国庆尾声的时候，和朋友们出门玩了一天，可能终究还是习惯了北京这个铜墙铁壁般的城市，我竟然开始对一路顺车的这种旅行方式诧异起来。虽然平常我话语本就不多，但朋友们见我如此还是问我是不是在大城市呆久了，和我们这些“乡里人”搭不上了。\n\n>其实不是，只是一个人在一个必须浸泡着鸡汤才能支撑着拼下去的城市，呆久了，反而会让原来那些没有被物质化的人情显得弥足珍贵。\n\n装修将要持续近两个月，爸也整天忙着装修，和装修师傅应酬。假期结束末尾，我也终究没机会和爸坐下来喝一杯。我又要回到那座烟雾缭绕的城市，继续呼吸那里的功名利禄，继续窥探那里的世故人心。\n\n在火车上，我喝了一小瓶故乡的酒，却还是上飞机时的心情。","slug":"自饮故乡酒-未尽故乡情","published":1,"updated":"2017-03-02T12:53:47.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck2ek6q8f0008i3nmmb75ye57","content":"<script src=\"/assets/js/APlayer.min.js\"> </script><p>我们都曾在某一段时间里特别的想念故乡。</p>\n<p>来北之前，和爸喝过一次酒，冰啤的。杯子碰在一起，都是未来的声音在里面交错，咱们一个往南去扛起整个家庭，一个往北去学着一个人生存。妈妈湿润着眼睛说房子她一个人能看得住，而我们两个大男人搞得跟上战场一样，一瓶啤酒在昏黄中闪烁了一整晚。</p>\n<p>今年中秋，爸说他回家了，在外面干了近一年了，腰也不大好使了，然后问我什么时候能回来。</p>\n<p>我说国庆回。</p>\n<p>电话那头沉默了一会，而我却湿了眼眶。</p>\n<a id=\"more\"></a>\n<blockquote>\n<p>是啊，从什么时候开始，回家就成为了一种量词，而不是不再背井离乡。</p>\n</blockquote>\n<p>事实上，国庆前两天我还没买到回家的火车票，在最后的一天，我还是咬咬牙坐了飞机，就想着，回去能和爸坐下来，再喝一次酒。</p>\n<p>起飞的那天，我感觉有好久都没有仔细的看过一眼蓝天了。那天，天很蓝，越过云层，更蓝。而落地的时候，却开始下着小雨。</p>\n<p>朋友请了一顿丰盛的晚餐，在网吧睡了一晚，然后第二天都咬着大饼，一起回家。</p>\n<p>到家时，每次接我的肯定是奶奶，我从来不知道她在家门外的路口守望了多久，我只想着她能在我回来前，痴呆症不要复发，不要再忘了我这个孝而不顺的孙子。每次我都说不用来接我，而每一次她都会守在那里。是啊，我又是多么希望，每次回来，她都是一如既往的站在那里，能让我欣慰的感谢旧物旧人。</p>\n<p>家里的哥哥两个孩子都已经可以开口叫我这个远方的叔叔，而我却还在异乡寻找着自己的出路，年龄越大，离家也越远。</p>\n<p>爸说，家里在搞装修，门窗都拆了，我跟你妈挤在后屋，你就还是睡你的房间吧，你妈给你换了新的床单和被套，还加了床被子，怕你冷。我点头。</p>\n<blockquote>\n<p>人这辈子撒过无数的谎，而最多的谎，都是给了自己至亲至敬的人。</p>\n</blockquote>\n<p>那天晚上我几乎整晚没睡，下雨天蚊子都进屋，而我也在两面透风的房间里，半睡半醒。浑噩中，我想起了当初爸问我打算去北京呆多久，我说可能一两年吧。而这次回来我爸再问我时，而我却说，两三年。</p>\n<p>岁月磨平了我们的棱角，也在父母的双手和脸颊上磨出了沟壑，不管我们在外是过着寒衣瘦食还是酒肉回肠的日子，回家了餐桌上都会是新鲜的蔬菜和那热气腾腾的牛羊。年尾的忙碌，不再是为了除夕的欢闹，更多的是等待着浪子的归家。</p>\n<p>朋友问我，什么时候会让你觉得最为孤独。我说，你有没有体会过一个人回家，下火车时已是半夜，你拎着包走在街上，看着万家灯火却到不了家。那个时候，最为孤独。</p>\n<p>国庆尾声的时候，和朋友们出门玩了一天，可能终究还是习惯了北京这个铜墙铁壁般的城市，我竟然开始对一路顺车的这种旅行方式诧异起来。虽然平常我话语本就不多，但朋友们见我如此还是问我是不是在大城市呆久了，和我们这些“乡里人”搭不上了。</p>\n<blockquote>\n<p>其实不是，只是一个人在一个必须浸泡着鸡汤才能支撑着拼下去的城市，呆久了，反而会让原来那些没有被物质化的人情显得弥足珍贵。</p>\n</blockquote>\n<p>装修将要持续近两个月，爸也整天忙着装修，和装修师傅应酬。假期结束末尾，我也终究没机会和爸坐下来喝一杯。我又要回到那座烟雾缭绕的城市，继续呼吸那里的功名利禄，继续窥探那里的世故人心。</p>\n<p>在火车上，我喝了一小瓶故乡的酒，却还是上飞机时的心情。</p>\n","site":{"data":{}},"excerpt":"<p>我们都曾在某一段时间里特别的想念故乡。</p>\n<p>来北之前，和爸喝过一次酒，冰啤的。杯子碰在一起，都是未来的声音在里面交错，咱们一个往南去扛起整个家庭，一个往北去学着一个人生存。妈妈湿润着眼睛说房子她一个人能看得住，而我们两个大男人搞得跟上战场一样，一瓶啤酒在昏黄中闪烁了一整晚。</p>\n<p>今年中秋，爸说他回家了，在外面干了近一年了，腰也不大好使了，然后问我什么时候能回来。</p>\n<p>我说国庆回。</p>\n<p>电话那头沉默了一会，而我却湿了眼眶。</p>","more":"<blockquote>\n<p>是啊，从什么时候开始，回家就成为了一种量词，而不是不再背井离乡。</p>\n</blockquote>\n<p>事实上，国庆前两天我还没买到回家的火车票，在最后的一天，我还是咬咬牙坐了飞机，就想着，回去能和爸坐下来，再喝一次酒。</p>\n<p>起飞的那天，我感觉有好久都没有仔细的看过一眼蓝天了。那天，天很蓝，越过云层，更蓝。而落地的时候，却开始下着小雨。</p>\n<p>朋友请了一顿丰盛的晚餐，在网吧睡了一晚，然后第二天都咬着大饼，一起回家。</p>\n<p>到家时，每次接我的肯定是奶奶，我从来不知道她在家门外的路口守望了多久，我只想着她能在我回来前，痴呆症不要复发，不要再忘了我这个孝而不顺的孙子。每次我都说不用来接我，而每一次她都会守在那里。是啊，我又是多么希望，每次回来，她都是一如既往的站在那里，能让我欣慰的感谢旧物旧人。</p>\n<p>家里的哥哥两个孩子都已经可以开口叫我这个远方的叔叔，而我却还在异乡寻找着自己的出路，年龄越大，离家也越远。</p>\n<p>爸说，家里在搞装修，门窗都拆了，我跟你妈挤在后屋，你就还是睡你的房间吧，你妈给你换了新的床单和被套，还加了床被子，怕你冷。我点头。</p>\n<blockquote>\n<p>人这辈子撒过无数的谎，而最多的谎，都是给了自己至亲至敬的人。</p>\n</blockquote>\n<p>那天晚上我几乎整晚没睡，下雨天蚊子都进屋，而我也在两面透风的房间里，半睡半醒。浑噩中，我想起了当初爸问我打算去北京呆多久，我说可能一两年吧。而这次回来我爸再问我时，而我却说，两三年。</p>\n<p>岁月磨平了我们的棱角，也在父母的双手和脸颊上磨出了沟壑，不管我们在外是过着寒衣瘦食还是酒肉回肠的日子，回家了餐桌上都会是新鲜的蔬菜和那热气腾腾的牛羊。年尾的忙碌，不再是为了除夕的欢闹，更多的是等待着浪子的归家。</p>\n<p>朋友问我，什么时候会让你觉得最为孤独。我说，你有没有体会过一个人回家，下火车时已是半夜，你拎着包走在街上，看着万家灯火却到不了家。那个时候，最为孤独。</p>\n<p>国庆尾声的时候，和朋友们出门玩了一天，可能终究还是习惯了北京这个铜墙铁壁般的城市，我竟然开始对一路顺车的这种旅行方式诧异起来。虽然平常我话语本就不多，但朋友们见我如此还是问我是不是在大城市呆久了，和我们这些“乡里人”搭不上了。</p>\n<blockquote>\n<p>其实不是，只是一个人在一个必须浸泡着鸡汤才能支撑着拼下去的城市，呆久了，反而会让原来那些没有被物质化的人情显得弥足珍贵。</p>\n</blockquote>\n<p>装修将要持续近两个月，爸也整天忙着装修，和装修师傅应酬。假期结束末尾，我也终究没机会和爸坐下来喝一杯。我又要回到那座烟雾缭绕的城市，继续呼吸那里的功名利禄，继续窥探那里的世故人心。</p>\n<p>在火车上，我喝了一小瓶故乡的酒，却还是上飞机时的心情。</p>"},{"title":"造大学的日子","date":"2016-02-15T07:33:34.000Z","_content":"7岁的时候，你可以沿着家旁的小溪，从混浊的泥水中寻觅着螃蟹一直到夕阳的角落；12岁的时候，你可以从仅有的生活费中分离出游戏机的成本，偷偷的玩上一局就足够乐一整天；18岁的时候，你可以咬咬牙，背上背包就出发，前往遥远而又陌生的城市。\n\n沿着时间的车辙，很多事情都顺其自然的进入尾声，很多事情也会遵循着它自己的逻辑，逐渐开始然后又缓慢结束，我们常常来不及收拾自己，错过那些你以为永远都不会失去的东西。\n\n再也看不到大学傍晚的香樟路，一到春天就开始疯狂的落叶子，落软满地。\n\n再也不会去想，为什么学校的人工湖旁总是栽满着柔美的柳条，映满蓝天。\n\n也不会再有一个个夜晚，陪着一群傻子去通宵，然后一路高歌着回家。\n\n最后的最后，伴随着论文的定稿，似乎生活的轮廓也随着笔迹的停顿而烙下它应有的样子，我们各自奔向的不同的城市，认识了不同的人，也拥有着不同的梦想。\n\n<!--more-->\n\n终究还是散了。\n\n也许只有一个人的时候，才会去思索一些剧情的设定，比如湘北，比如新一。也只有一个人的时候，才会回头看看曾经拥有而现在都已不在的东西，比如朋友，比如恋人。而如今，伫立在天安门城楼上，我又会想，在我眼前的，是不是又会是转瞬即逝。\n\n繁华人间，人生不过幻起幻灭；繁华人世，不过真亦幻来幻亦真。\n\n朋友说，你说话很难让人理解，活该冷场。\n\n“你听懂了吗”？\n\n“懂了”。\n\n那就够了。\n\n我拿起了电话。\n\n“大半夜你不睡觉要死啊！”。\n\n“我又开始写文章了”。\n\n“……”。\n\n“晚安了”。\n\n“把我写好点”。\n\n“会的”。\n\n今天开始，看书写字，做个不听话的好孩子。","source":"_posts/造大学的日子.md","raw":"---\ntitle: 造大学的日子\ndate: 2016-02-15 15:33:34\ncategories: 文字\n---\n7岁的时候，你可以沿着家旁的小溪，从混浊的泥水中寻觅着螃蟹一直到夕阳的角落；12岁的时候，你可以从仅有的生活费中分离出游戏机的成本，偷偷的玩上一局就足够乐一整天；18岁的时候，你可以咬咬牙，背上背包就出发，前往遥远而又陌生的城市。\n\n沿着时间的车辙，很多事情都顺其自然的进入尾声，很多事情也会遵循着它自己的逻辑，逐渐开始然后又缓慢结束，我们常常来不及收拾自己，错过那些你以为永远都不会失去的东西。\n\n再也看不到大学傍晚的香樟路，一到春天就开始疯狂的落叶子，落软满地。\n\n再也不会去想，为什么学校的人工湖旁总是栽满着柔美的柳条，映满蓝天。\n\n也不会再有一个个夜晚，陪着一群傻子去通宵，然后一路高歌着回家。\n\n最后的最后，伴随着论文的定稿，似乎生活的轮廓也随着笔迹的停顿而烙下它应有的样子，我们各自奔向的不同的城市，认识了不同的人，也拥有着不同的梦想。\n\n<!--more-->\n\n终究还是散了。\n\n也许只有一个人的时候，才会去思索一些剧情的设定，比如湘北，比如新一。也只有一个人的时候，才会回头看看曾经拥有而现在都已不在的东西，比如朋友，比如恋人。而如今，伫立在天安门城楼上，我又会想，在我眼前的，是不是又会是转瞬即逝。\n\n繁华人间，人生不过幻起幻灭；繁华人世，不过真亦幻来幻亦真。\n\n朋友说，你说话很难让人理解，活该冷场。\n\n“你听懂了吗”？\n\n“懂了”。\n\n那就够了。\n\n我拿起了电话。\n\n“大半夜你不睡觉要死啊！”。\n\n“我又开始写文章了”。\n\n“……”。\n\n“晚安了”。\n\n“把我写好点”。\n\n“会的”。\n\n今天开始，看书写字，做个不听话的好孩子。","slug":"造大学的日子","published":1,"updated":"2017-03-02T12:53:47.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck2ek6q8f0009i3nm7nv1vou9","content":"<script src=\"/assets/js/APlayer.min.js\"> </script><p>7岁的时候，你可以沿着家旁的小溪，从混浊的泥水中寻觅着螃蟹一直到夕阳的角落；12岁的时候，你可以从仅有的生活费中分离出游戏机的成本，偷偷的玩上一局就足够乐一整天；18岁的时候，你可以咬咬牙，背上背包就出发，前往遥远而又陌生的城市。</p>\n<p>沿着时间的车辙，很多事情都顺其自然的进入尾声，很多事情也会遵循着它自己的逻辑，逐渐开始然后又缓慢结束，我们常常来不及收拾自己，错过那些你以为永远都不会失去的东西。</p>\n<p>再也看不到大学傍晚的香樟路，一到春天就开始疯狂的落叶子，落软满地。</p>\n<p>再也不会去想，为什么学校的人工湖旁总是栽满着柔美的柳条，映满蓝天。</p>\n<p>也不会再有一个个夜晚，陪着一群傻子去通宵，然后一路高歌着回家。</p>\n<p>最后的最后，伴随着论文的定稿，似乎生活的轮廓也随着笔迹的停顿而烙下它应有的样子，我们各自奔向的不同的城市，认识了不同的人，也拥有着不同的梦想。</p>\n<a id=\"more\"></a>\n<p>终究还是散了。</p>\n<p>也许只有一个人的时候，才会去思索一些剧情的设定，比如湘北，比如新一。也只有一个人的时候，才会回头看看曾经拥有而现在都已不在的东西，比如朋友，比如恋人。而如今，伫立在天安门城楼上，我又会想，在我眼前的，是不是又会是转瞬即逝。</p>\n<p>繁华人间，人生不过幻起幻灭；繁华人世，不过真亦幻来幻亦真。</p>\n<p>朋友说，你说话很难让人理解，活该冷场。</p>\n<p>“你听懂了吗”？</p>\n<p>“懂了”。</p>\n<p>那就够了。</p>\n<p>我拿起了电话。</p>\n<p>“大半夜你不睡觉要死啊！”。</p>\n<p>“我又开始写文章了”。</p>\n<p>“……”。</p>\n<p>“晚安了”。</p>\n<p>“把我写好点”。</p>\n<p>“会的”。</p>\n<p>今天开始，看书写字，做个不听话的好孩子。</p>\n","site":{"data":{}},"excerpt":"<p>7岁的时候，你可以沿着家旁的小溪，从混浊的泥水中寻觅着螃蟹一直到夕阳的角落；12岁的时候，你可以从仅有的生活费中分离出游戏机的成本，偷偷的玩上一局就足够乐一整天；18岁的时候，你可以咬咬牙，背上背包就出发，前往遥远而又陌生的城市。</p>\n<p>沿着时间的车辙，很多事情都顺其自然的进入尾声，很多事情也会遵循着它自己的逻辑，逐渐开始然后又缓慢结束，我们常常来不及收拾自己，错过那些你以为永远都不会失去的东西。</p>\n<p>再也看不到大学傍晚的香樟路，一到春天就开始疯狂的落叶子，落软满地。</p>\n<p>再也不会去想，为什么学校的人工湖旁总是栽满着柔美的柳条，映满蓝天。</p>\n<p>也不会再有一个个夜晚，陪着一群傻子去通宵，然后一路高歌着回家。</p>\n<p>最后的最后，伴随着论文的定稿，似乎生活的轮廓也随着笔迹的停顿而烙下它应有的样子，我们各自奔向的不同的城市，认识了不同的人，也拥有着不同的梦想。</p>","more":"<p>终究还是散了。</p>\n<p>也许只有一个人的时候，才会去思索一些剧情的设定，比如湘北，比如新一。也只有一个人的时候，才会回头看看曾经拥有而现在都已不在的东西，比如朋友，比如恋人。而如今，伫立在天安门城楼上，我又会想，在我眼前的，是不是又会是转瞬即逝。</p>\n<p>繁华人间，人生不过幻起幻灭；繁华人世，不过真亦幻来幻亦真。</p>\n<p>朋友说，你说话很难让人理解，活该冷场。</p>\n<p>“你听懂了吗”？</p>\n<p>“懂了”。</p>\n<p>那就够了。</p>\n<p>我拿起了电话。</p>\n<p>“大半夜你不睡觉要死啊！”。</p>\n<p>“我又开始写文章了”。</p>\n<p>“……”。</p>\n<p>“晚安了”。</p>\n<p>“把我写好点”。</p>\n<p>“会的”。</p>\n<p>今天开始，看书写字，做个不听话的好孩子。</p>"},{"title":"那些一个人的日子,才是你蜕变的时光","date":"2016-05-25T08:56:40.000Z","_content":">生活就像棋局，身为士卒的你只知进而不知退，满盘皆输之时，才会去思考当初为什么会那样走。\n\n#### 一座城市，一方故事。\n\n\n来北京的第一个新年，我们选择了分开。\n\n回到老家，我一个人在楼上悲伤了很久，直到手机响起。\n\n“回家了吗？出来玩”。简单的几个字，让我暖了好久，我下楼，小峥拿着球，嘲讽的看着我。\n\n“你消息可真灵通”。\n\n“我还知道你失恋了”。\n\n“……”。\n\n“来流一场汗吧”，他把球扔过来。\n\n我诧异于他的行为，更庆幸自己又多了种宣泄的方式，毕竟对于一个不抽烟不喝酒的落寞者，我还真想不到用何种方式来开导自己。\n\n那天流了很多汗，也流了很多泪。\n\n小峥说，别把自己当做别人的全世界，也别把别人当做自己的全世界。\n\n<!--more-->\n\n#### 一朝春尽红颜老，花落人亡两不知。\n回到北京，换了房子，收拾杂物的时候看到了多年以前的日记本，才回想起，曾经在一起的日子，我抛弃了很多原本属于我的东西。我刚筑起的防线又一次崩塌，于是我买了台电脑，疯狂的打了一个月的游戏，直到生日半夜的电话。是小峥，他说他毕业了就会来北京找我玩。而我丧心病狂的问他，如果我无法将她移出自己的世界，那我是不是可以进入另一个世界。我告诉他我已经玩了一个月的游戏，黑夜里我笑出了声，回声却将我刺得生疼。小峥顿了很久，漫长的呼吸声渐变成失望的叹息，“那么你又在另一个世界里找到了只手遮天的感觉了？你没有。你只是自欺欺人的数落着自己时光，如果时间可以抹平一切伤口，而你就是不停的在伤口痊愈前满足着你自己那份痒的私欲，最终剩下的只是那丑陋无比的疤痕！”\n\n我挂了电话，躺在床上，我头一次被别人骂得这么酣畅淋漓。我们常常因为生活中的一些变故，而失去了继续走下去的勇气，取而代之的是以此来满足自己的私欲，来逃避眼前的事实。其实，世界还是那个世界。\n\n>你当时就像一个脱光的乞丐，试图阐述着自己的可怜与悲情。小峥说。\n\n#### love is zero，zero is start.\n\n人只有在落单的时候，才会去思考一些剧情的设定。想想当初的自己到现在为什么就突然就成了一个人，为什么别人送的书本就积满了灰尘堆砌在角落，为什么自己的不足仍要试图推脱自己的责任，怪这座城市的世俗和现实。\n\n1个月前，我完成了公司通讯项目的设计，继而接手了另一个我完全不熟的JS领域。就像年初的时候一样，身边熟悉的东西都被撤走，但不同的是我也能保持着积极的态度，去迎接即将到来的故事。\n\n>我们常常在幡然醒悟后又开始惊叹自己的无所谓生和无所谓死。\n\n一个人的日子不是让你颓废丧志的得过且过，而是秉着向死而生的顽强，蜕变出一个更加完美的自己，才会无愧于下一段美好的时光。","source":"_posts/那些一个人的日子-才是你蜕变的时光.md","raw":"---\ntitle: '那些一个人的日子,才是你蜕变的时光'\ndate: 2016-05-25 16:56:40\ncategories: 文字\n---\n>生活就像棋局，身为士卒的你只知进而不知退，满盘皆输之时，才会去思考当初为什么会那样走。\n\n#### 一座城市，一方故事。\n\n\n来北京的第一个新年，我们选择了分开。\n\n回到老家，我一个人在楼上悲伤了很久，直到手机响起。\n\n“回家了吗？出来玩”。简单的几个字，让我暖了好久，我下楼，小峥拿着球，嘲讽的看着我。\n\n“你消息可真灵通”。\n\n“我还知道你失恋了”。\n\n“……”。\n\n“来流一场汗吧”，他把球扔过来。\n\n我诧异于他的行为，更庆幸自己又多了种宣泄的方式，毕竟对于一个不抽烟不喝酒的落寞者，我还真想不到用何种方式来开导自己。\n\n那天流了很多汗，也流了很多泪。\n\n小峥说，别把自己当做别人的全世界，也别把别人当做自己的全世界。\n\n<!--more-->\n\n#### 一朝春尽红颜老，花落人亡两不知。\n回到北京，换了房子，收拾杂物的时候看到了多年以前的日记本，才回想起，曾经在一起的日子，我抛弃了很多原本属于我的东西。我刚筑起的防线又一次崩塌，于是我买了台电脑，疯狂的打了一个月的游戏，直到生日半夜的电话。是小峥，他说他毕业了就会来北京找我玩。而我丧心病狂的问他，如果我无法将她移出自己的世界，那我是不是可以进入另一个世界。我告诉他我已经玩了一个月的游戏，黑夜里我笑出了声，回声却将我刺得生疼。小峥顿了很久，漫长的呼吸声渐变成失望的叹息，“那么你又在另一个世界里找到了只手遮天的感觉了？你没有。你只是自欺欺人的数落着自己时光，如果时间可以抹平一切伤口，而你就是不停的在伤口痊愈前满足着你自己那份痒的私欲，最终剩下的只是那丑陋无比的疤痕！”\n\n我挂了电话，躺在床上，我头一次被别人骂得这么酣畅淋漓。我们常常因为生活中的一些变故，而失去了继续走下去的勇气，取而代之的是以此来满足自己的私欲，来逃避眼前的事实。其实，世界还是那个世界。\n\n>你当时就像一个脱光的乞丐，试图阐述着自己的可怜与悲情。小峥说。\n\n#### love is zero，zero is start.\n\n人只有在落单的时候，才会去思考一些剧情的设定。想想当初的自己到现在为什么就突然就成了一个人，为什么别人送的书本就积满了灰尘堆砌在角落，为什么自己的不足仍要试图推脱自己的责任，怪这座城市的世俗和现实。\n\n1个月前，我完成了公司通讯项目的设计，继而接手了另一个我完全不熟的JS领域。就像年初的时候一样，身边熟悉的东西都被撤走，但不同的是我也能保持着积极的态度，去迎接即将到来的故事。\n\n>我们常常在幡然醒悟后又开始惊叹自己的无所谓生和无所谓死。\n\n一个人的日子不是让你颓废丧志的得过且过，而是秉着向死而生的顽强，蜕变出一个更加完美的自己，才会无愧于下一段美好的时光。","slug":"那些一个人的日子-才是你蜕变的时光","published":1,"updated":"2017-03-02T12:53:47.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck2ek6q8g000ai3nm24h5idhe","content":"<script src=\"/assets/js/APlayer.min.js\"> </script><blockquote>\n<p>生活就像棋局，身为士卒的你只知进而不知退，满盘皆输之时，才会去思考当初为什么会那样走。</p>\n</blockquote>\n<h4 id=\"一座城市，一方故事。\"><a href=\"#一座城市，一方故事。\" class=\"headerlink\" title=\"一座城市，一方故事。\"></a>一座城市，一方故事。</h4><p>来北京的第一个新年，我们选择了分开。</p>\n<p>回到老家，我一个人在楼上悲伤了很久，直到手机响起。</p>\n<p>“回家了吗？出来玩”。简单的几个字，让我暖了好久，我下楼，小峥拿着球，嘲讽的看着我。</p>\n<p>“你消息可真灵通”。</p>\n<p>“我还知道你失恋了”。</p>\n<p>“……”。</p>\n<p>“来流一场汗吧”，他把球扔过来。</p>\n<p>我诧异于他的行为，更庆幸自己又多了种宣泄的方式，毕竟对于一个不抽烟不喝酒的落寞者，我还真想不到用何种方式来开导自己。</p>\n<p>那天流了很多汗，也流了很多泪。</p>\n<p>小峥说，别把自己当做别人的全世界，也别把别人当做自己的全世界。</p>\n<a id=\"more\"></a>\n<h4 id=\"一朝春尽红颜老，花落人亡两不知。\"><a href=\"#一朝春尽红颜老，花落人亡两不知。\" class=\"headerlink\" title=\"一朝春尽红颜老，花落人亡两不知。\"></a>一朝春尽红颜老，花落人亡两不知。</h4><p>回到北京，换了房子，收拾杂物的时候看到了多年以前的日记本，才回想起，曾经在一起的日子，我抛弃了很多原本属于我的东西。我刚筑起的防线又一次崩塌，于是我买了台电脑，疯狂的打了一个月的游戏，直到生日半夜的电话。是小峥，他说他毕业了就会来北京找我玩。而我丧心病狂的问他，如果我无法将她移出自己的世界，那我是不是可以进入另一个世界。我告诉他我已经玩了一个月的游戏，黑夜里我笑出了声，回声却将我刺得生疼。小峥顿了很久，漫长的呼吸声渐变成失望的叹息，“那么你又在另一个世界里找到了只手遮天的感觉了？你没有。你只是自欺欺人的数落着自己时光，如果时间可以抹平一切伤口，而你就是不停的在伤口痊愈前满足着你自己那份痒的私欲，最终剩下的只是那丑陋无比的疤痕！”</p>\n<p>我挂了电话，躺在床上，我头一次被别人骂得这么酣畅淋漓。我们常常因为生活中的一些变故，而失去了继续走下去的勇气，取而代之的是以此来满足自己的私欲，来逃避眼前的事实。其实，世界还是那个世界。</p>\n<blockquote>\n<p>你当时就像一个脱光的乞丐，试图阐述着自己的可怜与悲情。小峥说。</p>\n</blockquote>\n<h4 id=\"love-is-zero，zero-is-start\"><a href=\"#love-is-zero，zero-is-start\" class=\"headerlink\" title=\"love is zero，zero is start.\"></a>love is zero，zero is start.</h4><p>人只有在落单的时候，才会去思考一些剧情的设定。想想当初的自己到现在为什么就突然就成了一个人，为什么别人送的书本就积满了灰尘堆砌在角落，为什么自己的不足仍要试图推脱自己的责任，怪这座城市的世俗和现实。</p>\n<p>1个月前，我完成了公司通讯项目的设计，继而接手了另一个我完全不熟的JS领域。就像年初的时候一样，身边熟悉的东西都被撤走，但不同的是我也能保持着积极的态度，去迎接即将到来的故事。</p>\n<blockquote>\n<p>我们常常在幡然醒悟后又开始惊叹自己的无所谓生和无所谓死。</p>\n</blockquote>\n<p>一个人的日子不是让你颓废丧志的得过且过，而是秉着向死而生的顽强，蜕变出一个更加完美的自己，才会无愧于下一段美好的时光。</p>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>生活就像棋局，身为士卒的你只知进而不知退，满盘皆输之时，才会去思考当初为什么会那样走。</p>\n</blockquote>\n<h4 id=\"一座城市，一方故事。\"><a href=\"#一座城市，一方故事。\" class=\"headerlink\" title=\"一座城市，一方故事。\"></a>一座城市，一方故事。</h4><p>来北京的第一个新年，我们选择了分开。</p>\n<p>回到老家，我一个人在楼上悲伤了很久，直到手机响起。</p>\n<p>“回家了吗？出来玩”。简单的几个字，让我暖了好久，我下楼，小峥拿着球，嘲讽的看着我。</p>\n<p>“你消息可真灵通”。</p>\n<p>“我还知道你失恋了”。</p>\n<p>“……”。</p>\n<p>“来流一场汗吧”，他把球扔过来。</p>\n<p>我诧异于他的行为，更庆幸自己又多了种宣泄的方式，毕竟对于一个不抽烟不喝酒的落寞者，我还真想不到用何种方式来开导自己。</p>\n<p>那天流了很多汗，也流了很多泪。</p>\n<p>小峥说，别把自己当做别人的全世界，也别把别人当做自己的全世界。</p>","more":"<h4 id=\"一朝春尽红颜老，花落人亡两不知。\"><a href=\"#一朝春尽红颜老，花落人亡两不知。\" class=\"headerlink\" title=\"一朝春尽红颜老，花落人亡两不知。\"></a>一朝春尽红颜老，花落人亡两不知。</h4><p>回到北京，换了房子，收拾杂物的时候看到了多年以前的日记本，才回想起，曾经在一起的日子，我抛弃了很多原本属于我的东西。我刚筑起的防线又一次崩塌，于是我买了台电脑，疯狂的打了一个月的游戏，直到生日半夜的电话。是小峥，他说他毕业了就会来北京找我玩。而我丧心病狂的问他，如果我无法将她移出自己的世界，那我是不是可以进入另一个世界。我告诉他我已经玩了一个月的游戏，黑夜里我笑出了声，回声却将我刺得生疼。小峥顿了很久，漫长的呼吸声渐变成失望的叹息，“那么你又在另一个世界里找到了只手遮天的感觉了？你没有。你只是自欺欺人的数落着自己时光，如果时间可以抹平一切伤口，而你就是不停的在伤口痊愈前满足着你自己那份痒的私欲，最终剩下的只是那丑陋无比的疤痕！”</p>\n<p>我挂了电话，躺在床上，我头一次被别人骂得这么酣畅淋漓。我们常常因为生活中的一些变故，而失去了继续走下去的勇气，取而代之的是以此来满足自己的私欲，来逃避眼前的事实。其实，世界还是那个世界。</p>\n<blockquote>\n<p>你当时就像一个脱光的乞丐，试图阐述着自己的可怜与悲情。小峥说。</p>\n</blockquote>\n<h4 id=\"love-is-zero，zero-is-start\"><a href=\"#love-is-zero，zero-is-start\" class=\"headerlink\" title=\"love is zero，zero is start.\"></a>love is zero，zero is start.</h4><p>人只有在落单的时候，才会去思考一些剧情的设定。想想当初的自己到现在为什么就突然就成了一个人，为什么别人送的书本就积满了灰尘堆砌在角落，为什么自己的不足仍要试图推脱自己的责任，怪这座城市的世俗和现实。</p>\n<p>1个月前，我完成了公司通讯项目的设计，继而接手了另一个我完全不熟的JS领域。就像年初的时候一样，身边熟悉的东西都被撤走，但不同的是我也能保持着积极的态度，去迎接即将到来的故事。</p>\n<blockquote>\n<p>我们常常在幡然醒悟后又开始惊叹自己的无所谓生和无所谓死。</p>\n</blockquote>\n<p>一个人的日子不是让你颓废丧志的得过且过，而是秉着向死而生的顽强，蜕变出一个更加完美的自己，才会无愧于下一段美好的时光。</p>"}],"PostAsset":[],"PostCategory":[{"post_id":"ck2ek6q860001i3nmejcxfzo4","category_id":"ck2ek6qav000bi3nmhnbsy5au","_id":"ck2ek6qc0000li3nmco685mni"},{"post_id":"ck2ek6q890002i3nm8b8z3rp2","category_id":"ck2ek6qav000bi3nmhnbsy5au","_id":"ck2ek6qc0000mi3nmaeh61ppi"},{"post_id":"ck2ek6q8a0003i3nm3ze3mzhz","category_id":"ck2ek6qav000bi3nmhnbsy5au","_id":"ck2ek6qc0000ni3nmmkvy876z"},{"post_id":"ck2ek6q8b0004i3nmonn8a93w","category_id":"ck2ek6qav000bi3nmhnbsy5au","_id":"ck2ek6qc1000oi3nmwht2wf0l"},{"post_id":"ck2ek6q8c0005i3nm4ge7ygro","category_id":"ck2ek6qb2000fi3nmxwo6b57h","_id":"ck2ek6qc1000pi3nmvd4b1224"},{"post_id":"ck2ek6q8d0006i3nm6vga99f9","category_id":"ck2ek6qb2000fi3nmxwo6b57h","_id":"ck2ek6qc1000qi3nmlvrh2ajc"},{"post_id":"ck2ek6q8e0007i3nme4qebbst","category_id":"ck2ek6qb2000fi3nmxwo6b57h","_id":"ck2ek6qc1000ri3nmbq765n91"},{"post_id":"ck2ek6q8f0008i3nmmb75ye57","category_id":"ck2ek6qb2000fi3nmxwo6b57h","_id":"ck2ek6qc1000si3nmeckcht8a"},{"post_id":"ck2ek6q8f0009i3nm7nv1vou9","category_id":"ck2ek6qb2000fi3nmxwo6b57h","_id":"ck2ek6qc1000ti3nm5wfd59fh"},{"post_id":"ck2ek6q8g000ai3nm24h5idhe","category_id":"ck2ek6qb2000fi3nmxwo6b57h","_id":"ck2ek6qc2000ui3nm9sy0elv1"}],"PostTag":[],"Tag":[]}}